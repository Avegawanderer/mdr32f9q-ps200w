; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\FLASH\main.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\FLASH\main.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\src\fonts -I.\ -I.\src -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\Library\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\portable\RVDS\ARM_CM3\ -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\include -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\FLASH\main.crf main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  EEPROM_test PROC
;;;48     //==============================================================//
;;;49     uint8_t EEPROM_test(void)
000000  b538              PUSH     {r3-r5,lr}
;;;50     {
;;;51     	
;;;52     	  //uint8_t eeprom_data_wr[] = {0x55, 0x66, 0x77, 0x88};
;;;53     	  //uint16_t wait_cnt = 0;
;;;54     		uint8_t eeprom_data_rd[4];
;;;55     		uint8_t error = 0;
000002  2400              MOVS     r4,#0
;;;56     		
;;;57     	/*
;;;58     		error = EEPROMReady();
;;;59     		error = EEPROMWriteBlock(0x0000,eeprom_data_wr,4);
;;;60     		while (!EEPROMReady())
;;;61     		{
;;;62     			wait_cnt++;
;;;63     			//DWTDelayUs(10);
;;;64     		}
;;;65     	  error = EEPROMWriteBlock(0x07FC,eeprom_data_wr,4);
;;;66       */
;;;67     	
;;;68     		error = EEPROMReadBlock(0x0000,eeprom_data_rd,4);
000004  2204              MOVS     r2,#4
000006  4669              MOV      r1,sp
000008  2000              MOVS     r0,#0
00000a  f7fffffe          BL       EEPROMReadBlock
00000e  4604              MOV      r4,r0
;;;69     	  if (*((uint32_t*)eeprom_data_rd) != 0x88776655)
000010  494c              LDR      r1,|L1.324|
000012  9800              LDR      r0,[sp,#0]
000014  4288              CMP      r0,r1
000016  d001              BEQ      |L1.28|
;;;70     			error |= 0x01;
000018  f0440401          ORR      r4,r4,#1
                  |L1.28|
;;;71     		
;;;72     	  error = EEPROMReadBlock(0x07FC,eeprom_data_rd,4);
00001c  2204              MOVS     r2,#4
00001e  4669              MOV      r1,sp
000020  f24070fc          MOV      r0,#0x7fc
000024  f7fffffe          BL       EEPROMReadBlock
000028  4604              MOV      r4,r0
;;;73     	  if (*((uint32_t*)eeprom_data_rd) != 0x44332211)
00002a  4947              LDR      r1,|L1.328|
00002c  9800              LDR      r0,[sp,#0]
00002e  4288              CMP      r0,r1
000030  d001              BEQ      |L1.54|
;;;74     			error |= 0x02;
000032  f0440402          ORR      r4,r4,#2
                  |L1.54|
;;;75     		
;;;76     		return error;
000036  4620              MOV      r0,r4
;;;77     }
000038  bd38              POP      {r3-r5,pc}
;;;78     
                          ENDP

                  main PROC
;;;116    ******************************************************************************/
;;;117    int main(void)
00003a  b51f              PUSH     {r0-r4,lr}
;;;118    
;;;119    {
;;;120    	
;;;121    
;;;122    	//=============================================//
;;;123    	// system initialization
;;;124    	//=============================================//
;;;125    	Setup_CPU_Clock();
00003c  f7fffffe          BL       Setup_CPU_Clock
;;;126    	DWT_Init();
000040  f7fffffe          BL       DWT_Init
;;;127    	HW_SSPInit();
000044  f7fffffe          BL       HW_SSPInit
;;;128    	HW_I2CInit();
000048  f7fffffe          BL       HW_I2CInit
;;;129    	HW_TimersInit();
00004c  f7fffffe          BL       HW_TimersInit
;;;130    	HW_PortInit();
000050  f7fffffe          BL       HW_PortInit
;;;131    	HW_ADCInit();
000054  f7fffffe          BL       HW_ADCInit
;;;132    	HW_UARTInit();
000058  f7fffffe          BL       HW_UARTInit
;;;133    	LcdInit();
00005c  f7fffffe          BL       LcdInit
;;;134    	
;;;135    	UARTInit();
000060  f7fffffe          BL       UARTInit
;;;136    	
;;;137    	InitButtons();
000064  f7fffffe          BL       InitButtons
;;;138    	ProcessButtons();
000068  f7fffffe          BL       ProcessButtons
;;;139    	// Default feedback channel select
;;;140    	if (buttons.raw_state & SW_CHANNEL)
00006c  4837              LDR      r0,|L1.332|
00006e  8800              LDRH     r0,[r0,#0]  ; buttons
000070  f0100f20          TST      r0,#0x20
000074  d003              BEQ      |L1.126|
;;;141    		Converter_Init(CHANNEL_5V);
000076  2001              MOVS     r0,#1
000078  f7fffffe          BL       Converter_Init
00007c  e002              B        |L1.132|
                  |L1.126|
;;;142    	else
;;;143    		Converter_Init(CHANNEL_12V);
00007e  2000              MOVS     r0,#0
000080  f7fffffe          BL       Converter_Init
                  |L1.132|
;;;144    	
;;;145    	
;;;146    	// Enable interrupt
;;;147    	NVIC_EnableIRQ(Timer2_IRQn);
000084  200f              MOVS     r0,#0xf
000086  2101              MOVS     r1,#1
000088  4081              LSLS     r1,r1,r0
00008a  0942              LSRS     r2,r0,#5
00008c  f04f23e0          MOV      r3,#0xe000e000
000090  eb030282          ADD      r2,r3,r2,LSL #2
000094  f8c21100          STR      r1,[r2,#0x100]
000098  bf00              NOP      
;;;148    	
;;;149    	
;;;150    	SetCoolerSpeed(80);
00009a  2050              MOVS     r0,#0x50
00009c  f7fffffe          BL       SetCoolerSpeed
;;;151    	LcdSetBacklight(85);
0000a0  2055              MOVS     r0,#0x55
0000a2  f7fffffe          BL       LcdSetBacklight
;;;152    	
;;;153    	// Reset time statistics
;;;154    	time_profile.max_ticks_in_Systick_hook = 0;
0000a6  2000              MOVS     r0,#0
0000a8  4929              LDR      r1,|L1.336|
0000aa  6008              STR      r0,[r1,#0]  ; time_profile
;;;155    	time_profile.max_ticks_in_Timer2_ISR = 0;
0000ac  6048              STR      r0,[r1,#4]  ; time_profile
;;;156    	
;;;157    	
;;;158    	xTaskCreate( vTaskGUI, 			( signed char * ) "GUI top", 		configMINIMAL_STACK_SIZE, NULL, 1, ( xTaskHandle * ) NULL);
0000ae  2301              MOVS     r3,#1
0000b0  e9cd3000          STRD     r3,r0,[sp,#0]
0000b4  9002              STR      r0,[sp,#8]
0000b6  4603              MOV      r3,r0
0000b8  2280              MOVS     r2,#0x80
0000ba  a126              ADR      r1,|L1.340|
0000bc  9003              STR      r0,[sp,#0xc]
0000be  4827              LDR      r0,|L1.348|
0000c0  f7fffffe          BL       xTaskGenericCreate
;;;159    	xTaskCreate( vTaskConverter, 	( signed char * ) "Converter", 		configMINIMAL_STACK_SIZE, NULL, 2, ( xTaskHandle * ) NULL);
0000c4  2000              MOVS     r0,#0
0000c6  2302              MOVS     r3,#2
0000c8  e9cd3000          STRD     r3,r0,[sp,#0]
0000cc  9002              STR      r0,[sp,#8]
0000ce  4603              MOV      r3,r0
0000d0  2280              MOVS     r2,#0x80
0000d2  a123              ADR      r1,|L1.352|
0000d4  9003              STR      r0,[sp,#0xc]
0000d6  4825              LDR      r0,|L1.364|
0000d8  f7fffffe          BL       xTaskGenericCreate
;;;160    	xTaskCreate( vTaskService, 		( signed char * ) "Service", 		configMINIMAL_STACK_SIZE, NULL, 0, ( xTaskHandle * ) NULL);
0000dc  2000              MOVS     r0,#0
0000de  9000              STR      r0,[sp,#0]
0000e0  9001              STR      r0,[sp,#4]
0000e2  9002              STR      r0,[sp,#8]
0000e4  4603              MOV      r3,r0
0000e6  2280              MOVS     r2,#0x80
0000e8  a121              ADR      r1,|L1.368|
0000ea  9003              STR      r0,[sp,#0xc]
0000ec  4822              LDR      r0,|L1.376|
0000ee  f7fffffe          BL       xTaskGenericCreate
;;;161    	xTaskCreate( vTaskDispatcher, 	( signed char * ) "Dispatcher", 	configMINIMAL_STACK_SIZE, NULL, 3, ( xTaskHandle * ) NULL);
0000f2  2000              MOVS     r0,#0
0000f4  2303              MOVS     r3,#3
0000f6  e9cd3000          STRD     r3,r0,[sp,#0]
0000fa  9002              STR      r0,[sp,#8]
0000fc  4603              MOV      r3,r0
0000fe  2280              MOVS     r2,#0x80
000100  a11e              ADR      r1,|L1.380|
000102  9003              STR      r0,[sp,#0xc]
000104  4820              LDR      r0,|L1.392|
000106  f7fffffe          BL       xTaskGenericCreate
;;;162    	xTaskCreate( vTaskADC, 			( signed char * ) "ADC", 			configMINIMAL_STACK_SIZE, NULL, 2, ( xTaskHandle * ) NULL);
00010a  2000              MOVS     r0,#0
00010c  2302              MOVS     r3,#2
00010e  e9cd3000          STRD     r3,r0,[sp,#0]
000112  9002              STR      r0,[sp,#8]
000114  4603              MOV      r3,r0
000116  2280              MOVS     r2,#0x80
000118  a11c              ADR      r1,|L1.396|
00011a  9003              STR      r0,[sp,#0xc]
00011c  481c              LDR      r0,|L1.400|
00011e  f7fffffe          BL       xTaskGenericCreate
;;;163    	xTaskCreate( vTaskUARTReceiver, ( signed char * ) "UART2 RX", 		256, 					  NULL, 2, ( xTaskHandle * ) NULL);
000122  2000              MOVS     r0,#0
000124  2302              MOVS     r3,#2
000126  e9cd3000          STRD     r3,r0,[sp,#0]
00012a  9002              STR      r0,[sp,#8]
00012c  4603              MOV      r3,r0
00012e  f44f7280          MOV      r2,#0x100
000132  a118              ADR      r1,|L1.404|
000134  9003              STR      r0,[sp,#0xc]
000136  481a              LDR      r0,|L1.416|
000138  f7fffffe          BL       xTaskGenericCreate
;;;164    	
;;;165    	vTaskStartScheduler();
00013c  f7fffffe          BL       vTaskStartScheduler
;;;166    	
;;;167    
;;;168    	while(1);
000140  bf00              NOP      
                  |L1.322|
000142  e7fe              B        |L1.322|
;;;169    	
;;;170    }
;;;171    
                          ENDP

                  |L1.324|
                          DCD      0x88776655
                  |L1.328|
                          DCD      0x44332211
                  |L1.332|
                          DCD      buttons
                  |L1.336|
                          DCD      time_profile
                  |L1.340|
000154  47554920          DCB      "GUI top",0
000158  746f7000
                  |L1.348|
                          DCD      vTaskGUI
                  |L1.352|
000160  436f6e76          DCB      "Converter",0
000164  65727465
000168  7200    
00016a  00                DCB      0
00016b  00                DCB      0
                  |L1.364|
                          DCD      vTaskConverter
                  |L1.368|
000170  53657276          DCB      "Service",0
000174  69636500
                  |L1.376|
                          DCD      vTaskService
                  |L1.380|
00017c  44697370          DCB      "Dispatcher",0
000180  61746368
000184  657200  
000187  00                DCB      0
                  |L1.392|
                          DCD      vTaskDispatcher
                  |L1.396|
00018c  41444300          DCB      "ADC",0
                  |L1.400|
                          DCD      vTaskADC
                  |L1.404|
000194  55415254          DCB      "UART2 RX",0
000198  32205258
00019c  00      
00019d  00                DCB      0
00019e  00                DCB      0
00019f  00                DCB      0
                  |L1.416|
                          DCD      vTaskUARTReceiver

;*** Start embedded assembler ***

#line 1 "main.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_main_c_93a79840____REV16|
#line 115 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_93a79840____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_main_c_93a79840____REVSH|
#line 130
|__asm___6_main_c_93a79840____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
