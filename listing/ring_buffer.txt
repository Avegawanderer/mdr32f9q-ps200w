; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\FLASH\ring_buffer.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\FLASH\ring_buffer.d --cpu=Cortex-M3 --apcs=interwork -O1 -I.\src\fonts -I.\ -I.\src -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\Library\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\portable\RVDS\ARM_CM3\ -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\include -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\FLASH\ring_buffer.crf src\ring_buffer.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  initRingBuffer PROC
;;;6      
;;;7      void initRingBuffer(ring_buffer_t *rb, char *data, uint16_t size)
000000  f64f73fa          MOV      r3,#0xfffa
;;;8      {
;;;9      	rb->read_count = 0xFFFA;
000004  8143              STRH     r3,[r0,#0xa]
;;;10     	rb->write_count = 0xFFFA;
000006  8103              STRH     r3,[r0,#8]
;;;11     	rb->head_index = 0;
000008  2300              MOVS     r3,#0
00000a  80c3              STRH     r3,[r0,#6]
;;;12     	rb->tail_index = 0;
00000c  8083              STRH     r3,[r0,#4]
;;;13     	rb->size = size;
00000e  8182              STRH     r2,[r0,#0xc]
;;;14     	rb->data = data;
000010  6001              STR      r1,[r0,#0]
;;;15     }
000012  4770              BX       lr
;;;16     
                          ENDP

                  putIntoRingBuffer PROC
;;;17     
;;;18     uint8_t putIntoRingBuffer(ring_buffer_t *rb, char item)
000014  8902              LDRH     r2,[r0,#8]
;;;19     {
;;;20     	if ((uint16_t)(rb->write_count - rb->read_count) < rb->size)
000016  8943              LDRH     r3,[r0,#0xa]
000018  1ad2              SUBS     r2,r2,r3
00001a  8983              LDRH     r3,[r0,#0xc]
00001c  b292              UXTH     r2,r2
00001e  429a              CMP      r2,r3
000020  d210              BCS      |L1.68|
;;;21     	{
;;;22     		rb->data[rb->tail_index] = item;
000022  8883              LDRH     r3,[r0,#4]
000024  6802              LDR      r2,[r0,#0]
000026  54d1              STRB     r1,[r2,r3]
;;;23     		rb->tail_index = (rb->tail_index < (rb->size - 1)) ? rb->tail_index + 1 : 0;
000028  8982              LDRH     r2,[r0,#0xc]
00002a  8881              LDRH     r1,[r0,#4]
00002c  1e52              SUBS     r2,r2,#1
00002e  4291              CMP      r1,r2
000030  da01              BGE      |L1.54|
000032  1c49              ADDS     r1,r1,#1
000034  e000              B        |L1.56|
                  |L1.54|
000036  2100              MOVS     r1,#0
                  |L1.56|
000038  8081              STRH     r1,[r0,#4]
;;;24     		rb->write_count++;
00003a  8901              LDRH     r1,[r0,#8]
00003c  1c49              ADDS     r1,r1,#1
00003e  8101              STRH     r1,[r0,#8]
;;;25     		return 1;
000040  2001              MOVS     r0,#1
;;;26     	}
;;;27     	return 0;
;;;28     }
000042  4770              BX       lr
                  |L1.68|
000044  2000              MOVS     r0,#0                 ;27
000046  4770              BX       lr
;;;29     
                          ENDP

                  getFromRingBuffer PROC
;;;30     
;;;31     uint8_t getFromRingBuffer(ring_buffer_t *rb,  char *item)
000048  8902              LDRH     r2,[r0,#8]
;;;32     {
;;;33     	if ((uint16_t)(rb->write_count - rb->read_count) > 0)
00004a  8943              LDRH     r3,[r0,#0xa]
00004c  1ad2              SUBS     r2,r2,r3
00004e  0412              LSLS     r2,r2,#16
000050  0c12              LSRS     r2,r2,#16
000052  d011              BEQ      |L1.120|
;;;34     	{
;;;35     		*item = rb->data[rb->head_index];
000054  88c3              LDRH     r3,[r0,#6]
000056  6802              LDR      r2,[r0,#0]
000058  5cd2              LDRB     r2,[r2,r3]
00005a  700a              STRB     r2,[r1,#0]
;;;36     		rb->head_index = (rb->head_index < (rb->size - 1)) ? rb->head_index + 1 : 0;
00005c  8982              LDRH     r2,[r0,#0xc]
00005e  88c1              LDRH     r1,[r0,#6]
000060  1e52              SUBS     r2,r2,#1
000062  4291              CMP      r1,r2
000064  da01              BGE      |L1.106|
000066  1c49              ADDS     r1,r1,#1
000068  e000              B        |L1.108|
                  |L1.106|
00006a  2100              MOVS     r1,#0
                  |L1.108|
00006c  80c1              STRH     r1,[r0,#6]
;;;37     		rb->read_count++;
00006e  8941              LDRH     r1,[r0,#0xa]
000070  1c49              ADDS     r1,r1,#1
000072  8141              STRH     r1,[r0,#0xa]
;;;38     		return 1;
000074  2001              MOVS     r0,#1
;;;39     	}
;;;40     	return 0;
;;;41     }
000076  4770              BX       lr
                  |L1.120|
000078  2000              MOVS     r0,#0                 ;40
00007a  4770              BX       lr
;;;42     
                          ENDP

