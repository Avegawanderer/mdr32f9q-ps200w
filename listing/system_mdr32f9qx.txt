; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\FLASH\system_mdr32f9qx.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\FLASH\system_mdr32f9qx.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\src\fonts -I.\ -I.\src -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\Library\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\portable\RVDS\ARM_CM3\ -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\include -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\FLASH\system_mdr32f9qx.crf ..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm\system_MDR32F9Qx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;62       */
;;;63     void SystemCoreClockUpdate (void)
000000  b530              PUSH     {r4,r5,lr}
;;;64     {
;;;65       uint32_t cpu_c1_freq, cpu_c2_freq, cpu_c3_freq;
;;;66       uint32_t pll_mul;
;;;67     
;;;68       /* Compute CPU_CLK frequency */
;;;69     
;;;70       /* Determine CPU_C1 frequency */
;;;71       if ((MDR_RST_CLK->CPU_CLOCK & (uint32_t)0x00000002) == (uint32_t)0x00000002)
000002  4c2e              LDR      r4,|L1.188|
000004  68e4              LDR      r4,[r4,#0xc]
000006  f0040402          AND      r4,r4,#2
00000a  2c02              CMP      r4,#2
00000c  d101              BNE      |L1.18|
;;;72       {
;;;73         cpu_c1_freq = HSE_Value;
00000e  482c              LDR      r0,|L1.192|
000010  e000              B        |L1.20|
                  |L1.18|
;;;74       }
;;;75       else
;;;76       {
;;;77         cpu_c1_freq = HSI_Value;
000012  482c              LDR      r0,|L1.196|
                  |L1.20|
;;;78       }
;;;79     
;;;80       if ((MDR_RST_CLK->CPU_CLOCK & (uint32_t)0x00000001) == (uint32_t)0x00000001)
000014  4c29              LDR      r4,|L1.188|
000016  68e4              LDR      r4,[r4,#0xc]
000018  f0040401          AND      r4,r4,#1
00001c  2c01              CMP      r4,#1
00001e  d100              BNE      |L1.34|
;;;81       {
;;;82         cpu_c1_freq /= 2;
000020  0840              LSRS     r0,r0,#1
                  |L1.34|
;;;83       }
;;;84     
;;;85       /* Determine CPU_C2 frequency */
;;;86       cpu_c2_freq = cpu_c1_freq;
000022  4601              MOV      r1,r0
;;;87     
;;;88       if ((MDR_RST_CLK->CPU_CLOCK & (uint32_t)0x00000004) == (uint32_t)0x00000004)
000024  4c25              LDR      r4,|L1.188|
000026  68e4              LDR      r4,[r4,#0xc]
000028  f0040404          AND      r4,r4,#4
00002c  2c04              CMP      r4,#4
00002e  d105              BNE      |L1.60|
;;;89       {
;;;90         /* Determine CPU PLL output frequency */
;;;91         pll_mul = ((MDR_RST_CLK->PLL_CONTROL >> 8) & (uint32_t)0x0F) + 1;
000030  4c22              LDR      r4,|L1.188|
000032  6864              LDR      r4,[r4,#4]
000034  f3c42403          UBFX     r4,r4,#8,#4
000038  1c63              ADDS     r3,r4,#1
;;;92         cpu_c2_freq *= pll_mul;
00003a  4359              MULS     r1,r3,r1
                  |L1.60|
;;;93       }
;;;94     
;;;95       /*Select CPU_CLK from HSI, CPU_C3, LSE, LSI cases */
;;;96       switch ((MDR_RST_CLK->CPU_CLOCK >> 8) & (uint32_t)0x03)
00003c  4c1f              LDR      r4,|L1.188|
00003e  68e4              LDR      r4,[r4,#0xc]
000040  f3c42401          UBFX     r4,r4,#8,#2
000044  b124              CBZ      r4,|L1.80|
000046  2c01              CMP      r4,#1
000048  d006              BEQ      |L1.88|
00004a  2c02              CMP      r4,#2
00004c  d113              BNE      |L1.118|
00004e  e00d              B        |L1.108|
                  |L1.80|
;;;97       {
;;;98         case 0 :
;;;99           /* HSI */
;;;100          SystemCoreClock = HSI_Value;
000050  4c1c              LDR      r4,|L1.196|
000052  4d1d              LDR      r5,|L1.200|
000054  602c              STR      r4,[r5,#0]  ; SystemCoreClock
;;;101          break;
000056  e013              B        |L1.128|
                  |L1.88|
;;;102        case 1 :
;;;103          /* CPU_C3 */
;;;104          /* Determine CPU_C3 frequency */
;;;105          cpu_c3_freq = cpu_c2_freq / ((MDR_RST_CLK->CPU_CLOCK >> 4 & (uint32_t)0x0F) + 1);
000058  4c18              LDR      r4,|L1.188|
00005a  68e4              LDR      r4,[r4,#0xc]
00005c  f3c41403          UBFX     r4,r4,#4,#4
000060  1c64              ADDS     r4,r4,#1
000062  fbb1f2f4          UDIV     r2,r1,r4
;;;106          SystemCoreClock = cpu_c3_freq;
000066  4c18              LDR      r4,|L1.200|
000068  6022              STR      r2,[r4,#0]  ; SystemCoreClock
;;;107          break;
00006a  e009              B        |L1.128|
                  |L1.108|
;;;108        case 2 :
;;;109          /* LSE */
;;;110          SystemCoreClock = LSE_Value;
00006c  f44f4400          MOV      r4,#0x8000
000070  4d15              LDR      r5,|L1.200|
000072  602c              STR      r4,[r5,#0]  ; SystemCoreClock
;;;111          break;
000074  e004              B        |L1.128|
                  |L1.118|
;;;112        default : /* case 3 */
;;;113          /* LSI */
;;;114          SystemCoreClock = LSI_Value;
000076  f6494440          MOV      r4,#0x9c40
00007a  4d13              LDR      r5,|L1.200|
00007c  602c              STR      r4,[r5,#0]  ; SystemCoreClock
;;;115          break;
00007e  bf00              NOP      
                  |L1.128|
000080  bf00              NOP                            ;101
;;;116      }
;;;117    }
000082  bd30              POP      {r4,r5,pc}
;;;118    
                          ENDP

                  SystemInit PROC
;;;126      */
;;;127    void SystemInit (void)
000084  b500              PUSH     {lr}
;;;128    {
;;;129    	/* Reset the RST clock configuration to the default reset state */
;;;130    
;;;131      /* Reset all clock but RST_CLK & BKP_CLC bits */
;;;132      MDR_RST_CLK->PER_CLOCK   = (uint32_t)0x8000010;
000086  4811              LDR      r0,|L1.204|
000088  490c              LDR      r1,|L1.188|
00008a  61c8              STR      r0,[r1,#0x1c]
;;;133    
;;;134      /* Reset CPU_CLOCK bits */
;;;135      MDR_RST_CLK->CPU_CLOCK   &= (uint32_t)0x00000000;
00008c  4608              MOV      r0,r1
00008e  68c0              LDR      r0,[r0,#0xc]
000090  2000              MOVS     r0,#0
000092  60c8              STR      r0,[r1,#0xc]
;;;136    
;;;137      /* Reset PLL_CONTROL bits */
;;;138      MDR_RST_CLK->PLL_CONTROL &= (uint32_t)0x00000000;
000094  4608              MOV      r0,r1
000096  6840              LDR      r0,[r0,#4]
000098  2000              MOVS     r0,#0
00009a  6048              STR      r0,[r1,#4]
;;;139    
;;;140      /* Reset HSEON and HSEBYP bits */
;;;141      MDR_RST_CLK->HS_CONTROL  &= (uint32_t)0x00000000;
00009c  4608              MOV      r0,r1
00009e  6880              LDR      r0,[r0,#8]
0000a0  2000              MOVS     r0,#0
0000a2  6088              STR      r0,[r1,#8]
;;;142    
;;;143      /* Reset USB_CLOCK bits */
;;;144      MDR_RST_CLK->USB_CLOCK   &= (uint32_t)0x00000000;
0000a4  4608              MOV      r0,r1
0000a6  6900              LDR      r0,[r0,#0x10]
0000a8  2000              MOVS     r0,#0
0000aa  6108              STR      r0,[r1,#0x10]
;;;145    
;;;146      /* Reset ADC_MCO_CLOCK bits */
;;;147      MDR_RST_CLK->ADC_MCO_CLOCK   &= (uint32_t)0x00000000;
0000ac  4608              MOV      r0,r1
0000ae  6940              LDR      r0,[r0,#0x14]
0000b0  2000              MOVS     r0,#0
0000b2  6148              STR      r0,[r1,#0x14]
;;;148    
;;;149      SystemCoreClockUpdate();
0000b4  f7fffffe          BL       SystemCoreClockUpdate
;;;150    }
0000b8  bd00              POP      {pc}
;;;151    
                          ENDP

0000ba  0000              DCW      0x0000
                  |L1.188|
                          DCD      0x40020000
                  |L1.192|
                          DCD      0x003d0900
                  |L1.196|
                          DCD      0x007a1200
                  |L1.200|
                          DCD      SystemCoreClock
                  |L1.204|
                          DCD      0x08000010

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x007a1200

;*** Start embedded assembler ***

#line 1 "..\\Library\\Libraries\\CMSIS\\CM3\\DeviceSupport\\MDR32F9Qx\\startup\\arm\\system_MDR32F9Qx.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___18_system_MDR32F9Qx_c_5d646a67____REV16|
#line 115 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___18_system_MDR32F9Qx_c_5d646a67____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___18_system_MDR32F9Qx_c_5d646a67____REVSH|
#line 130
|__asm___18_system_MDR32F9Qx_c_5d646a67____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
