; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\FLASH\guispinbox.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\FLASH\guispinbox.d --cpu=Cortex-M3 --apcs=interwork -O1 -I.\src\fonts -I.\ -I.\src -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\Library\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\portable\RVDS\ARM_CM3\ -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\include -I.\src\gui -I.\src\gui\guiCore -I.\src\gui\guiWidgets -I.\src\gui\guiGraphics -I.\src\gui\utils -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\FLASH\guispinbox.crf src\gui\guiWidgets\guiSpinBox.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  guiSpinBox_SetActiveDigit PROC
;;;60     
;;;61     void guiSpinBox_SetActiveDigit(guiSpinBox_t *spinBox, int8_t num)
000000  b51c              PUSH     {r2-r4,lr}
;;;62     {
;;;63         uint8_t newActiveDigit;
;;;64         guiEvent_t event;
;;;65         if (spinBox != 0)
000002  2800              CMP      r0,#0
000004  d020              BEQ      |L1.72|
;;;66         {
;;;67             newActiveDigit = (num >= spinBox->digitsToDisplay) ? spinBox->digitsToDisplay - 1 :
000006  f8902044          LDRB     r2,[r0,#0x44]
00000a  428a              CMP      r2,r1
00000c  dc01              BGT      |L1.18|
00000e  1e51              SUBS     r1,r2,#1
000010  e002              B        |L1.24|
                  |L1.18|
;;;68                                                                  ((num < 0) ? 0 : num);
000012  2900              CMP      r1,#0
000014  da00              BGE      |L1.24|
000016  2100              MOVS     r1,#0
                  |L1.24|
000018  b2c9              UXTB     r1,r1
;;;69             if (newActiveDigit != spinBox->activeDigit)
00001a  f8902026          LDRB     r2,[r0,#0x26]
00001e  428a              CMP      r2,r1
000020  d012              BEQ      |L1.72|
;;;70             {
;;;71                 spinBox->activeDigit = newActiveDigit;
000022  f1000008          ADD      r0,r0,#8
000026  7781              STRB     r1,[r0,#0x1e]
;;;72                 spinBox->redrawDigitSelection = 1;
000028  7f01              LDRB     r1,[r0,#0x1c]
00002a  f0410104          ORR      r1,r1,#4
00002e  7701              STRB     r1,[r0,#0x1c]
;;;73                 spinBox->redrawRequired = 1;
000030  7801              LDRB     r1,[r0,#0]
000032  f0410140          ORR      r1,r1,#0x40
000036  f8001908          STRB     r1,[r0],#-8
;;;74                 // Call handler
;;;75                 event.type = SPINBOX_ACTIVE_DIGIT_CHANGED;
00003a  f04f01c3          MOV      r1,#0xc3
00003e  f88d1000          STRB     r1,[sp,#0]
;;;76                 guiCore_CallEventHandler((guiGenericWidget_t *)spinBox, &event);
000042  4669              MOV      r1,sp
000044  f7fffffe          BL       guiCore_CallEventHandler
                  |L1.72|
;;;77             }
;;;78         }
;;;79     }
000048  bd1c              POP      {r2-r4,pc}
;;;80     
                          ENDP

                  guiSpinBox_SetValue PROC
;;;81     
;;;82     void guiSpinBox_SetValue(guiSpinBox_t *spinBox, int32_t value, uint8_t callHandler)
00004a  b57c              PUSH     {r2-r6,lr}
;;;83     {
00004c  4604              MOV      r4,r0
00004e  4608              MOV      r0,r1
000050  4615              MOV      r5,r2
;;;84         int32_t newValue;
;;;85         guiEvent_t event;
;;;86         if (spinBox != 0)
000052  2c00              CMP      r4,#0
000054  d02e              BEQ      |L1.180|
;;;87         {
;;;88             newValue = (value < spinBox->minValue) ? spinBox->minValue :
000056  6b61              LDR      r1,[r4,#0x34]
000058  4281              CMP      r1,r0
00005a  dd01              BLE      |L1.96|
00005c  4608              MOV      r0,r1
00005e  e003              B        |L1.104|
                  |L1.96|
;;;89                        ((value > spinBox->maxValue) ? spinBox->maxValue : value);
000060  6b21              LDR      r1,[r4,#0x30]
000062  4281              CMP      r1,r0
000064  da00              BGE      |L1.104|
000066  4608              MOV      r0,r1
                  |L1.104|
;;;90     
;;;91             if (newValue != spinBox->value)
000068  6aa1              LDR      r1,[r4,#0x28]
00006a  4281              CMP      r1,r0
00006c  d022              BEQ      |L1.180|
;;;92             {
;;;93                 spinBox->value = newValue;
00006e  f1040408          ADD      r4,r4,#8
000072  6220              STR      r0,[r4,#0x20]
;;;94                 spinBox->redrawValue = 1;
000074  7f21              LDRB     r1,[r4,#0x1c]
000076  f0410102          ORR      r1,r1,#2
00007a  7721              STRB     r1,[r4,#0x1c]
;;;95                 spinBox->redrawRequired = 1;
00007c  7821              LDRB     r1,[r4,#0]
00007e  f0410140          ORR      r1,r1,#0x40
000082  7021              STRB     r1,[r4,#0]
;;;96                 spinBox->digitsToDisplay = i32toa_align_right(spinBox->value, spinBox->text,
000084  7f63              LDRB     r3,[r4,#0x1d]
000086  f1a40408          SUB      r4,r4,#8
00008a  f04f028c          MOV      r2,#0x8c
00008e  f1040138          ADD      r1,r4,#0x38
000092  f7fffffe          BL       i32toa_align_right
000096  f8840044          STRB     r0,[r4,#0x44]
;;;97                                            SPINBOX_STRING_LENGTH | NO_TERMINATING_ZERO, spinBox->minDigitsToDisplay);
;;;98                 // Call handler
;;;99                 if (callHandler)
00009a  b135              CBZ      r5,|L1.170|
;;;100                {
;;;101                    event.type = SPINBOX_VALUE_CHANGED;
00009c  20c1              MOVS     r0,#0xc1
00009e  f88d0000          STRB     r0,[sp,#0]
;;;102                    guiCore_CallEventHandler((guiGenericWidget_t *)spinBox, &event);
0000a2  4669              MOV      r1,sp
0000a4  4620              MOV      r0,r4
0000a6  f7fffffe          BL       guiCore_CallEventHandler
                  |L1.170|
;;;103                }
;;;104                // Check active digit position
;;;105                guiSpinBox_SetActiveDigit(spinBox, spinBox->activeDigit);
0000aa  f9941026          LDRSB    r1,[r4,#0x26]
0000ae  4620              MOV      r0,r4
0000b0  f7fffffe          BL       guiSpinBox_SetActiveDigit
                  |L1.180|
;;;106            }
;;;107        }
;;;108    }
0000b4  bd7c              POP      {r2-r6,pc}
;;;109    
                          ENDP

                  guiSpinBox_SetActive PROC
;;;20     
;;;21     uint8_t guiSpinBox_SetActive(guiSpinBox_t *spinBox, uint8_t newActiveState, uint8_t restoreValue)
0000b6  b51c              PUSH     {r2-r4,lr}
;;;22     {
0000b8  4604              MOV      r4,r0
;;;23         guiEvent_t event;
;;;24         if (spinBox == 0) return 0;
0000ba  b134              CBZ      r4,|L1.202|
;;;25     
;;;26         if (newActiveState)
0000bc  b171              CBZ      r1,|L1.220|
;;;27         {
;;;28             // Activate
;;;29             if (spinBox->isActive) return 0;
0000be  f8940024          LDRB     r0,[r4,#0x24]
0000c2  0701              LSLS     r1,r0,#28
0000c4  d503              BPL      |L1.206|
0000c6  2000              MOVS     r0,#0
;;;30             spinBox->isActive = 1;
;;;31             spinBox->savedValue = spinBox->value;
;;;32         }
;;;33         else
;;;34         {
;;;35             // Deactivate
;;;36             if (spinBox->isActive == 0) return 0;
;;;37             spinBox->isActive = 0;
;;;38             if ((spinBox->restoreValueOnEscape) && (restoreValue))
;;;39             {
;;;40                 guiSpinBox_SetValue(spinBox, spinBox->savedValue, 1);
;;;41                 spinBox->newValueAccepted = 0;
;;;42             }
;;;43             else
;;;44             {
;;;45                 spinBox->newValueAccepted = 1;
;;;46             }
;;;47         }
;;;48         // Active state changed - call handler
;;;49         spinBox->redrawDigitSelection = 1;
;;;50         spinBox->redrawRequired = 1;
;;;51         if (spinBox->handlers.count != 0)
;;;52         {
;;;53             event.type = SPINBOX_ACTIVE_CHANGED;
;;;54             guiCore_CallEventHandler((guiGenericWidget_t *)spinBox, &event);
;;;55         }
;;;56         return 1;
;;;57     }
0000c8  bd1c              POP      {r2-r4,pc}
                  |L1.202|
0000ca  2000              MOVS     r0,#0                 ;24
0000cc  bd1c              POP      {r2-r4,pc}
                  |L1.206|
0000ce  f0400008          ORR      r0,r0,#8              ;30
0000d2  f8840024          STRB     r0,[r4,#0x24]         ;30
0000d6  6aa0              LDR      r0,[r4,#0x28]         ;31
0000d8  62e0              STR      r0,[r4,#0x2c]         ;31
0000da  e01c              B        |L1.278|
                  |L1.220|
0000dc  f8940024          LDRB     r0,[r4,#0x24]         ;36
0000e0  0701              LSLS     r1,r0,#28             ;36
0000e2  d401              BMI      |L1.232|
0000e4  2000              MOVS     r0,#0                 ;36
0000e6  bd1c              POP      {r2-r4,pc}
                  |L1.232|
0000e8  f0200008          BIC      r0,r0,#8              ;37
0000ec  f8840024          STRB     r0,[r4,#0x24]         ;37
0000f0  06c1              LSLS     r1,r0,#27             ;38
0000f2  d50c              BPL      |L1.270|
0000f4  b15a              CBZ      r2,|L1.270|
0000f6  2201              MOVS     r2,#1                 ;40
0000f8  4620              MOV      r0,r4                 ;40
0000fa  6ae1              LDR      r1,[r4,#0x2c]         ;40
0000fc  f7fffffe          BL       guiSpinBox_SetValue
000100  f8940024          LDRB     r0,[r4,#0x24]         ;41
000104  f0200020          BIC      r0,r0,#0x20           ;41
000108  f8840024          STRB     r0,[r4,#0x24]         ;41
00010c  e003              B        |L1.278|
                  |L1.270|
00010e  f0400020          ORR      r0,r0,#0x20           ;45
000112  f8840024          STRB     r0,[r4,#0x24]         ;45
                  |L1.278|
000116  f8940024          LDRB     r0,[r4,#0x24]         ;49
00011a  f0400004          ORR      r0,r0,#4              ;49
00011e  f8840024          STRB     r0,[r4,#0x24]         ;49
000122  7a20              LDRB     r0,[r4,#8]            ;50
000124  f0400040          ORR      r0,r0,#0x40           ;50
000128  7220              STRB     r0,[r4,#8]            ;50
00012a  7e20              LDRB     r0,[r4,#0x18]         ;51
00012c  b130              CBZ      r0,|L1.316|
00012e  20c0              MOVS     r0,#0xc0              ;53
000130  f88d0000          STRB     r0,[sp,#0]            ;53
000134  4669              MOV      r1,sp                 ;54
000136  4620              MOV      r0,r4                 ;54
000138  f7fffffe          BL       guiCore_CallEventHandler
                  |L1.316|
00013c  2001              MOVS     r0,#1                 ;56
00013e  bd1c              POP      {r2-r4,pc}
;;;58     
                          ENDP

                  guiSpinBox_IncrementValue PROC
;;;109    
;;;110    void guiSpinBox_IncrementValue(guiSpinBox_t *spinBox, int32_t delta)
000140  b430              PUSH     {r4,r5}
;;;111    {
;;;112        int32_t mul_c = 1;
000142  2301              MOVS     r3,#1
;;;113        uint8_t i;
;;;114        if ((spinBox != 0) && (delta != 0))
000144  2800              CMP      r0,#0
000146  d012              BEQ      |L1.366|
000148  2900              CMP      r1,#0
00014a  d010              BEQ      |L1.366|
;;;115        {
;;;116            for (i=0;i<spinBox->activeDigit;i++)
00014c  2200              MOVS     r2,#0
00014e  f8904026          LDRB     r4,[r0,#0x26]
000152  e004              B        |L1.350|
                  |L1.340|
;;;117            {
;;;118                mul_c *= 10;
000154  eb030383          ADD      r3,r3,r3,LSL #2
000158  005b              LSLS     r3,r3,#1
00015a  1c52              ADDS     r2,r2,#1              ;116
00015c  b2d2              UXTB     r2,r2                 ;116
                  |L1.350|
00015e  4294              CMP      r4,r2                 ;116
000160  d8f8              BHI      |L1.340|
;;;119            }
;;;120            delta *= mul_c;
000162  4359              MULS     r1,r3,r1
;;;121            guiSpinBox_SetValue(spinBox, spinBox->value + delta, 1);
000164  6a82              LDR      r2,[r0,#0x28]
000166  bc30              POP      {r4,r5}
000168  4411              ADD      r1,r1,r2
00016a  2201              MOVS     r2,#1
00016c  e7fe              B        guiSpinBox_SetValue
                  |L1.366|
;;;122        }
;;;123    }
00016e  bc30              POP      {r4,r5}
000170  4770              BX       lr
;;;124    
                          ENDP

                  guiSpinBox_ProcessKey PROC
;;;133    //-------------------------------------------------------//
;;;134    uint8_t guiSpinBox_ProcessKey(guiSpinBox_t *spinBox, uint8_t key)
000172  b510              PUSH     {r4,lr}
;;;135    {
;;;136        if (spinBox->isActive)
000174  f8902024          LDRB     r2,[r0,#0x24]
000178  0712              LSLS     r2,r2,#28
00017a  d52e              BPL      |L1.474|
;;;137        {
;;;138            if (key == SPINBOX_KEY_SELECT)
00017c  2901              CMP      r1,#1
00017e  d00b              BEQ      |L1.408|
;;;139            {
;;;140                guiSpinBox_SetActive(spinBox, 0, 0);
;;;141            }
;;;142            else if (key == SPINBOX_KEY_EXIT)
000180  2902              CMP      r1,#2
000182  d00e              BEQ      |L1.418|
;;;143            {
;;;144                guiSpinBox_SetActive(spinBox, 0, 1);
;;;145            }
;;;146            else if (key == SPINBOX_KEY_LEFT)
000184  2904              CMP      r1,#4
000186  d011              BEQ      |L1.428|
;;;147            {
;;;148                // move active digit left
;;;149                guiSpinBox_SetActiveDigit(spinBox, spinBox->activeDigit + 1);
;;;150            }
;;;151            else if (key == SPINBOX_KEY_RIGHT)
000188  2903              CMP      r1,#3
00018a  d016              BEQ      |L1.442|
;;;152            {
;;;153                // move active digit right
;;;154                guiSpinBox_SetActiveDigit(spinBox, spinBox->activeDigit - 1);
;;;155            }
;;;156            else if (key == SPINBOX_KEY_UP)
00018c  2905              CMP      r1,#5
00018e  d01b              BEQ      |L1.456|
;;;157            {
;;;158                // increase value
;;;159                guiSpinBox_IncrementValue(spinBox, 1);
;;;160            }
;;;161            else if (key == SPINBOX_KEY_DOWN)
000190  2906              CMP      r1,#6
000192  d01d              BEQ      |L1.464|
;;;162            {
;;;163                //decrease value
;;;164                guiSpinBox_IncrementValue(spinBox, -1);
;;;165            }
;;;166            else
;;;167            {
;;;168                return GUI_EVENT_DECLINE;
000194  2000              MOVS     r0,#0
;;;169            }
;;;170        }
;;;171        else
;;;172        {
;;;173            if (key == SPINBOX_KEY_SELECT)
;;;174            {
;;;175                guiSpinBox_SetActive(spinBox, 1, 0);
;;;176            }
;;;177            else
;;;178            {
;;;179                return GUI_EVENT_DECLINE;
;;;180            }
;;;181        }
;;;182    
;;;183        return GUI_EVENT_ACCEPTED;
;;;184    }
000196  bd10              POP      {r4,pc}
                  |L1.408|
000198  2200              MOVS     r2,#0                 ;140
00019a  4611              MOV      r1,r2                 ;140
00019c  f7fffffe          BL       guiSpinBox_SetActive
0001a0  e023              B        |L1.490|
                  |L1.418|
0001a2  2201              MOVS     r2,#1                 ;144
0001a4  2100              MOVS     r1,#0                 ;144
0001a6  f7fffffe          BL       guiSpinBox_SetActive
0001aa  e01e              B        |L1.490|
                  |L1.428|
0001ac  f8901026          LDRB     r1,[r0,#0x26]         ;149
0001b0  1c49              ADDS     r1,r1,#1              ;149
0001b2  b249              SXTB     r1,r1                 ;149
0001b4  f7fffffe          BL       guiSpinBox_SetActiveDigit
0001b8  e017              B        |L1.490|
                  |L1.442|
0001ba  f8901026          LDRB     r1,[r0,#0x26]         ;154
0001be  1e49              SUBS     r1,r1,#1              ;154
0001c0  b249              SXTB     r1,r1                 ;154
0001c2  f7fffffe          BL       guiSpinBox_SetActiveDigit
0001c6  e010              B        |L1.490|
                  |L1.456|
0001c8  2101              MOVS     r1,#1                 ;159
0001ca  f7fffffe          BL       guiSpinBox_IncrementValue
0001ce  e00c              B        |L1.490|
                  |L1.464|
0001d0  f04f31ff          MOV      r1,#0xffffffff        ;164
0001d4  f7fffffe          BL       guiSpinBox_IncrementValue
0001d8  e007              B        |L1.490|
                  |L1.474|
0001da  2901              CMP      r1,#1                 ;173
0001dc  d001              BEQ      |L1.482|
0001de  2000              MOVS     r0,#0                 ;179
0001e0  bd10              POP      {r4,pc}
                  |L1.482|
0001e2  2200              MOVS     r2,#0                 ;175
0001e4  2101              MOVS     r1,#1                 ;175
0001e6  f7fffffe          BL       guiSpinBox_SetActive
                  |L1.490|
0001ea  2001              MOVS     r0,#1                 ;183
0001ec  bd10              POP      {r4,pc}
;;;185    
                          ENDP

                  guiSpinBox_ProcessEvent PROC
;;;193    //-------------------------------------------------------//
;;;194    uint8_t guiSpinBox_ProcessEvent(guiGenericWidget_t *widget, guiEvent_t event)
0001ee  b537              PUSH     {r0-r2,r4,r5,lr}
;;;195    {
0001f0  4604              MOV      r4,r0
;;;196        guiSpinBox_t *spinBox = (guiSpinBox_t *)widget;
;;;197        uint8_t processResult = GUI_EVENT_ACCEPTED;
0001f2  2501              MOVS     r5,#1
;;;198        uint8_t key;
;;;199    
;;;200        switch (event.type)
0001f4  f89d0004          LDRB     r0,[sp,#4]
0001f8  2809              CMP      r0,#9
0001fa  d02e              BEQ      |L1.602|
0001fc  dc08              BGT      |L1.528|
0001fe  2801              CMP      r0,#1
000200  d013              BEQ      |L1.554|
000202  2806              CMP      r0,#6
000204  d04b              BEQ      |L1.670|
000206  2807              CMP      r0,#7
000208  d044              BEQ      |L1.660|
00020a  2808              CMP      r0,#8
00020c  d106              BNE      |L1.540|
00020e  e02e              B        |L1.622|
                  |L1.528|
000210  280b              CMP      r0,#0xb
000212  d05f              BEQ      |L1.724|
000214  280c              CMP      r0,#0xc
000216  d047              BEQ      |L1.680|
000218  2840              CMP      r0,#0x40
00021a  d032              BEQ      |L1.642|
                  |L1.540|
;;;201        {
;;;202            case GUI_EVENT_DRAW:
;;;203                guiGraph_DrawSpinBox(spinBox);
;;;204                // Call handler
;;;205                guiCore_CallEventHandler(widget, &event);
;;;206                // Reset flags - redrawForced will be reset by core
;;;207                spinBox->redrawFocus = 0;
;;;208                spinBox->redrawDigitSelection = 0;
;;;209                spinBox->redrawValue = 0;
;;;210                spinBox->redrawRequired = 0;
;;;211                break;
;;;212            case GUI_EVENT_FOCUS:
;;;213                if (SPINBOX_ACCEPTS_FOCUS_EVENT(spinBox))
;;;214                    guiCore_SetFocused((guiGenericWidget_t *)spinBox,1);
;;;215                else
;;;216                    processResult = GUI_EVENT_DECLINE;      // Cannot accept focus
;;;217                break;
;;;218            case GUI_EVENT_UNFOCUS:
;;;219                guiCore_SetFocused((guiGenericWidget_t *)spinBox,0);
;;;220                guiSpinBox_SetActive(spinBox, 0, 0);        // Do not restore
;;;221                //spinBox->keepTouch = 0;
;;;222                break;
;;;223            case SPINBOX_EVENT_ACTIVATE:
;;;224                if (spinBox->isFocused)
;;;225                {
;;;226                    guiSpinBox_SetActive(spinBox, 1, 0);
;;;227                }
;;;228                // Accept event anyway
;;;229                break;
;;;230            case GUI_EVENT_SHOW:
;;;231                guiCore_SetVisible((guiGenericWidget_t *)spinBox, 1);
;;;232                break;
;;;233            case GUI_EVENT_HIDE:
;;;234                guiCore_SetVisible((guiGenericWidget_t *)spinBox, 0);
;;;235                break;
;;;236            case GUI_EVENT_ENCODER:
;;;237                processResult = GUI_EVENT_DECLINE;
;;;238                if (SPINBOX_ACCEPTS_ENCODER_EVENT(spinBox))
;;;239                {
;;;240                    if (spinBox->isActive)
;;;241                    {
;;;242                        guiSpinBox_IncrementValue(spinBox, (int16_t)event.lparam);
;;;243                        processResult = GUI_EVENT_ACCEPTED;
;;;244                    }
;;;245                    processResult |= guiCore_CallEventHandler(widget, &event);
;;;246                }
;;;247                break;
;;;248            case GUI_EVENT_KEY:
;;;249                processResult = GUI_EVENT_DECLINE;
;;;250                if (SPINBOX_ACCEPTS_KEY_EVENT(spinBox))
;;;251                {
;;;252                    if (event.spec == GUI_KEY_EVENT_DOWN)
;;;253                    {
;;;254                        if (event.lparam == GUI_KEY_OK)
;;;255                            key = SPINBOX_KEY_SELECT;
;;;256                        else if (event.lparam == GUI_KEY_ESC)
;;;257                            key = SPINBOX_KEY_EXIT;
;;;258                        else if (event.lparam == GUI_KEY_LEFT)
;;;259                            key = SPINBOX_KEY_LEFT;
;;;260                        else if (event.lparam == GUI_KEY_RIGHT)
;;;261                            key = SPINBOX_KEY_RIGHT;
;;;262                        else if (event.lparam == GUI_KEY_UP)
;;;263                            key = SPINBOX_KEY_UP;
;;;264                        else if (event.lparam == GUI_KEY_DOWN)
;;;265                            key = SPINBOX_KEY_DOWN;
;;;266                        else
;;;267                            key = 0;
;;;268                        if (key != 0)
;;;269                            processResult = guiSpinBox_ProcessKey(spinBox,key);
;;;270                    }
;;;271                    // Call KEY event handler
;;;272                    processResult |= guiCore_CallEventHandler(widget, &event);
;;;273                }
;;;274                break;
;;;275    
;;;276            default:
;;;277                // Widget cannot process incoming event. Try to find a handler.
;;;278                processResult = guiCore_CallEventHandler(widget, &event);
00021c  a901              ADD      r1,sp,#4
00021e  4620              MOV      r0,r4
000220  f7fffffe          BL       guiCore_CallEventHandler
000224  4605              MOV      r5,r0
                  |L1.550|
;;;279        }
;;;280        return processResult;
000226  4628              MOV      r0,r5
;;;281    }
000228  bd3e              POP      {r1-r5,pc}
                  |L1.554|
00022a  4620              MOV      r0,r4                 ;203
00022c  f7fffffe          BL       guiGraph_DrawSpinBox
000230  a901              ADD      r1,sp,#4              ;205
000232  4620              MOV      r0,r4                 ;205
000234  f7fffffe          BL       guiCore_CallEventHandler
000238  f1040408          ADD      r4,r4,#8              ;207
00023c  7860              LDRB     r0,[r4,#1]            ;207
00023e  f0200001          BIC      r0,r0,#1              ;207
000242  7060              STRB     r0,[r4,#1]            ;207
000244  7f20              LDRB     r0,[r4,#0x1c]         ;208
000246  f0200004          BIC      r0,r0,#4              ;208
00024a  f0200002          BIC      r0,r0,#2              ;209
00024e  7720              STRB     r0,[r4,#0x1c]         ;209
000250  7820              LDRB     r0,[r4,#0]            ;210
000252  f0200040          BIC      r0,r0,#0x40           ;210
000256  7020              STRB     r0,[r4,#0]            ;210
000258  e7e5              B        |L1.550|
                  |L1.602|
00025a  7a20              LDRB     r0,[r4,#8]            ;213
00025c  06c0              LSLS     r0,r0,#27             ;213
00025e  d504              BPL      |L1.618|
000260  2101              MOVS     r1,#1                 ;214
000262  4620              MOV      r0,r4                 ;214
000264  f7fffffe          BL       guiCore_SetFocused
000268  e7dd              B        |L1.550|
                  |L1.618|
00026a  2500              MOVS     r5,#0                 ;216
00026c  e7db              B        |L1.550|
                  |L1.622|
00026e  2100              MOVS     r1,#0                 ;219
000270  4620              MOV      r0,r4                 ;219
000272  f7fffffe          BL       guiCore_SetFocused
000276  2200              MOVS     r2,#0                 ;220
000278  4611              MOV      r1,r2                 ;220
00027a  4620              MOV      r0,r4                 ;220
00027c  f7fffffe          BL       guiSpinBox_SetActive
000280  e7d1              B        |L1.550|
                  |L1.642|
000282  7a20              LDRB     r0,[r4,#8]            ;224
000284  0700              LSLS     r0,r0,#28             ;224
000286  d5ce              BPL      |L1.550|
000288  2200              MOVS     r2,#0                 ;226
00028a  2101              MOVS     r1,#1                 ;226
00028c  4620              MOV      r0,r4                 ;226
00028e  f7fffffe          BL       guiSpinBox_SetActive
000292  e7c8              B        |L1.550|
                  |L1.660|
000294  2101              MOVS     r1,#1                 ;231
000296  4620              MOV      r0,r4                 ;231
000298  f7fffffe          BL       guiCore_SetVisible
00029c  e7c3              B        |L1.550|
                  |L1.670|
00029e  2100              MOVS     r1,#0                 ;234
0002a0  4620              MOV      r0,r4                 ;234
0002a2  f7fffffe          BL       guiCore_SetVisible
0002a6  e7be              B        |L1.550|
                  |L1.680|
0002a8  2500              MOVS     r5,#0                 ;237
0002aa  7a20              LDRB     r0,[r4,#8]            ;238
0002ac  0701              LSLS     r1,r0,#28             ;238
0002ae  d5ba              BPL      |L1.550|
0002b0  06c0              LSLS     r0,r0,#27             ;238
0002b2  d5b8              BPL      |L1.550|
0002b4  f8940024          LDRB     r0,[r4,#0x24]         ;240
0002b8  0700              LSLS     r0,r0,#28             ;240
0002ba  d505              BPL      |L1.712|
0002bc  f9bd1006          LDRSH    r1,[sp,#6]            ;242
0002c0  4620              MOV      r0,r4                 ;242
0002c2  f7fffffe          BL       guiSpinBox_IncrementValue
0002c6  2501              MOVS     r5,#1                 ;243
                  |L1.712|
0002c8  a901              ADD      r1,sp,#4              ;245
0002ca  4620              MOV      r0,r4                 ;245
0002cc  f7fffffe          BL       guiCore_CallEventHandler
0002d0  4305              ORRS     r5,r5,r0              ;245
0002d2  e7a8              B        |L1.550|
                  |L1.724|
0002d4  2500              MOVS     r5,#0                 ;249
0002d6  7a20              LDRB     r0,[r4,#8]            ;250
0002d8  0701              LSLS     r1,r0,#28             ;250
0002da  d5a4              BPL      |L1.550|
0002dc  06c0              LSLS     r0,r0,#27             ;250
0002de  d5a2              BPL      |L1.550|
0002e0  f89d0005          LDRB     r0,[sp,#5]            ;252
0002e4  2801              CMP      r0,#1                 ;252
0002e6  d113              BNE      |L1.784|
0002e8  f8bd0006          LDRH     r0,[sp,#6]            ;254
0002ec  2802              CMP      r0,#2                 ;254
0002ee  d015              BEQ      |L1.796|
0002f0  2801              CMP      r0,#1                 ;256
0002f2  d015              BEQ      |L1.800|
0002f4  2803              CMP      r0,#3                 ;258
0002f6  d015              BEQ      |L1.804|
0002f8  2804              CMP      r0,#4                 ;260
0002fa  d015              BEQ      |L1.808|
0002fc  2805              CMP      r0,#5                 ;262
0002fe  d015              BEQ      |L1.812|
000300  2806              CMP      r0,#6                 ;264
000302  d015              BEQ      |L1.816|
000304  2100              MOVS     r1,#0                 ;267
                  |L1.774|
000306  b119              CBZ      r1,|L1.784|
000308  4620              MOV      r0,r4                 ;269
00030a  f7fffffe          BL       guiSpinBox_ProcessKey
00030e  4605              MOV      r5,r0                 ;269
                  |L1.784|
000310  a901              ADD      r1,sp,#4              ;272
000312  4620              MOV      r0,r4                 ;272
000314  f7fffffe          BL       guiCore_CallEventHandler
000318  4305              ORRS     r5,r5,r0              ;272
00031a  e784              B        |L1.550|
                  |L1.796|
00031c  2101              MOVS     r1,#1                 ;255
00031e  e7f2              B        |L1.774|
                  |L1.800|
000320  2102              MOVS     r1,#2                 ;257
000322  e7f0              B        |L1.774|
                  |L1.804|
000324  2104              MOVS     r1,#4                 ;259
000326  e7ee              B        |L1.774|
                  |L1.808|
000328  2103              MOVS     r1,#3                 ;261
00032a  e7ec              B        |L1.774|
                  |L1.812|
00032c  2105              MOVS     r1,#5                 ;263
00032e  e7ea              B        |L1.774|
                  |L1.816|
000330  2106              MOVS     r1,#6                 ;265
000332  e7e8              B        |L1.774|
;;;282    
                          ENDP

                  guiSpinBox_Initialize PROC
;;;290    //-------------------------------------------------------//
;;;291    void guiSpinBox_Initialize(guiSpinBox_t *spinBox, guiGenericWidget_t *parent)
000334  b570              PUSH     {r4-r6,lr}
;;;292    {
000336  4604              MOV      r4,r0
000338  460d              MOV      r5,r1
;;;293        memset(spinBox, 0, sizeof(*spinBox));
00033a  2148              MOVS     r1,#0x48
00033c  4620              MOV      r0,r4
00033e  f7fffffe          BL       __aeabi_memclr4
;;;294        spinBox->type = WT_SPINBOX;
000342  2006              MOVS     r0,#6
000344  7020              STRB     r0,[r4,#0]
;;;295        spinBox->parent = parent;
000346  6065              STR      r5,[r4,#4]
;;;296        spinBox->acceptFocusByTab = 1;
000348  7a20              LDRB     r0,[r4,#8]
00034a  f0400001          ORR      r0,r0,#1
;;;297        spinBox->isVisible = 1;
00034e  f0400010          ORR      r0,r0,#0x10
000352  7220              STRB     r0,[r4,#8]
;;;298        spinBox->showFocus = 1;
000354  7a60              LDRB     r0,[r4,#9]
000356  f0400002          ORR      r0,r0,#2
00035a  7260              STRB     r0,[r4,#9]
;;;299        spinBox->processEvent = guiSpinBox_ProcessEvent;
00035c  f2af1071          ADR      r0,guiSpinBox_ProcessEvent + 1
000360  6160              STR      r0,[r4,#0x14]
;;;300        spinBox->minDigitsToDisplay = 1;
000362  2001              MOVS     r0,#1
000364  f8840025          STRB     r0,[r4,#0x25]
;;;301        spinBox->maxValue = INT32_MAX;
000368  f06f4000          MVN      r0,#0x80000000
00036c  6320              STR      r0,[r4,#0x30]
;;;302        spinBox->minValue = INT32_MIN;
00036e  07c0              LSLS     r0,r0,#31
000370  6360              STR      r0,[r4,#0x34]
;;;303    }
000372  bd70              POP      {r4-r6,pc}
;;;304    
                          ENDP

