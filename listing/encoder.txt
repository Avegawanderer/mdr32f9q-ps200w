; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\FLASH\encoder.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\FLASH\encoder.d --cpu=Cortex-M3 --apcs=interwork -O1 -I.\src\fonts -I.\ -I.\src -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\Library\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\portable\RVDS\ARM_CM3\ -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\include -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\FLASH\encoder.crf src\encoder.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  ProcessEncoder PROC
;;;18     
;;;19     void ProcessEncoder(void)
000000  491a              LDR      r1,|L1.108|
;;;20     {
;;;21     	static uint8_t enc_state = 0;
;;;22     	enc_state = enc_state << 2;
000002  7808              LDRB     r0,[r1,#0]  ; enc_state
000004  0680              LSLS     r0,r0,#26
000006  0e00              LSRS     r0,r0,#24
000008  7008              STRB     r0,[r1,#0]
;;;23     	
;;;24     	// Get new encoder state
;;;25     	if (MDR_PORTB->RXTX & (1<<ENCA)) 
00000a  4a19              LDR      r2,|L1.112|
00000c  6813              LDR      r3,[r2,#0]
00000e  05db              LSLS     r3,r3,#23
000010  d502              BPL      |L1.24|
;;;26     		enc_state |= 0x01;
000012  f0400001          ORR      r0,r0,#1
000016  7008              STRB     r0,[r1,#0]
                  |L1.24|
;;;27     	if (MDR_PORTB->RXTX & (1<<ENCB)) 
000018  6810              LDR      r0,[r2,#0]
00001a  0580              LSLS     r0,r0,#22
00001c  d503              BPL      |L1.38|
;;;28     		enc_state |= 0x02;
00001e  7808              LDRB     r0,[r1,#0]  ; enc_state
000020  f0400002          ORR      r0,r0,#2
000024  7008              STRB     r0,[r1,#0]
                  |L1.38|
;;;29     	
;;;30     	// Detect direction
;;;31     	switch(enc_state & 0x0F)
000026  7808              LDRB     r0,[r1,#0]  ; enc_state
000028  f000000f          AND      r0,r0,#0xf
00002c  280f              CMP      r0,#0xf
00002e  d20c              BCS      |L1.74|
000030  e8dff000          TBB      [pc,r0]
000034  0b0c080b          DCB      0x0b,0x0c,0x08,0x0b
000038  080b0b0c          DCB      0x08,0x0b,0x0b,0x0c
00003c  0c0b0b08          DCB      0x0c,0x0b,0x0b,0x08
000040  0b080c00          DCB      0x0b,0x08,0x0c,0x00
;;;32     	{
;;;33     		case 0x2: case 0x4: case 0xB: case 0xD:
;;;34     			encoder_counter --;
000044  8848              LDRH     r0,[r1,#2]  ; encoder_counter
000046  1e40              SUBS     r0,r0,#1
000048  8048              STRH     r0,[r1,#2]
                  |L1.74|
;;;35     		break;
;;;36     		case 0x1: case 0x7: case 0x8: case 0xE:
;;;37     			encoder_counter ++;
;;;38     		break;
;;;39     	}
;;;40     }
00004a  4770              BX       lr
00004c  8848              LDRH     r0,[r1,#2]            ;37  ; encoder_counter
00004e  1c40              ADDS     r0,r0,#1              ;37
000050  8048              STRH     r0,[r1,#2]            ;37
000052  4770              BX       lr
;;;41     
                          ENDP

                  UpdateEncoderDelta PROC
;;;42     
;;;43     void UpdateEncoderDelta(void)
000054  4905              LDR      r1,|L1.108|
;;;44     {
;;;45     	static int16_t old_counter = 0;
;;;46     	int16_t delta = old_counter;
000056  888a              LDRH     r2,[r1,#4]  ; old_counter
;;;47     	old_counter = encoder_counter&0xFFFC;
000058  8848              LDRH     r0,[r1,#2]  ; encoder_counter
00005a  f64f73fc          MOV      r3,#0xfffc
00005e  4018              ANDS     r0,r0,r3
000060  8088              STRH     r0,[r1,#4]
;;;48     	delta = old_counter - delta;
000062  1a80              SUBS     r0,r0,r2
000064  b200              SXTH     r0,r0
;;;49     	encoder_delta = delta>>2;
000066  1080              ASRS     r0,r0,#2
000068  80c8              STRH     r0,[r1,#6]
;;;50     }
00006a  4770              BX       lr
;;;51     
                          ENDP

                  |L1.108|
                          DCD      ||.data||
                  |L1.112|
                          DCD      0x400b0000

                          AREA ||.data||, DATA, ALIGN=1

                  enc_state
000000  0000              DCB      0x00,0x00
                  encoder_counter
000002  0000              DCW      0x0000
                  old_counter
000004  0000              DCW      0x0000
                  encoder_delta
000006  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "src\\encoder.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_encoder_c_1392ecb0____REV16|
#line 115 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_encoder_c_1392ecb0____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_encoder_c_1392ecb0____REVSH|
#line 130
|__asm___9_encoder_c_1392ecb0____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
