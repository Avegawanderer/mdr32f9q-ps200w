; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\FLASH\gui_top.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\FLASH\gui_top.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\src\fonts -I.\ -I.\src -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\Library\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\portable\RVDS\ARM_CM3\ -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\include -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\FLASH\gui_top.crf src\gui_top.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_c
                          REQUIRE _printf_str
                  gui_process_buttons PROC
;;;71     
;;;72     static void gui_process_buttons(void)
000000  b50e              PUSH     {r1-r3,lr}
;;;73     {
;;;74     	conveter_message_t msg;
;;;75     	msg.type = 0;
000002  2000              MOVS     r0,#0
000004  9000              STR      r0,[sp,#0]
;;;76     	
;;;77     	//-------------------------------------------//
;;;78     	// Switch regulation parameter
;;;79     	
;;;80     	if (buttons.action_down & BTN_ENCODER)
000006  48e2              LDR      r0,|L1.912|
000008  8840              LDRH     r0,[r0,#2]  ; buttons
00000a  f0100f10          TST      r0,#0x10
00000e  d00c              BEQ      |L1.42|
;;;81     	{
;;;82     		(param==2) ? param=0 : param++;
000010  48e0              LDR      r0,|L1.916|
000012  7800              LDRB     r0,[r0,#0]  ; param
000014  2802              CMP      r0,#2
000016  d103              BNE      |L1.32|
000018  2000              MOVS     r0,#0
00001a  49de              LDR      r1,|L1.916|
00001c  7008              STRB     r0,[r1,#0]
00001e  e004              B        |L1.42|
                  |L1.32|
000020  48dc              LDR      r0,|L1.916|
000022  7800              LDRB     r0,[r0,#0]  ; param
000024  1c40              ADDS     r0,r0,#1
000026  49db              LDR      r1,|L1.916|
000028  7008              STRB     r0,[r1,#0]
                  |L1.42|
;;;83     		
;;;84     	}
;;;85     		
;;;86     		
;;;87     	//-------------------------------------------//
;;;88     	// Apply regulation
;;;89     		
;;;90     	if (encoder_delta)
00002a  48db              LDR      r0,|L1.920|
00002c  8800              LDRH     r0,[r0,#0]  ; encoder_delta
00002e  b378              CBZ      r0,|L1.144|
;;;91     	switch (param)
000030  48d8              LDR      r0,|L1.916|
000032  7800              LDRB     r0,[r0,#0]  ; param
000034  b120              CBZ      r0,|L1.64|
000036  2801              CMP      r0,#1
000038  d012              BEQ      |L1.96|
00003a  2802              CMP      r0,#2
00003c  d12c              BNE      |L1.152|
00003e  e01f              B        |L1.128|
                  |L1.64|
;;;92     	{
;;;93     		case 0:
;;;94     			msg.type = CONVERTER_SET_VOLTAGE;
000040  2007              MOVS     r0,#7
000042  9000              STR      r0,[sp,#0]
;;;95     			msg.data_a = regulation_setting_p->set_voltage + encoder_delta*500;
000044  48d5              LDR      r0,|L1.924|
000046  6800              LDR      r0,[r0,#0]  ; regulation_setting_p
000048  8840              LDRH     r0,[r0,#2]
00004a  49d3              LDR      r1,|L1.920|
00004c  f9b11000          LDRSH    r1,[r1,#0]  ; encoder_delta
000050  eb010241          ADD      r2,r1,r1,LSL #1
000054  ebc211c1          RSB      r1,r2,r1,LSL #7
000058  eb000081          ADD      r0,r0,r1,LSL #2
00005c  9001              STR      r0,[sp,#4]
;;;96     			break;
00005e  e01b              B        |L1.152|
                  |L1.96|
;;;97     		case 1:
;;;98     			msg.type = CONVERTER_SET_CURRENT;
000060  2008              MOVS     r0,#8
000062  9000              STR      r0,[sp,#0]
;;;99     			msg.data_a = regulation_setting_p->set_current + encoder_delta*500;
000064  48cd              LDR      r0,|L1.924|
000066  6800              LDR      r0,[r0,#0]  ; regulation_setting_p
000068  8a40              LDRH     r0,[r0,#0x12]
00006a  49cb              LDR      r1,|L1.920|
00006c  f9b11000          LDRSH    r1,[r1,#0]  ; encoder_delta
000070  eb010241          ADD      r2,r1,r1,LSL #1
000074  ebc211c1          RSB      r1,r2,r1,LSL #7
000078  eb000081          ADD      r0,r0,r1,LSL #2
00007c  9001              STR      r0,[sp,#4]
;;;100    			break;
00007e  e00b              B        |L1.152|
                  |L1.128|
;;;101    		case 2:
;;;102    			if (encoder_delta>0)
000080  48c5              LDR      r0,|L1.920|
000082  f9b00000          LDRSH    r0,[r0,#0]  ; encoder_delta
000086  2800              CMP      r0,#0
000088  dd03              BLE      |L1.146|
;;;103    				msg.type = SET_CURRENT_LIMIT_40A;
00008a  2006              MOVS     r0,#6
00008c  9000              STR      r0,[sp,#0]
00008e  e002              B        |L1.150|
                  |L1.144|
000090  e003              B        |L1.154|
                  |L1.146|
;;;104    			else
;;;105    				msg.type = SET_CURRENT_LIMIT_20A;
000092  2005              MOVS     r0,#5
000094  9000              STR      r0,[sp,#0]
                  |L1.150|
;;;106    			break;
000096  bf00              NOP      
                  |L1.152|
000098  bf00              NOP                            ;96
                  |L1.154|
;;;107    	}
;;;108    	if (msg.type)
00009a  9800              LDR      r0,[sp,#0]
00009c  b130              CBZ      r0,|L1.172|
;;;109    		xQueueSendToBack(xQueueConverter, &msg, 0);
00009e  2300              MOVS     r3,#0
0000a0  461a              MOV      r2,r3
0000a2  4669              MOV      r1,sp
0000a4  48be              LDR      r0,|L1.928|
0000a6  6800              LDR      r0,[r0,#0]  ; xQueueConverter
0000a8  f7fffffe          BL       xQueueGenericSend
                  |L1.172|
;;;110    	
;;;111    }
0000ac  bd0e              POP      {r1-r3,pc}
;;;112    
                          ENDP

                  gui_update_all PROC
;;;113    
;;;114    static void gui_update_all(void)
0000ae  b5f0              PUSH     {r4-r7,lr}
;;;115    {
0000b0  b08d              SUB      sp,sp,#0x34
;;;116    	char str1[20] =	"----------";
0000b2  2214              MOVS     r2,#0x14
0000b4  49bb              LDR      r1,|L1.932|
0000b6  a808              ADD      r0,sp,#0x20
0000b8  f7fffffe          BL       __aeabi_memcpy4
;;;117    	char str2[20] =	"----------";
0000bc  2214              MOVS     r2,#0x14
0000be  49b9              LDR      r1,|L1.932|
0000c0  3114              ADDS     r1,r1,#0x14
0000c2  a803              ADD      r0,sp,#0xc
0000c4  f7fffffe          BL       __aeabi_memcpy4
;;;118    		//---------------------------------------------------//
;;;119    		// Graphical representation
;;;120    		//---------------------------------------------------//
;;;121    			
;;;122    		
;;;123    		// Clear LCD buffers
;;;124    		LcdFillBuffer(lcd0_buffer,0x00);
0000c8  2100              MOVS     r1,#0
0000ca  48b7              LDR      r0,|L1.936|
0000cc  f7fffffe          BL       LcdFillBuffer
;;;125    		LcdFillBuffer(lcd1_buffer,0x00);
0000d0  2100              MOVS     r1,#0
0000d2  48b6              LDR      r0,|L1.940|
0000d4  f7fffffe          BL       LcdFillBuffer
;;;126    			
;;;127    		
;;;128    		//------------------------//
;;;129    		// Voltage section
;;;130    		//------------------------//
;;;131    	  
;;;132    	    // Measured 
;;;133    		sprintf(str1,"%5.2fV",(float)(voltage_adc)/1000 );
0000d8  48b5              LDR      r0,|L1.944|
0000da  8800              LDRH     r0,[r0,#0]  ; voltage_adc
0000dc  f7fffffe          BL       __aeabi_ui2f
0000e0  4607              MOV      r7,r0
0000e2  49b4              LDR      r1,|L1.948|
0000e4  f7fffffe          BL       __aeabi_fdiv
0000e8  4606              MOV      r6,r0
0000ea  f7fffffe          BL       __aeabi_f2d
0000ee  4604              MOV      r4,r0
0000f0  4622              MOV      r2,r4
0000f2  460b              MOV      r3,r1
0000f4  a1b0              ADR      r1,|L1.952|
0000f6  a808              ADD      r0,sp,#0x20
0000f8  f7fffffe          BL       __2sprintf
;;;134    		LcdPutSpecialStr(0,0,(uint8_t*)str1,(tSpecialFont*)&font_32x19,lcd0_buffer);
0000fc  48aa              LDR      r0,|L1.936|
0000fe  4bb0              LDR      r3,|L1.960|
000100  aa08              ADD      r2,sp,#0x20
000102  2100              MOVS     r1,#0
000104  9000              STR      r0,[sp,#0]
000106  4608              MOV      r0,r1
000108  f7fffffe          BL       LcdPutSpecialStr
;;;135    	  
;;;136    		// Set
;;;137    		sprintf(str2,"%5.2fV",(float)(regulation_setting_p->set_voltage)/1000 );
00010c  49a3              LDR      r1,|L1.924|
00010e  6809              LDR      r1,[r1,#0]  ; regulation_setting_p
000110  8848              LDRH     r0,[r1,#2]
000112  f7fffffe          BL       __aeabi_ui2f
000116  4607              MOV      r7,r0
000118  49a6              LDR      r1,|L1.948|
00011a  f7fffffe          BL       __aeabi_fdiv
00011e  4606              MOV      r6,r0
000120  f7fffffe          BL       __aeabi_f2d
000124  4604              MOV      r4,r0
000126  4622              MOV      r2,r4
000128  460b              MOV      r3,r1
00012a  a1a3              ADR      r1,|L1.952|
00012c  a803              ADD      r0,sp,#0xc
00012e  f7fffffe          BL       __2sprintf
;;;138    		LcdPutNormalStr(0,38,"SET:",(tNormalFont*)&font_8x12,lcd0_buffer);
000132  489d              LDR      r0,|L1.936|
000134  4ba3              LDR      r3,|L1.964|
000136  a2a4              ADR      r2,|L1.968|
000138  2126              MOVS     r1,#0x26
00013a  9000              STR      r0,[sp,#0]
00013c  2000              MOVS     r0,#0
00013e  f7fffffe          BL       LcdPutNormalStr
;;;139    		LcdPutSpecialStr(32,33,(uint8_t*)str2,(tSpecialFont*)&font_16x10,lcd0_buffer);
000142  4899              LDR      r0,|L1.936|
000144  4ba2              LDR      r3,|L1.976|
000146  aa03              ADD      r2,sp,#0xc
000148  2121              MOVS     r1,#0x21
00014a  9000              STR      r0,[sp,#0]
00014c  2020              MOVS     r0,#0x20
00014e  f7fffffe          BL       LcdPutSpecialStr
;;;140    			
;;;141    			
;;;142    			
;;;143    		//------------------------//
;;;144    		// Current section
;;;145    		//------------------------//
;;;146    		
;;;147    		
;;;148    		// Measured 
;;;149    		sprintf(str1,"%5.2fA",(float)(current_adc)/1000 );
000152  48a0              LDR      r0,|L1.980|
000154  8800              LDRH     r0,[r0,#0]  ; current_adc
000156  f7fffffe          BL       __aeabi_ui2f
00015a  4607              MOV      r7,r0
00015c  4995              LDR      r1,|L1.948|
00015e  f7fffffe          BL       __aeabi_fdiv
000162  4606              MOV      r6,r0
000164  f7fffffe          BL       __aeabi_f2d
000168  4604              MOV      r4,r0
00016a  4622              MOV      r2,r4
00016c  460b              MOV      r3,r1
00016e  a19a              ADR      r1,|L1.984|
000170  a808              ADD      r0,sp,#0x20
000172  f7fffffe          BL       __2sprintf
;;;150    		LcdPutSpecialStr(0,0,(uint8_t*)str1,(tSpecialFont*)&font_32x19,lcd1_buffer);
000176  488d              LDR      r0,|L1.940|
000178  4b91              LDR      r3,|L1.960|
00017a  aa08              ADD      r2,sp,#0x20
00017c  2100              MOVS     r1,#0
00017e  9000              STR      r0,[sp,#0]
000180  4608              MOV      r0,r1
000182  f7fffffe          BL       LcdPutSpecialStr
;;;151    		
;;;152    		// Set
;;;153    		sprintf(str2,"%5.2fA",(float)(regulation_setting_p->set_current)/1000 );
000186  4985              LDR      r1,|L1.924|
000188  6809              LDR      r1,[r1,#0]  ; regulation_setting_p
00018a  8a48              LDRH     r0,[r1,#0x12]
00018c  f7fffffe          BL       __aeabi_ui2f
000190  4607              MOV      r7,r0
000192  4988              LDR      r1,|L1.948|
000194  f7fffffe          BL       __aeabi_fdiv
000198  4606              MOV      r6,r0
00019a  f7fffffe          BL       __aeabi_f2d
00019e  4604              MOV      r4,r0
0001a0  4622              MOV      r2,r4
0001a2  460b              MOV      r3,r1
0001a4  a18c              ADR      r1,|L1.984|
0001a6  a803              ADD      r0,sp,#0xc
0001a8  f7fffffe          BL       __2sprintf
;;;154    		LcdPutNormalStr(0,38,"SET:",(tNormalFont*)&font_8x12,lcd1_buffer);
0001ac  487f              LDR      r0,|L1.940|
0001ae  4b85              LDR      r3,|L1.964|
0001b0  a285              ADR      r2,|L1.968|
0001b2  2126              MOVS     r1,#0x26
0001b4  9000              STR      r0,[sp,#0]
0001b6  2000              MOVS     r0,#0
0001b8  f7fffffe          BL       LcdPutNormalStr
;;;155    		LcdPutSpecialStr(32,33,(uint8_t*)str2,(tSpecialFont*)&font_16x10,lcd1_buffer);
0001bc  487b              LDR      r0,|L1.940|
0001be  4b84              LDR      r3,|L1.976|
0001c0  aa03              ADD      r2,sp,#0xc
0001c2  2121              MOVS     r1,#0x21
0001c4  9000              STR      r0,[sp,#0]
0001c6  2020              MOVS     r0,#0x20
0001c8  f7fffffe          BL       LcdPutSpecialStr
;;;156    
;;;157    		
;;;158    			
;;;159    		
;;;160    		//------------------------//
;;;161    		// Frames LCD0
;;;162    		//------------------------//
;;;163    	
;;;164    		LcdPutHorLine(0,55,LCD_XSIZE,PIXEL_ON,lcd0_buffer);
0001cc  4876              LDR      r0,|L1.936|
0001ce  2301              MOVS     r3,#1
0001d0  2260              MOVS     r2,#0x60
0001d2  2137              MOVS     r1,#0x37
0001d4  9000              STR      r0,[sp,#0]
0001d6  2000              MOVS     r0,#0
0001d8  f7fffffe          BL       LcdPutHorLine
;;;165    		LcdPutVertLine(48,56,13,PIXEL_ON,lcd0_buffer);
0001dc  4872              LDR      r0,|L1.936|
0001de  2301              MOVS     r3,#1
0001e0  220d              MOVS     r2,#0xd
0001e2  2138              MOVS     r1,#0x38
0001e4  9000              STR      r0,[sp,#0]
0001e6  2030              MOVS     r0,#0x30
0001e8  f7fffffe          BL       LcdPutVertLine
;;;166    		
;;;167    		sprintf(str1,"%2.0f%cC",(float)converter_temp_celsius,0xb0); //0xb7 );
0001ec  487c              LDR      r0,|L1.992|
0001ee  f9b00000          LDRSH    r0,[r0,#0]  ; converter_temp_celsius
0001f2  f7fffffe          BL       __aeabi_i2f
0001f6  4606              MOV      r6,r0
0001f8  f7fffffe          BL       __aeabi_f2d
0001fc  4604              MOV      r4,r0
0001fe  20b0              MOVS     r0,#0xb0
000200  4622              MOV      r2,r4
000202  460b              MOV      r3,r1
000204  a177              ADR      r1,|L1.996|
000206  9000              STR      r0,[sp,#0]
000208  a808              ADD      r0,sp,#0x20
00020a  f7fffffe          BL       __2sprintf
;;;168    		LcdPutNormalStr(63,57,(uint8_t*)str1,(tNormalFont*)&font_8x12,lcd0_buffer);
00020e  4866              LDR      r0,|L1.936|
000210  4b6c              LDR      r3,|L1.964|
000212  aa08              ADD      r2,sp,#0x20
000214  2139              MOVS     r1,#0x39
000216  9000              STR      r0,[sp,#0]
000218  203f              MOVS     r0,#0x3f
00021a  f7fffffe          BL       LcdPutNormalStr
;;;169    		
;;;170    		if (regulation_setting_p->CHANNEL == CHANNEL_5V)
00021e  485f              LDR      r0,|L1.924|
000220  6800              LDR      r0,[r0,#0]  ; regulation_setting_p
000222  7800              LDRB     r0,[r0,#0]
000224  2801              CMP      r0,#1
000226  d108              BNE      |L1.570|
;;;171    			LcdPutNormalStr(0,57,"Ch. 5V",(tNormalFont*)&font_8x12,lcd0_buffer);
000228  485f              LDR      r0,|L1.936|
00022a  4b66              LDR      r3,|L1.964|
00022c  a270              ADR      r2,|L1.1008|
00022e  2139              MOVS     r1,#0x39
000230  9000              STR      r0,[sp,#0]
000232  2000              MOVS     r0,#0
000234  f7fffffe          BL       LcdPutNormalStr
000238  e007              B        |L1.586|
                  |L1.570|
;;;172    		else
;;;173    			LcdPutNormalStr(0,57,"Ch.12V",(tNormalFont*)&font_8x12,lcd0_buffer);
00023a  485b              LDR      r0,|L1.936|
00023c  4b61              LDR      r3,|L1.964|
00023e  a26e              ADR      r2,|L1.1016|
000240  2139              MOVS     r1,#0x39
000242  9000              STR      r0,[sp,#0]
000244  2000              MOVS     r0,#0
000246  f7fffffe          BL       LcdPutNormalStr
                  |L1.586|
;;;174    		
;;;175    		
;;;176    		
;;;177    		
;;;178    		
;;;179    		//------------------------//
;;;180    		// Frames LCD1
;;;181    		//------------------------//
;;;182    
;;;183    		LcdPutHorLine(0,55,LCD_XSIZE,PIXEL_ON,lcd1_buffer);
00024a  4858              LDR      r0,|L1.940|
00024c  2301              MOVS     r3,#1
00024e  2260              MOVS     r2,#0x60
000250  2137              MOVS     r1,#0x37
000252  9000              STR      r0,[sp,#0]
000254  2000              MOVS     r0,#0
000256  f7fffffe          BL       LcdPutHorLine
;;;184    		LcdPutVertLine(42,56,13,PIXEL_ON,lcd1_buffer);
00025a  4854              LDR      r0,|L1.940|
00025c  2301              MOVS     r3,#1
00025e  220d              MOVS     r2,#0xd
000260  2138              MOVS     r1,#0x38
000262  9000              STR      r0,[sp,#0]
000264  202a              MOVS     r0,#0x2a
000266  f7fffffe          BL       LcdPutVertLine
;;;185    		
;;;186    		
;;;187    		if (regulation_setting_p -> current_limit == CURRENT_LIM_HIGH)
00026a  484c              LDR      r0,|L1.924|
00026c  6800              LDR      r0,[r0,#0]  ; regulation_setting_p
00026e  7c40              LDRB     r0,[r0,#0x11]
000270  2801              CMP      r0,#1
000272  d108              BNE      |L1.646|
;;;188    			LcdPutNormalStr(2,57,"40A",(tNormalFont*)&font_8x12,lcd1_buffer);
000274  484d              LDR      r0,|L1.940|
000276  4b53              LDR      r3,|L1.964|
000278  a261              ADR      r2,|L1.1024|
00027a  2139              MOVS     r1,#0x39
00027c  9000              STR      r0,[sp,#0]
00027e  2002              MOVS     r0,#2
000280  f7fffffe          BL       LcdPutNormalStr
000284  e007              B        |L1.662|
                  |L1.646|
;;;189    		else
;;;190    			LcdPutNormalStr(2,57,"20A",(tNormalFont*)&font_8x12,lcd1_buffer);
000286  4849              LDR      r0,|L1.940|
000288  4b4e              LDR      r3,|L1.964|
00028a  a25e              ADR      r2,|L1.1028|
00028c  2139              MOVS     r1,#0x39
00028e  9000              STR      r0,[sp,#0]
000290  2002              MOVS     r0,#2
000292  f7fffffe          BL       LcdPutNormalStr
                  |L1.662|
;;;191    		
;;;192    		sprintf(str1,"%5.1fW",(float)(power_adc)/1000 );
000296  485c              LDR      r0,|L1.1032|
000298  6800              LDR      r0,[r0,#0]  ; power_adc
00029a  f7fffffe          BL       __aeabi_ui2f
00029e  4607              MOV      r7,r0
0002a0  4944              LDR      r1,|L1.948|
0002a2  f7fffffe          BL       __aeabi_fdiv
0002a6  4606              MOV      r6,r0
0002a8  f7fffffe          BL       __aeabi_f2d
0002ac  4604              MOV      r4,r0
0002ae  4622              MOV      r2,r4
0002b0  460b              MOV      r3,r1
0002b2  a156              ADR      r1,|L1.1036|
0002b4  a808              ADD      r0,sp,#0x20
0002b6  f7fffffe          BL       __2sprintf
;;;193    		LcdPutNormalStr(47,57,(uint8_t*)str1,(tNormalFont*)&font_8x12,lcd1_buffer);
0002ba  483c              LDR      r0,|L1.940|
0002bc  4b41              LDR      r3,|L1.964|
0002be  aa08              ADD      r2,sp,#0x20
0002c0  2139              MOVS     r1,#0x39
0002c2  9000              STR      r0,[sp,#0]
0002c4  202f              MOVS     r0,#0x2f
0002c6  f7fffffe          BL       LcdPutNormalStr
;;;194    		
;;;195    		
;;;196    	
;;;197    		//------------------------//
;;;198    		// Current or voltage regulation
;;;199    		//	selection
;;;200    		//------------------------//
;;;201    		str1[0] = '<';
0002ca  203c              MOVS     r0,#0x3c
0002cc  f88d0020          STRB     r0,[sp,#0x20]
;;;202    		str1[1] = '\0';
0002d0  2000              MOVS     r0,#0
0002d2  f88d0021          STRB     r0,[sp,#0x21]
;;;203    		switch(param)
0002d6  482f              LDR      r0,|L1.916|
0002d8  7800              LDRB     r0,[r0,#0]  ; param
0002da  b120              CBZ      r0,|L1.742|
0002dc  2801              CMP      r0,#1
0002de  d00f              BEQ      |L1.768|
0002e0  2802              CMP      r0,#2
0002e2  d127              BNE      |L1.820|
0002e4  e019              B        |L1.794|
                  |L1.742|
;;;204    			{
;;;205    				case 0:
;;;206    				  //LcdPutNormalStr(88,38,(uint8_t*)str1,(tNormalFont*)&font_8x12,lcd0_buffer);
;;;207    				  LcdPutImage((uint8_t*)imgSelect0.data,89,38,imgSelect0.width,imgSelect0.height,lcd0_buffer);
0002e6  4930              LDR      r1,|L1.936|
0002e8  484a              LDR      r0,|L1.1044|
0002ea  7840              LDRB     r0,[r0,#1]  ; imgSelect0
0002ec  e9cd0100          STRD     r0,r1,[sp,#0]
0002f0  4948              LDR      r1,|L1.1044|
0002f2  780b              LDRB     r3,[r1,#0]  ; imgSelect0
0002f4  2226              MOVS     r2,#0x26
0002f6  6848              LDR      r0,[r1,#4]  ; imgSelect0
0002f8  2159              MOVS     r1,#0x59
0002fa  f7fffffe          BL       LcdPutImage
;;;208    				  break;
0002fe  e019              B        |L1.820|
                  |L1.768|
;;;209    				case 1:
;;;210    				  //LcdPutNormalStr(88,38,(uint8_t*)str1,(tNormalFont*)&font_8x12,lcd1_buffer);
;;;211    				  LcdPutImage((uint8_t*)imgSelect0.data,89,38,imgSelect0.width,imgSelect0.height,lcd1_buffer);
000300  492a              LDR      r1,|L1.940|
000302  4844              LDR      r0,|L1.1044|
000304  7840              LDRB     r0,[r0,#1]  ; imgSelect0
000306  e9cd0100          STRD     r0,r1,[sp,#0]
00030a  4942              LDR      r1,|L1.1044|
00030c  780b              LDRB     r3,[r1,#0]  ; imgSelect0
00030e  2226              MOVS     r2,#0x26
000310  6848              LDR      r0,[r1,#4]  ; imgSelect0
000312  2159              MOVS     r1,#0x59
000314  f7fffffe          BL       LcdPutImage
;;;212    				  break;
000318  e00c              B        |L1.820|
                  |L1.794|
;;;213    				case 2:
;;;214    					//LcdPutNormalStr(33,57,(uint8_t*)str1,(tNormalFont*)&font_8x12,lcd1_buffer);
;;;215    				  LcdPutImage((uint8_t*)imgSelect0.data,35,56,imgSelect0.width,imgSelect0.height,lcd1_buffer);
00031a  4924              LDR      r1,|L1.940|
00031c  483d              LDR      r0,|L1.1044|
00031e  7840              LDRB     r0,[r0,#1]  ; imgSelect0
000320  e9cd0100          STRD     r0,r1,[sp,#0]
000324  493b              LDR      r1,|L1.1044|
000326  780b              LDRB     r3,[r1,#0]  ; imgSelect0
000328  2238              MOVS     r2,#0x38
00032a  6848              LDR      r0,[r1,#4]  ; imgSelect0
00032c  2123              MOVS     r1,#0x23
00032e  f7fffffe          BL       LcdPutImage
000332  bf00              NOP                            ;203
                  |L1.820|
000334  bf00              NOP                            ;208
;;;216    			}		
;;;217    			
;;;218    			
;;;219    		LcdUpdateByCore(LCD0,lcd0_buffer);
000336  491c              LDR      r1,|L1.936|
000338  2001              MOVS     r0,#1
00033a  f7fffffe          BL       LcdUpdateByCore
;;;220    		//vTaskDelay(1);
;;;221    		LcdUpdateByCore(LCD1,lcd1_buffer);
00033e  491b              LDR      r1,|L1.940|
000340  2002              MOVS     r0,#2
000342  f7fffffe          BL       LcdUpdateByCore
;;;222    }
000346  b00d              ADD      sp,sp,#0x34
000348  bdf0              POP      {r4-r7,pc}
;;;223    
                          ENDP

                  vTaskGUI PROC
;;;35     
;;;36     void vTaskGUI(void *pvParameters) 
00034a  b508              PUSH     {r3,lr}
;;;37     {
;;;38     	
;;;39     	
;;;40     	uint32_t msg;
;;;41     	
;;;42     	// Initialize
;;;43     	xQueueGUI = xQueueCreate( 5, sizeof( uint32_t ) );		// GUI queue can contain 5 elements of type uint32_t
00034c  2200              MOVS     r2,#0
00034e  2104              MOVS     r1,#4
000350  2005              MOVS     r0,#5
000352  f7fffffe          BL       xQueueGenericCreate
000356  4930              LDR      r1,|L1.1048|
000358  6008              STR      r0,[r1,#0]  ; xQueueGUI
;;;44     	if( xQueueGUI == 0 )
00035a  4608              MOV      r0,r1
00035c  6800              LDR      r0,[r0,#0]  ; xQueueGUI
00035e  b908              CBNZ     r0,|L1.868|
;;;45     	{
;;;46     		// Queue was not created and must not be used.
;;;47     		while(1);
000360  bf00              NOP      
                  |L1.866|
000362  e7fe              B        |L1.866|
                  |L1.868|
;;;48     	}
;;;49     	
;;;50     	
;;;51     	
;;;52     	while(1)
000364  e012              B        |L1.908|
                  |L1.870|
;;;53     	{
;;;54     		xQueueReceive(xQueueGUI, &msg, portMAX_DELAY);
000366  2300              MOVS     r3,#0
000368  1e5a              SUBS     r2,r3,#1
00036a  4669              MOV      r1,sp
00036c  482a              LDR      r0,|L1.1048|
00036e  6800              LDR      r0,[r0,#0]  ; xQueueGUI
000370  f7fffffe          BL       xQueueGenericReceive
;;;55     		switch (msg)
000374  9800              LDR      r0,[sp,#0]
000376  b110              CBZ      r0,|L1.894|
000378  2801              CMP      r0,#1
00037a  d106              BNE      |L1.906|
00037c  e002              B        |L1.900|
                  |L1.894|
;;;56     		{
;;;57     			case GUI_UPDATE_ALL:
;;;58     				gui_update_all();
00037e  f7fffffe          BL       gui_update_all
;;;59     			
;;;60     				break;
000382  e002              B        |L1.906|
                  |L1.900|
;;;61     			case GUI_PROCESS_BUTTONS:
;;;62     				gui_process_buttons();
000384  f7fffffe          BL       gui_process_buttons
;;;63     				
;;;64     				break;
000388  bf00              NOP      
                  |L1.906|
00038a  bf00              NOP                            ;60
                  |L1.908|
00038c  e7eb              B        |L1.870|
;;;65     		}
;;;66     		
;;;67     	}
;;;68     	
;;;69     }
;;;70     
                          ENDP

00038e  0000              DCW      0x0000
                  |L1.912|
                          DCD      buttons
                  |L1.916|
                          DCD      param
                  |L1.920|
                          DCD      encoder_delta
                  |L1.924|
                          DCD      regulation_setting_p
                  |L1.928|
                          DCD      xQueueConverter
                  |L1.932|
                          DCD      ||.constdata||
                  |L1.936|
                          DCD      lcd0_buffer
                  |L1.940|
                          DCD      lcd1_buffer
                  |L1.944|
                          DCD      voltage_adc
                  |L1.948|
                          DCD      0x447a0000
                  |L1.952|
0003b8  25352e32          DCB      "%5.2fV",0
0003bc  665600  
0003bf  00                DCB      0
                  |L1.960|
                          DCD      font_32x19
                  |L1.964|
                          DCD      font_8x12
                  |L1.968|
0003c8  5345543a          DCB      "SET:",0
0003cc  00      
0003cd  00                DCB      0
0003ce  00                DCB      0
0003cf  00                DCB      0
                  |L1.976|
                          DCD      font_16x10
                  |L1.980|
                          DCD      current_adc
                  |L1.984|
0003d8  25352e32          DCB      "%5.2fA",0
0003dc  664100  
0003df  00                DCB      0
                  |L1.992|
                          DCD      converter_temp_celsius
                  |L1.996|
0003e4  25322e30          DCB      "%2.0f%cC",0
0003e8  66256343
0003ec  00      
0003ed  00                DCB      0
0003ee  00                DCB      0
0003ef  00                DCB      0
                  |L1.1008|
0003f0  43682e20          DCB      "Ch. 5V",0
0003f4  355600  
0003f7  00                DCB      0
                  |L1.1016|
0003f8  43682e31          DCB      "Ch.12V",0
0003fc  325600  
0003ff  00                DCB      0
                  |L1.1024|
000400  34304100          DCB      "40A",0
                  |L1.1028|
000404  32304100          DCB      "20A",0
                  |L1.1032|
                          DCD      power_adc
                  |L1.1036|
00040c  25352e31          DCB      "%5.1fW",0
000410  665700  
000413  00                DCB      0
                  |L1.1044|
                          DCD      imgSelect0
                  |L1.1048|
                          DCD      xQueueGUI

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000004  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000008  2d2d0000          DCB      0x2d,0x2d,0x00,0x00
                          %        8
000014  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000018  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
00001c  2d2d0000          DCB      0x2d,0x2d,0x00,0x00
                          %        8

                          AREA ||.data||, DATA, ALIGN=2

                  param
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  xQueueGUI
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "src\\gui_top.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_gui_top_c_param____REV16|
#line 115 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_gui_top_c_param____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_gui_top_c_param____REVSH|
#line 130
|__asm___9_gui_top_c_param____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
