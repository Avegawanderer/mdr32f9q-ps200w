; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\FLASH\utils.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\FLASH\utils.d --cpu=Cortex-M3 --apcs=interwork -O1 -I.\src\fonts -I.\ -I.\src -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\Library\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\portable\RVDS\ARM_CM3\ -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\include -I.\src\gui -I.\src\gui\guiCore -I.\src\gui\guiWidgets -I.\src\gui\guiGraphics -I.\src\gui\utils -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\FLASH\utils.crf src\gui\utils\utils.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  i32toa_align_right PROC
;;;16     //-------------------------------------------------------//
;;;17     uint8_t i32toa_align_right(int32_t val, char *buffer, uint8_t len, uint8_t min_digits_required)
000000  b5f0              PUSH     {r4-r7,lr}
;;;18     {
000002  4604              MOV      r4,r0
;;;19         uint8_t is_negative = 0;
000004  2700              MOVS     r7,#0
;;;20         uint8_t chars_count = 0;
000006  2000              MOVS     r0,#0
;;;21         if (!len)	return 0;
000008  b14a              CBZ      r2,|L1.30|
;;;22     
;;;23         if (val < 0)
00000a  2c00              CMP      r4,#0
00000c  da01              BGE      |L1.18|
;;;24         {
;;;25             val = -val;
00000e  4264              RSBS     r4,r4,#0
;;;26             is_negative = 1;
000010  2701              MOVS     r7,#1
                  |L1.18|
;;;27         }
;;;28     
;;;29         if (len & NO_TERMINATING_ZERO)
000012  0615              LSLS     r5,r2,#24
000014  d505              BPL      |L1.34|
;;;30         {
;;;31             len = len & ~NO_TERMINATING_ZERO;
000016  f0220280          BIC      r2,r2,#0x80
;;;32             buffer += len;
00001a  4411              ADD      r1,r1,r2
00001c  e007              B        |L1.46|
                  |L1.30|
00001e  2000              MOVS     r0,#0                 ;21
;;;33         }
;;;34         else
;;;35         {
;;;36             buffer += len;
;;;37             *buffer = 0;
;;;38             chars_count++;
;;;39             min_digits_required++;
;;;40         }
;;;41     
;;;42         do
;;;43         {
;;;44             *--buffer = val % 10 + '0';
;;;45             val /= 10;
;;;46             len--;
;;;47             chars_count++;
;;;48         }
;;;49         while ((val != 0) && len);
;;;50     
;;;51         // Pad with 0
;;;52         while ((chars_count < min_digits_required) && (len))
;;;53         {
;;;54             chars_count++;
;;;55             *--buffer = '0';
;;;56             len--;
;;;57         }
;;;58     
;;;59         // Minus sign
;;;60         if ( (len) && (is_negative) )
;;;61         {
;;;62             *--buffer = '-';
;;;63             len--;
;;;64         }
;;;65     
;;;66         // Padding with spaces
;;;67         while(len--)
;;;68             *--buffer = ' ';
;;;69     
;;;70         return chars_count;
;;;71     }
000020  bdf0              POP      {r4-r7,pc}
                  |L1.34|
000022  4411              ADD      r1,r1,r2              ;36
000024  2000              MOVS     r0,#0                 ;37
000026  7008              STRB     r0,[r1,#0]            ;37
000028  2001              MOVS     r0,#1                 ;38
00002a  1c5b              ADDS     r3,r3,#1              ;39
00002c  b2db              UXTB     r3,r3                 ;39
                  |L1.46|
00002e  250a              MOVS     r5,#0xa               ;44
                  |L1.48|
000030  4626              MOV      r6,r4                 ;44
000032  fb94f4f5          SDIV     r4,r4,r5              ;44
000036  fb056614          MLS      r6,r5,r4,r6           ;44
00003a  3630              ADDS     r6,r6,#0x30           ;44
00003c  f8016d01          STRB     r6,[r1,#-1]!          ;44
000040  1e52              SUBS     r2,r2,#1              ;46
000042  b2d2              UXTB     r2,r2                 ;46
000044  1c40              ADDS     r0,r0,#1              ;47
000046  b2c0              UXTB     r0,r0                 ;47
000048  b10c              CBZ      r4,|L1.78|
00004a  2a00              CMP      r2,#0                 ;49
00004c  d1f0              BNE      |L1.48|
                  |L1.78|
00004e  2430              MOVS     r4,#0x30              ;55
000050  e005              B        |L1.94|
                  |L1.82|
000052  1c40              ADDS     r0,r0,#1              ;54
000054  b2c0              UXTB     r0,r0                 ;54
000056  f8014d01          STRB     r4,[r1,#-1]!          ;55
00005a  1e52              SUBS     r2,r2,#1              ;56
00005c  b2d2              UXTB     r2,r2                 ;56
                  |L1.94|
00005e  4298              CMP      r0,r3                 ;52
000060  d201              BCS      |L1.102|
000062  2a00              CMP      r2,#0                 ;52
000064  d1f5              BNE      |L1.82|
                  |L1.102|
000066  b12a              CBZ      r2,|L1.116|
000068  b127              CBZ      r7,|L1.116|
00006a  232d              MOVS     r3,#0x2d              ;62
00006c  f8013d01          STRB     r3,[r1,#-1]!          ;62
000070  1e52              SUBS     r2,r2,#1              ;63
000072  b2d2              UXTB     r2,r2                 ;63
                  |L1.116|
000074  2320              MOVS     r3,#0x20              ;68
000076  e001              B        |L1.124|
                  |L1.120|
000078  f8013d01          STRB     r3,[r1,#-1]!          ;68
                  |L1.124|
00007c  0014              MOVS     r4,r2                 ;67
00007e  f1a20201          SUB      r2,r2,#1              ;67
000082  b2d2              UXTB     r2,r2                 ;67
000084  d1f8              BNE      |L1.120|
000086  bdf0              POP      {r4-r7,pc}
;;;72     
                          ENDP

