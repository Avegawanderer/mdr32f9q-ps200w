; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\FLASH\encoder.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\FLASH\encoder.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\src\fonts -I.\ -I.\src -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\Library\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\portable\RVDS\ARM_CM3\ -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\include -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\FLASH\encoder.crf src\encoder.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  ProcessEncoder PROC
;;;18     
;;;19     void ProcessEncoder(void)
000000  4829              LDR      r0,|L1.168|
;;;20     {
;;;21     	static uint8_t enc_state = 0;
;;;22     	enc_state = enc_state << 2;
000002  7800              LDRB     r0,[r0,#0]  ; enc_state
000004  0680              LSLS     r0,r0,#26
000006  0e00              LSRS     r0,r0,#24
000008  4927              LDR      r1,|L1.168|
00000a  7008              STRB     r0,[r1,#0]
;;;23     	
;;;24     	// Get new encoder state
;;;25     	if (MDR_PORTB->RXTX & (1<<ENCA)) 
00000c  4827              LDR      r0,|L1.172|
00000e  6800              LDR      r0,[r0,#0]
000010  f4107f80          TST      r0,#0x100
000014  d004              BEQ      |L1.32|
;;;26     		enc_state |= 0x01;
000016  4608              MOV      r0,r1
000018  7800              LDRB     r0,[r0,#0]  ; enc_state
00001a  f0400001          ORR      r0,r0,#1
00001e  7008              STRB     r0,[r1,#0]
                  |L1.32|
;;;27     	if (MDR_PORTB->RXTX & (1<<ENCB)) 
000020  4822              LDR      r0,|L1.172|
000022  6800              LDR      r0,[r0,#0]
000024  f4107f00          TST      r0,#0x200
000028  d005              BEQ      |L1.54|
;;;28     		enc_state |= 0x02;
00002a  481f              LDR      r0,|L1.168|
00002c  7800              LDRB     r0,[r0,#0]  ; enc_state
00002e  f0400002          ORR      r0,r0,#2
000032  491d              LDR      r1,|L1.168|
000034  7008              STRB     r0,[r1,#0]
                  |L1.54|
;;;29     	
;;;30     	// Detect direction
;;;31     	switch(enc_state & 0x0F)
000036  481c              LDR      r0,|L1.168|
000038  7800              LDRB     r0,[r0,#0]  ; enc_state
00003a  f000000f          AND      r0,r0,#0xf
00003e  280f              CMP      r0,#0xf
000040  d21d              BCS      |L1.126|
000042  e8dff000          TBB      [pc,r0]
000046  1c12              DCB      0x1c,0x12
000048  081c091c          DCB      0x08,0x1c,0x09,0x1c
00004c  1c13141c          DCB      0x1c,0x13,0x14,0x1c
000050  1c0a1c0b          DCB      0x1c,0x0a,0x1c,0x0b
000054  1500              DCB      0x15,0x00
;;;32     	{
;;;33     		case 0x2: case 0x4: case 0xB: case 0xD:
000056  bf00              NOP      
000058  bf00              NOP      
00005a  bf00              NOP      
;;;34     			encoder_counter --;
00005c  4814              LDR      r0,|L1.176|
00005e  8800              LDRH     r0,[r0,#0]  ; encoder_counter
000060  1e40              SUBS     r0,r0,#1
000062  b200              SXTH     r0,r0
000064  4912              LDR      r1,|L1.176|
000066  8008              STRH     r0,[r1,#0]
;;;35     		break;
000068  e009              B        |L1.126|
;;;36     		case 0x1: case 0x7: case 0x8: case 0xE:
00006a  bf00              NOP      
00006c  bf00              NOP      
00006e  bf00              NOP      
;;;37     			encoder_counter ++;
000070  480f              LDR      r0,|L1.176|
000072  8800              LDRH     r0,[r0,#0]  ; encoder_counter
000074  1c40              ADDS     r0,r0,#1
000076  b200              SXTH     r0,r0
000078  490d              LDR      r1,|L1.176|
00007a  8008              STRH     r0,[r1,#0]
;;;38     		break;
00007c  bf00              NOP      
                  |L1.126|
00007e  bf00              NOP                            ;35
;;;39     	}
;;;40     }
000080  4770              BX       lr
;;;41     
                          ENDP

                  UpdateEncoderDelta PROC
;;;42     
;;;43     void UpdateEncoderDelta(void)
000082  490c              LDR      r1,|L1.180|
;;;44     {
;;;45     	static int16_t old_counter = 0;
;;;46     	int16_t delta = old_counter;
000084  f9b10000          LDRSH    r0,[r1,#0]  ; old_counter
;;;47     	old_counter = encoder_counter&0xFFFC;
000088  4909              LDR      r1,|L1.176|
00008a  8809              LDRH     r1,[r1,#0]  ; encoder_counter
00008c  f64f72fc          MOV      r2,#0xfffc
000090  4011              ANDS     r1,r1,r2
000092  b209              SXTH     r1,r1
000094  4a07              LDR      r2,|L1.180|
000096  8011              STRH     r1,[r2,#0]
;;;48     	delta = old_counter - delta;
000098  4611              MOV      r1,r2
00009a  8809              LDRH     r1,[r1,#0]  ; old_counter
00009c  1a09              SUBS     r1,r1,r0
00009e  b208              SXTH     r0,r1
;;;49     	encoder_delta = delta>>2;
0000a0  1081              ASRS     r1,r0,#2
0000a2  4a05              LDR      r2,|L1.184|
0000a4  8011              STRH     r1,[r2,#0]
;;;50     }
0000a6  4770              BX       lr
;;;51     
                          ENDP

                  |L1.168|
                          DCD      enc_state
                  |L1.172|
                          DCD      0x400b0000
                  |L1.176|
                          DCD      encoder_counter
                  |L1.180|
                          DCD      old_counter
                  |L1.184|
                          DCD      encoder_delta

                          AREA ||.data||, DATA, ALIGN=1

                  encoder_counter
000000  0000              DCW      0x0000
                  enc_state
000002  0000              DCB      0x00,0x00
                  old_counter
000004  0000              DCW      0x0000
                  encoder_delta
000006  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "src\\encoder.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_encoder_c_1392ecb0____REV16|
#line 115 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_encoder_c_1392ecb0____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_encoder_c_1392ecb0____REVSH|
#line 130
|__asm___9_encoder_c_1392ecb0____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
