; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\FLASH\guicore.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\FLASH\guicore.d --cpu=Cortex-M3 --apcs=interwork -O1 -I.\src\fonts -I.\ -I.\src -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\Library\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\portable\RVDS\ARM_CM3\ -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\include -I.\src\gui -I.\src\gui\guiCore -I.\src\gui\guiWidgets -I.\src\gui\guiGraphics -I.\src\gui\utils -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\FLASH\guicore.crf src\gui\guiCore\guiCore.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  guiCore_AddMessageToQueue PROC
;;;72     //-------------------------------------------------------//
;;;73     uint8_t guiCore_AddMessageToQueue(const guiGenericWidget_t *target, const guiEvent_t *event)
000000  b510              PUSH     {r4,lr}
;;;74     {
;;;75         if (guiMsgQueue.count < GUI_CORE_QUEUE_SIZE)
000002  4afe              LDR      r2,|L1.1020|
000004  7893              LDRB     r3,[r2,#2]  ; guiMsgQueue
000006  2b14              CMP      r3,#0x14
000008  d21b              BCS      |L1.66|
;;;76         {
;;;77             guiMsgQueue.queue[guiMsgQueue.tail].event = *event;
00000a  7853              LDRB     r3,[r2,#1]  ; guiMsgQueue
00000c  680c              LDR      r4,[r1,#0]
00000e  eb030343          ADD      r3,r3,r3,LSL #1
000012  eb020383          ADD      r3,r2,r3,LSL #2
000016  609c              STR      r4,[r3,#8]
000018  8889              LDRH     r1,[r1,#4]
00001a  8199              STRH     r1,[r3,#0xc]
;;;78             guiMsgQueue.queue[guiMsgQueue.tail].target = (guiGenericWidget_t *)target;
00001c  7851              LDRB     r1,[r2,#1]  ; guiMsgQueue
00001e  eb010141          ADD      r1,r1,r1,LSL #1
000022  eb020181          ADD      r1,r2,r1,LSL #2
000026  6048              STR      r0,[r1,#4]
;;;79             guiMsgQueue.count++;
000028  7890              LDRB     r0,[r2,#2]  ; guiMsgQueue
00002a  1c40              ADDS     r0,r0,#1
00002c  7090              STRB     r0,[r2,#2]
;;;80             guiMsgQueue.tail++;
00002e  7850              LDRB     r0,[r2,#1]  ; guiMsgQueue
000030  1c40              ADDS     r0,r0,#1
000032  b2c0              UXTB     r0,r0
000034  7050              STRB     r0,[r2,#1]
;;;81             if (guiMsgQueue.tail == GUI_CORE_QUEUE_SIZE)
000036  2814              CMP      r0,#0x14
000038  d101              BNE      |L1.62|
;;;82                 guiMsgQueue.tail = 0;
00003a  2000              MOVS     r0,#0
00003c  7050              STRB     r0,[r2,#1]
                  |L1.62|
;;;83             return 1;
00003e  2001              MOVS     r0,#1
;;;84          }
;;;85         return 0;
;;;86     }
000040  bd10              POP      {r4,pc}
                  |L1.66|
000042  2000              MOVS     r0,#0                 ;85
000044  bd10              POP      {r4,pc}
;;;87     
                          ENDP

                  guiCore_GetMessageFromQueue PROC
;;;93     //-------------------------------------------------------//
;;;94     uint8_t guiCore_GetMessageFromQueue(guiGenericWidget_t **target, guiEvent_t *event)
000046  4aed              LDR      r2,|L1.1020|
;;;95     {
;;;96         if (guiMsgQueue.count > 0)
000048  7893              LDRB     r3,[r2,#2]  ; guiMsgQueue
00004a  b1e3              CBZ      r3,|L1.134|
;;;97         {
;;;98             *target = guiMsgQueue.queue[guiMsgQueue.head].target;
00004c  7813              LDRB     r3,[r2,#0]  ; guiMsgQueue
00004e  eb030343          ADD      r3,r3,r3,LSL #1
000052  eb020383          ADD      r3,r2,r3,LSL #2
000056  685b              LDR      r3,[r3,#4]
000058  6003              STR      r3,[r0,#0]
;;;99             *event = guiMsgQueue.queue[guiMsgQueue.head].event;
00005a  7810              LDRB     r0,[r2,#0]  ; guiMsgQueue
00005c  eb000040          ADD      r0,r0,r0,LSL #1
000060  eb020080          ADD      r0,r2,r0,LSL #2
000064  6883              LDR      r3,[r0,#8]
000066  600b              STR      r3,[r1,#0]
000068  8980              LDRH     r0,[r0,#0xc]
00006a  8088              STRH     r0,[r1,#4]
;;;100            guiMsgQueue.count--;
00006c  7890              LDRB     r0,[r2,#2]  ; guiMsgQueue
00006e  1e40              SUBS     r0,r0,#1
000070  7090              STRB     r0,[r2,#2]
;;;101            guiMsgQueue.head++;
000072  7810              LDRB     r0,[r2,#0]  ; guiMsgQueue
000074  1c40              ADDS     r0,r0,#1
000076  b2c0              UXTB     r0,r0
000078  7010              STRB     r0,[r2,#0]
;;;102            if (guiMsgQueue.head == GUI_CORE_QUEUE_SIZE)
00007a  2814              CMP      r0,#0x14
00007c  d101              BNE      |L1.130|
;;;103                guiMsgQueue.head = 0;
00007e  2000              MOVS     r0,#0
000080  7010              STRB     r0,[r2,#0]
                  |L1.130|
;;;104            return 1;
000082  2001              MOVS     r0,#1
;;;105        }
;;;106        return 0;
;;;107    }
000084  4770              BX       lr
                  |L1.134|
000086  2000              MOVS     r0,#0                 ;106
000088  4770              BX       lr
;;;108    
                          ENDP

                  guiCore_ProcessMessageQueue PROC
;;;117    //-------------------------------------------------------//
;;;118    void guiCore_ProcessMessageQueue(void)
00008a  b50e              PUSH     {r1-r3,lr}
;;;119    {
;;;120        guiGenericWidget_t *target;
;;;121        guiEvent_t targetEvent;
;;;122        uint8_t processResult;
;;;123    
;;;124        while(guiCore_GetMessageFromQueue(&target,&targetEvent))
;;;125        {
;;;126            while(1)
;;;127            {
;;;128                if (target == 0)
;;;129                    break;
00008c  e00c              B        |L1.168|
                  |L1.142|
;;;130                processResult = target->processEvent(target, targetEvent);
00008e  e9dd1200          LDRD     r1,r2,[sp,#0]
000092  6943              LDR      r3,[r0,#0x14]
000094  4798              BLX      r3
;;;131                if (processResult == GUI_EVENT_ACCEPTED)
000096  2801              CMP      r0,#1
000098  d006              BEQ      |L1.168|
;;;132                    break;
;;;133                // Focused widget cannot process event - pass event to parent
;;;134                if (target->parent != 0)
00009a  9802              LDR      r0,[sp,#8]
00009c  6840              LDR      r0,[r0,#4]
00009e  b118              CBZ      r0,|L1.168|
;;;135                {
;;;136                    target = target->parent;
0000a0  9002              STR      r0,[sp,#8]
                  |L1.162|
0000a2  9802              LDR      r0,[sp,#8]            ;128
0000a4  2800              CMP      r0,#0                 ;128
0000a6  d1f2              BNE      |L1.142|
                  |L1.168|
0000a8  4669              MOV      r1,sp                 ;124
0000aa  a802              ADD      r0,sp,#8              ;124
0000ac  f7fffffe          BL       guiCore_GetMessageFromQueue
0000b0  2800              CMP      r0,#0                 ;124
0000b2  d1f6              BNE      |L1.162|
;;;137                }
;;;138                else
;;;139                {
;;;140                    // No widget can process this event - skip it.
;;;141                    break;
;;;142                }
;;;143            }
;;;144        }
;;;145    }
0000b4  bd0e              POP      {r1-r3,pc}
;;;146    
                          ENDP

                  guiCore_PostEventToFocused PROC
;;;152    //-------------------------------------------------------//
;;;153    void guiCore_PostEventToFocused(guiEvent_t event)
0000b6  b503              PUSH     {r0,r1,lr}
;;;154    {
;;;155        if (focusedWidget == 0)
0000b8  48d1              LDR      r0,|L1.1024|
0000ba  6840              LDR      r0,[r0,#4]  ; focusedWidget
0000bc  2800              CMP      r0,#0
0000be  d002              BEQ      |L1.198|
;;;156            return;                 // Should not normally happen ?
;;;157        guiCore_AddMessageToQueue(focusedWidget, &event);
0000c0  4669              MOV      r1,sp
0000c2  f7fffffe          BL       guiCore_AddMessageToQueue
                  |L1.198|
;;;158    }
0000c6  bd0c              POP      {r2,r3,pc}
;;;159    
                          ENDP

                  guiCore_TimerInit PROC
;;;178    //-------------------------------------------------------//
;;;179    void guiCore_TimerInit(uint8_t timerID, uint16_t period, uint8_t runOnce, guiGenericWidget_t *target, void (*handler)(uint8_t))
0000c8  b530              PUSH     {r4,r5,lr}
;;;180    {
0000ca  9d03              LDR      r5,[sp,#0xc]
;;;181        if (timerID >= GUI_TIMER_COUNT)
0000cc  2800              CMP      r0,#0
0000ce  d110              BNE      |L1.242|
;;;182            return;
;;;183        guiTimers[timerID].top = period;
0000d0  4cca              LDR      r4,|L1.1020|
0000d2  3c10              SUBS     r4,r4,#0x10
0000d4  8021              STRH     r1,[r4,#0]
;;;184        guiTimers[timerID].counter = 0;
0000d6  8060              STRH     r0,[r4,#2]
0000d8  4620              MOV      r0,r4                 ;183
;;;185        guiTimers[timerID].runOnce = (runOnce) ? 1 : 0;
0000da  7900              LDRB     r0,[r0,#4]
0000dc  b112              CBZ      r2,|L1.228|
0000de  f0400001          ORR      r0,r0,#1
0000e2  e001              B        |L1.232|
                  |L1.228|
0000e4  f0200001          BIC      r0,r0,#1
                  |L1.232|
;;;186        guiTimers[timerID].isEnabled = 0;
0000e8  f0200002          BIC      r0,r0,#2
0000ec  7120              STRB     r0,[r4,#4]
;;;187        guiTimers[timerID].targetWidget = target;
0000ee  60a3              STR      r3,[r4,#8]
;;;188        guiTimers[timerID].handler = handler;
0000f0  60e5              STR      r5,[r4,#0xc]
                  |L1.242|
;;;189    }
0000f2  bd30              POP      {r4,r5,pc}
;;;190    
                          ENDP

                  guiCore_TimerStart PROC
;;;197    //-------------------------------------------------------//
;;;198    void guiCore_TimerStart(uint8_t timerID, uint8_t doReset)
0000f4  2800              CMP      r0,#0
;;;199    {
;;;200        if (timerID >= GUI_TIMER_COUNT)
0000f6  d108              BNE      |L1.266|
;;;201            return;
;;;202        if (doReset)
;;;203            guiTimers[timerID].counter = 0;
0000f8  48c0              LDR      r0,|L1.1020|
0000fa  3810              SUBS     r0,r0,#0x10
0000fc  b109              CBZ      r1,|L1.258|
0000fe  2100              MOVS     r1,#0
000100  8041              STRH     r1,[r0,#2]
                  |L1.258|
;;;204        guiTimers[timerID].isEnabled = 1;
000102  7901              LDRB     r1,[r0,#4]
000104  f0410102          ORR      r1,r1,#2
000108  7101              STRB     r1,[r0,#4]
                  |L1.266|
;;;205    }
00010a  4770              BX       lr
;;;206    
                          ENDP

                  guiCore_TimerStop PROC
;;;213    //-------------------------------------------------------//
;;;214    void guiCore_TimerStop(uint8_t timerID, uint8_t doReset)
00010c  2800              CMP      r0,#0
;;;215    {
;;;216        if (timerID >= GUI_TIMER_COUNT)
00010e  d108              BNE      |L1.290|
;;;217            return;
;;;218        if (doReset)
;;;219            guiTimers[timerID].counter = 0;
000110  48ba              LDR      r0,|L1.1020|
000112  3810              SUBS     r0,r0,#0x10
000114  b109              CBZ      r1,|L1.282|
000116  2100              MOVS     r1,#0
000118  8041              STRH     r1,[r0,#2]
                  |L1.282|
;;;220        guiTimers[timerID].isEnabled = 0;
00011a  7901              LDRB     r1,[r0,#4]
00011c  f0210102          BIC      r1,r1,#2
000120  7101              STRB     r1,[r0,#4]
                  |L1.290|
;;;221    }
000122  4770              BX       lr
;;;222    
                          ENDP

                  guiCore_TimerProcess PROC
;;;231    //-------------------------------------------------------//
;;;232    void guiCore_TimerProcess(uint8_t timerID)
000124  b57c              PUSH     {r2-r6,lr}
;;;233    {
000126  4605              MOV      r5,r0
;;;234        guiEvent_t event = {GUI_EVENT_TIMER, 0, 0, 0};
000128  48b6              LDR      r0,|L1.1028|
00012a  6b01              LDR      r1,[r0,#0x30]  ; <Data2>
00012c  6ac0              LDR      r0,[r0,#0x2c]  ; <Data2>
00012e  e9cd0100          STRD     r0,r1,[sp,#0]
;;;235        if (timerID >= GUI_TIMER_COUNT)
000132  2d00              CMP      r5,#0
000134  d11e              BNE      |L1.372|
;;;236            return;
;;;237        if (guiTimers[timerID].isEnabled)
000136  4cb1              LDR      r4,|L1.1020|
000138  3c10              SUBS     r4,r4,#0x10
00013a  7920              LDRB     r0,[r4,#4]
00013c  0781              LSLS     r1,r0,#30
00013e  d519              BPL      |L1.372|
;;;238        {
;;;239            guiTimers[timerID].counter++;
000140  8861              LDRH     r1,[r4,#2]
000142  1c49              ADDS     r1,r1,#1
000144  b289              UXTH     r1,r1
000146  8061              STRH     r1,[r4,#2]
;;;240            if (guiTimers[timerID].counter >= guiTimers[timerID].top)
000148  8822              LDRH     r2,[r4,#0]
00014a  4291              CMP      r1,r2
00014c  d312              BCC      |L1.372|
;;;241            {
;;;242                guiTimers[timerID].counter = 0;
00014e  2100              MOVS     r1,#0
000150  8061              STRH     r1,[r4,#2]
;;;243                if (guiTimers[timerID].runOnce)
000152  07c1              LSLS     r1,r0,#31
000154  d002              BEQ      |L1.348|
;;;244                    guiTimers[timerID].isEnabled = 0;
000156  f0200002          BIC      r0,r0,#2
00015a  7120              STRB     r0,[r4,#4]
                  |L1.348|
;;;245                if (guiTimers[timerID].targetWidget != 0)
00015c  68a0              LDR      r0,[r4,#8]
00015e  b120              CBZ      r0,|L1.362|
;;;246                {
;;;247                    event.spec = timerID;
000160  f88d5001          STRB     r5,[sp,#1]
;;;248                    guiCore_AddMessageToQueue(guiTimers[timerID].targetWidget, &event);
000164  4669              MOV      r1,sp
000166  f7fffffe          BL       guiCore_AddMessageToQueue
                  |L1.362|
;;;249                }
;;;250                if (guiTimers[timerID].handler != 0)
00016a  68e1              LDR      r1,[r4,#0xc]
00016c  2900              CMP      r1,#0
00016e  d001              BEQ      |L1.372|
;;;251                    guiTimers[timerID].handler(timerID);
000170  4628              MOV      r0,r5
000172  4788              BLX      r1
                  |L1.372|
;;;252            }
;;;253        }
;;;254    }
000174  bd7c              POP      {r2-r6,pc}
;;;255    #endif
                          ENDP

                  guiCore_Init PROC
;;;274    //-------------------------------------------------------//
;;;275    void guiCore_Init(guiGenericWidget_t *guiRootWidget)
000176  b570              PUSH     {r4-r6,lr}
;;;276    {
;;;277        uint8_t i;
;;;278        // Init queue
;;;279        guiMsgQueue.count = 0;
000178  49a0              LDR      r1,|L1.1020|
00017a  2500              MOVS     r5,#0
00017c  708d              STRB     r5,[r1,#2]
;;;280        guiMsgQueue.head = 0;
00017e  700d              STRB     r5,[r1,#0]
;;;281        guiMsgQueue.tail = 0;
000180  704d              STRB     r5,[r1,#1]
;;;282    
;;;283    #ifdef GUI_CFG_USE_TIMERS
;;;284        // Disable all timers
;;;285        for (i=0; i<GUI_TIMER_COUNT; i++)
000182  2100              MOVS     r1,#0
;;;286        {
;;;287            guiTimers[i].isEnabled = 0;
000184  4b9d              LDR      r3,|L1.1020|
000186  3b10              SUBS     r3,r3,#0x10
                  |L1.392|
000188  eb031201          ADD      r2,r3,r1,LSL #4
00018c  7914              LDRB     r4,[r2,#4]
00018e  f0240402          BIC      r4,r4,#2
000192  7114              STRB     r4,[r2,#4]
000194  1c49              ADDS     r1,r1,#1              ;285
000196  b2c9              UXTB     r1,r1                 ;285
000198  2900              CMP      r1,#0                 ;285
00019a  d0f5              BEQ      |L1.392|
;;;288        }
;;;289    #endif
;;;290    
;;;291        // Set root and focused widget and send initialize event
;;;292        // Root widget must set focus in itself or other widget
;;;293        // depending on design. If focus is not set, no keyboard
;;;294        // and encoder events will get processed.
;;;295        rootWidget = guiRootWidget;
00019c  4998              LDR      r1,|L1.1024|
00019e  6008              STR      r0,[r1,#0]  ; rootWidget
;;;296        focusedWidget = 0;
0001a0  604d              STR      r5,[r1,#4]  ; focusedWidget
;;;297        guiCore_AddMessageToQueue(rootWidget, &guiEvent_INIT);
0001a2  4998              LDR      r1,|L1.1028|
0001a4  f7fffffe          BL       guiCore_AddMessageToQueue
;;;298        guiCore_ProcessMessageQueue();
0001a8  e8bd4070          POP      {r4-r6,lr}
0001ac  e7fe              B        guiCore_ProcessMessageQueue
;;;299    }
;;;300    
                          ENDP

                  guiCore_CheckWidgetOvelap PROC
;;;644    //-------------------------------------------------------//
;;;645    uint8_t guiCore_CheckWidgetOvelap(guiGenericWidget_t *widget, rect16_t *rect)
0001ae  b570              PUSH     {r4-r6,lr}
;;;646    {
;;;647        if ((rect->x2 - rect->x1 <= 0) || (rect->y2 - rect->y1 <= 0))
0001b0  f9b13004          LDRSH    r3,[r1,#4]
0001b4  f9b16000          LDRSH    r6,[r1,#0]
0001b8  1b9a              SUBS     r2,r3,r6
0001ba  2a00              CMP      r2,#0
0001bc  dd06              BLE      |L1.460|
0001be  f9b12006          LDRSH    r2,[r1,#6]
0001c2  f9b14002          LDRSH    r4,[r1,#2]
0001c6  1b11              SUBS     r1,r2,r4
0001c8  2900              CMP      r1,#0
0001ca  dc01              BGT      |L1.464|
                  |L1.460|
;;;648            return 0;
0001cc  2000              MOVS     r0,#0
;;;649        if ( (rect->x2 < widget->x) ||
;;;650             (rect->y2 < widget->y) ||
;;;651             (rect->x1 > widget->x + widget->width - 1) ||
;;;652             (rect->y1 > widget->y + widget->height - 1) )
;;;653            return 0;
;;;654        else
;;;655            return 1;
;;;656    }
0001ce  bd70              POP      {r4-r6,pc}
                  |L1.464|
0001d0  f9b0500c          LDRSH    r5,[r0,#0xc]          ;649
0001d4  42ab              CMP      r3,r5                 ;649
0001d6  db0d              BLT      |L1.500|
0001d8  f9b0100e          LDRSH    r1,[r0,#0xe]          ;650
0001dc  428a              CMP      r2,r1                 ;650
0001de  db09              BLT      |L1.500|
0001e0  8a02              LDRH     r2,[r0,#0x10]         ;651
0001e2  442a              ADD      r2,r2,r5              ;651
0001e4  1e52              SUBS     r2,r2,#1              ;651
0001e6  42b2              CMP      r2,r6                 ;651
0001e8  db04              BLT      |L1.500|
0001ea  8a40              LDRH     r0,[r0,#0x12]         ;652
0001ec  4408              ADD      r0,r0,r1              ;652
0001ee  1e40              SUBS     r0,r0,#1              ;652
0001f0  42a0              CMP      r0,r4                 ;652
0001f2  da01              BGE      |L1.504|
                  |L1.500|
0001f4  2000              MOVS     r0,#0                 ;653
0001f6  bd70              POP      {r4-r6,pc}
                  |L1.504|
0001f8  2001              MOVS     r0,#1                 ;655
0001fa  bd70              POP      {r4-r6,pc}
;;;657    
                          ENDP

                  guiCore_RedrawAll PROC
;;;306    //-------------------------------------------------------//
;;;307    void guiCore_RedrawAll(void)
0001fc  e92d41ff          PUSH     {r0-r8,lr}
;;;308    {
;;;309        guiGenericWidget_t *widget;
;;;310        guiGenericWidget_t *nextWidget;
;;;311        uint8_t index;
;;;312    
;;;313        guiGenericWidget_t *w;
;;;314        uint8_t i;
;;;315        rect16_t inv_rect;
;;;316    
;;;317        // Start widget tree traverse from root widget
;;;318        widget = rootWidget;
000200  487f              LDR      r0,|L1.1024|
000202  6804              LDR      r4,[r0,#0]  ; rootWidget
;;;319        guiGraph_SetBaseXY(widget->x, widget->y);
000204  f9b4100e          LDRSH    r1,[r4,#0xe]
000208  f9b4000c          LDRSH    r0,[r4,#0xc]
00020c  f7fffffe          BL       guiGraph_SetBaseXY
                  |L1.528|
;;;320    
;;;321        while(1)
;;;322        {
;;;323            // Process widget
;;;324            if (widget->redrawRequired)
000210  7a20              LDRB     r0,[r4,#8]
000212  0640              LSLS     r0,r0,#25
000214  d50a              BPL      |L1.556|
;;;325            {
;;;326                // The redrawRequired flag is reset by widget after processing DRAW event
;;;327                widget->processEvent(widget, guiEvent_DRAW);
000216  487b              LDR      r0,|L1.1028|
000218  6963              LDR      r3,[r4,#0x14]
00021a  f8d01006          LDR      r1,[r0,#6]  ; guiEvent_DRAW
00021e  9100              STR      r1,[sp,#0]
000220  8940              LDRH     r0,[r0,#0xa]  ; guiEvent_DRAW
000222  f8ad0004          STRH     r0,[sp,#4]
000226  4620              MOV      r0,r4
000228  9a01              LDR      r2,[sp,#4]
00022a  4798              BLX      r3
                  |L1.556|
;;;328            }
;;;329            // Check if widget has children
;;;330            if (widget->isContainer)
00022c  7a20              LDRB     r0,[r4,#8]
00022e  0741              LSLS     r1,r0,#29
000230  d56d              BPL      |L1.782|
;;;331            {
;;;332                if (((guiGenericContainer_t *)widget)->widgets.traverseIndex == 0)
;;;333                {
;;;334                    // The first time visit
;;;335                    // TODO - set graph clipping
;;;336                }
;;;337    
;;;338                // If container has unprocessed children
;;;339                if ( ((guiGenericContainer_t *)widget)->widgets.traverseIndex <
000232  f8941022          LDRB     r1,[r4,#0x22]
000236  f8942020          LDRB     r2,[r4,#0x20]
00023a  4291              CMP      r1,r2
00023c  d251              BCS      |L1.738|
;;;340                     ((guiGenericContainer_t *)widget)->widgets.count )
;;;341                {
;;;342                    // switch to next one if possible
;;;343                    index = ((guiGenericContainer_t *)widget)->widgets.traverseIndex++;
00023e  1c4a              ADDS     r2,r1,#1
000240  f8842022          STRB     r2,[r4,#0x22]
;;;344                    nextWidget = ((guiGenericContainer_t *)widget)->widgets.elements[index];
000244  6a62              LDR      r2,[r4,#0x24]
000246  f8525021          LDR      r5,[r2,r1,LSL #2]
;;;345                    // check if widget actually exists and is visible
;;;346                    if ((nextWidget == 0) || (nextWidget->isVisible == 0))
00024a  2d00              CMP      r5,#0
00024c  d0e0              BEQ      |L1.528|
00024e  7a2a              LDRB     r2,[r5,#8]
000250  06d3              LSLS     r3,r2,#27
000252  d5dd              BPL      |L1.528|
;;;347                        continue;
;;;348                    // Check if widget must be redrawn forcibly
;;;349                    if (widget->redrawForced)
000254  0600              LSLS     r0,r0,#24
000256  d504              BPL      |L1.610|
;;;350                    {
;;;351                        nextWidget->redrawForced = 1;
000258  f0420080          ORR      r0,r2,#0x80
;;;352                        nextWidget->redrawRequired = 1;
00025c  f0400040          ORR      r0,r0,#0x40
000260  7228              STRB     r0,[r5,#8]
                  |L1.610|
;;;353                    }
;;;354                    ///////////////////////////
;;;355    #ifdef USE_Z_ORDER_REDRAW
;;;356                    if ((widget->redrawForced == 0) &&(nextWidget->redrawRequired))
000262  7a20              LDRB     r0,[r4,#8]
000264  0600              LSLS     r0,r0,#24
000266  d42f              BMI      |L1.712|
000268  7a28              LDRB     r0,[r5,#8]
00026a  0640              LSLS     r0,r0,#25
00026c  d52c              BPL      |L1.712|
;;;357                    {
;;;358                        // Widget will be redrawn - make overlapping widgets with higher Z index redraw too
;;;359                        inv_rect.x1 = nextWidget->x;
00026e  89a8              LDRH     r0,[r5,#0xc]
000270  f8ad0008          STRH     r0,[sp,#8]
;;;360                        inv_rect.y1 = nextWidget->y;
000274  89e8              LDRH     r0,[r5,#0xe]
000276  f8ad000a          STRH     r0,[sp,#0xa]
;;;361                        inv_rect.x2 = nextWidget->x + nextWidget->width - 1;
00027a  89a8              LDRH     r0,[r5,#0xc]
00027c  8a2a              LDRH     r2,[r5,#0x10]
00027e  4410              ADD      r0,r0,r2
000280  1e40              SUBS     r0,r0,#1
000282  f8ad000c          STRH     r0,[sp,#0xc]
;;;362                        inv_rect.y2 = nextWidget->y + nextWidget->height - 1;
000286  89e8              LDRH     r0,[r5,#0xe]
000288  8a6a              LDRH     r2,[r5,#0x12]
00028a  4410              ADD      r0,r0,r2
00028c  1e40              SUBS     r0,r0,#1
00028e  f8ad000e          STRH     r0,[sp,#0xe]
;;;363                        for (i = index+1; i < ((guiGenericContainer_t *)widget)->widgets.count; i++)
000292  1c49              ADDS     r1,r1,#1
000294  b2cf              UXTB     r7,r1
000296  e013              B        |L1.704|
                  |L1.664|
;;;364                        {
;;;365                            w = ((guiGenericContainer_t *)widget)->widgets.elements[i];
000298  6a60              LDR      r0,[r4,#0x24]
00029a  f8506027          LDR      r6,[r0,r7,LSL #2]
;;;366                            if ((w != 0) && (w->isVisible))
00029e  b16e              CBZ      r6,|L1.700|
0002a0  7a30              LDRB     r0,[r6,#8]
0002a2  06c0              LSLS     r0,r0,#27
0002a4  d50a              BPL      |L1.700|
;;;367                            {
;;;368                                if (guiCore_CheckWidgetOvelap(w, &inv_rect))
0002a6  a902              ADD      r1,sp,#8
0002a8  4630              MOV      r0,r6
0002aa  f7fffffe          BL       guiCore_CheckWidgetOvelap
0002ae  b128              CBZ      r0,|L1.700|
;;;369                                {
;;;370                                    w->redrawForced = 1;
0002b0  7a30              LDRB     r0,[r6,#8]
0002b2  f0400080          ORR      r0,r0,#0x80
;;;371                                    w->redrawRequired = 1;
0002b6  f0400040          ORR      r0,r0,#0x40
0002ba  7230              STRB     r0,[r6,#8]
                  |L1.700|
0002bc  1c7f              ADDS     r7,r7,#1              ;363
0002be  b2ff              UXTB     r7,r7                 ;363
                  |L1.704|
0002c0  f8940020          LDRB     r0,[r4,#0x20]         ;363
0002c4  42b8              CMP      r0,r7                 ;363
0002c6  d8e7              BHI      |L1.664|
                  |L1.712|
;;;372                                }
;;;373                            }
;;;374                        }
;;;375                    }
;;;376    #endif
;;;377                    ///////////////////////////
;;;378                    if ((nextWidget->redrawRequired) || (nextWidget->isContainer))
0002c8  7a28              LDRB     r0,[r5,#8]
0002ca  0641              LSLS     r1,r0,#25
0002cc  d401              BMI      |L1.722|
0002ce  0740              LSLS     r0,r0,#29
0002d0  d59e              BPL      |L1.528|
                  |L1.722|
;;;379                    {
;;;380                        widget = nextWidget;
0002d2  462c              MOV      r4,r5
;;;381                        guiGraph_OffsetBaseXY(widget->x, widget->y);
0002d4  f9b4100e          LDRSH    r1,[r4,#0xe]
0002d8  f9b4000c          LDRSH    r0,[r4,#0xc]
0002dc  f7fffffe          BL       guiGraph_OffsetBaseXY
0002e0  e796              B        |L1.528|
                  |L1.738|
;;;382                    }
;;;383                }
;;;384                else
;;;385                {
;;;386                    // All container child items are processed. Reset counter of processed items and move up.
;;;387                    ((guiGenericContainer_t *)widget)->widgets.traverseIndex = 0;
0002e2  2100              MOVS     r1,#0
0002e4  f8841022          STRB     r1,[r4,#0x22]
;;;388                    widget->redrawForced = 0;
0002e8  f0200080          BIC      r0,r0,#0x80
0002ec  7220              STRB     r0,[r4,#8]
;;;389                    if (widget->parent == 0)    // root widget has no parent
0002ee  6860              LDR      r0,[r4,#4]
0002f0  b148              CBZ      r0,|L1.774|
;;;390                        break;
;;;391                    else
;;;392                    {
;;;393                        guiGraph_OffsetBaseXY(-widget->x, -widget->y);
0002f2  89e0              LDRH     r0,[r4,#0xe]
0002f4  4240              RSBS     r0,r0,#0
0002f6  b201              SXTH     r1,r0
0002f8  89a0              LDRH     r0,[r4,#0xc]
0002fa  4240              RSBS     r0,r0,#0
0002fc  b200              SXTH     r0,r0
0002fe  f7fffffe          BL       guiGraph_OffsetBaseXY
;;;394                        widget = widget->parent;
000302  6864              LDR      r4,[r4,#4]
000304  e784              B        |L1.528|
                  |L1.774|
;;;395                    }
;;;396                }
;;;397            }
;;;398            else
;;;399            {
;;;400                // Widget has no children. Move up.
;;;401                widget->redrawForced = 0;
;;;402                guiGraph_OffsetBaseXY(-widget->x, -widget->y);
;;;403                widget = widget->parent;
;;;404            }
;;;405        }
;;;406        // Process messages
;;;407        guiCore_ProcessMessageQueue();
000306  f7fffffe          BL       guiCore_ProcessMessageQueue
;;;408    }
00030a  e8bd81ff          POP      {r0-r8,pc}
                  |L1.782|
00030e  f0200080          BIC      r0,r0,#0x80           ;401
000312  7220              STRB     r0,[r4,#8]            ;401
000314  89e0              LDRH     r0,[r4,#0xe]          ;402
000316  4240              RSBS     r0,r0,#0              ;402
000318  b201              SXTH     r1,r0                 ;402
00031a  89a0              LDRH     r0,[r4,#0xc]          ;402
00031c  4240              RSBS     r0,r0,#0              ;402
00031e  b200              SXTH     r0,r0                 ;402
000320  f7fffffe          BL       guiGraph_OffsetBaseXY
000324  6864              LDR      r4,[r4,#4]            ;403
000326  e773              B        |L1.528|
;;;409    
                          ENDP

                  guiCore_ProcessTouchEvent PROC
;;;415    //-------------------------------------------------------//
;;;416    void guiCore_ProcessTouchEvent(int16_t x, int16_t y, uint8_t touchState)
000328  b51c              PUSH     {r2-r4,lr}
;;;417    {
;;;418        guiEvent_t event;
;;;419        event.type = GUI_EVENT_TOUCH;
00032a  230a              MOVS     r3,#0xa
00032c  f88d3000          STRB     r3,[sp,#0]
;;;420        event.spec = touchState;
000330  f88d2001          STRB     r2,[sp,#1]
;;;421        event.lparam = (uint16_t)x;
000334  f8ad0002          STRH     r0,[sp,#2]
;;;422        event.hparam = (uint16_t)y;
000338  f8ad1004          STRH     r1,[sp,#4]
;;;423    #ifdef ALWAYS_PASS_TOUCH_TO_FOCUSED
;;;424        guiCore_AddMessageToQueue(focusedWidget, &event);
;;;425    #else
;;;426        if ((focusedWidget != 0) && (focusedWidget->keepTouch))
00033c  4a30              LDR      r2,|L1.1024|
00033e  6850              LDR      r0,[r2,#4]  ; focusedWidget
000340  b130              CBZ      r0,|L1.848|
000342  7a41              LDRB     r1,[r0,#9]
000344  0749              LSLS     r1,r1,#29
000346  d503              BPL      |L1.848|
;;;427            guiCore_AddMessageToQueue(focusedWidget, &event);
000348  4669              MOV      r1,sp
00034a  f7fffffe          BL       guiCore_AddMessageToQueue
00034e  e003              B        |L1.856|
                  |L1.848|
;;;428        else
;;;429            guiCore_AddMessageToQueue(rootWidget, &event);
000350  4669              MOV      r1,sp
000352  6810              LDR      r0,[r2,#0]  ; rootWidget
000354  f7fffffe          BL       guiCore_AddMessageToQueue
                  |L1.856|
;;;430    #endif
;;;431        guiCore_ProcessMessageQueue();
000358  f7fffffe          BL       guiCore_ProcessMessageQueue
;;;432    }
00035c  bd1c              POP      {r2-r4,pc}
;;;433    
                          ENDP

                  guiCore_ProcessKeyEvent PROC
;;;437    //-------------------------------------------------------//
;;;438    void guiCore_ProcessKeyEvent(uint16_t code, uint8_t spec)
00035e  b51c              PUSH     {r2-r4,lr}
;;;439    {
;;;440        guiEvent_t event;
;;;441        event.type = GUI_EVENT_KEY;
000360  220b              MOVS     r2,#0xb
000362  f88d2000          STRB     r2,[sp,#0]
;;;442        event.spec = spec;
000366  f88d1001          STRB     r1,[sp,#1]
;;;443        event.lparam = code;
00036a  f8ad0002          STRH     r0,[sp,#2]
;;;444        guiCore_AddMessageToQueue(focusedWidget, &event);
00036e  4824              LDR      r0,|L1.1024|
000370  4669              MOV      r1,sp
000372  6840              LDR      r0,[r0,#4]  ; focusedWidget
000374  f7fffffe          BL       guiCore_AddMessageToQueue
;;;445        guiCore_ProcessMessageQueue();
000378  f7fffffe          BL       guiCore_ProcessMessageQueue
;;;446    }
00037c  bd1c              POP      {r2-r4,pc}
;;;447    
                          ENDP

                  guiCore_ProcessEncoderEvent PROC
;;;451    //-------------------------------------------------------//
;;;452    void guiCore_ProcessEncoderEvent(int16_t increment)
00037e  b51c              PUSH     {r2-r4,lr}
;;;453    {
;;;454        guiEvent_t event;
;;;455        event.type = GUI_EVENT_ENCODER;
000380  210c              MOVS     r1,#0xc
000382  f88d1000          STRB     r1,[sp,#0]
;;;456        event.spec = 0;
000386  2100              MOVS     r1,#0
000388  f88d1001          STRB     r1,[sp,#1]
;;;457        event.lparam = (uint16_t)increment;
00038c  f8ad0002          STRH     r0,[sp,#2]
;;;458        guiCore_AddMessageToQueue(focusedWidget, &event);
000390  481b              LDR      r0,|L1.1024|
000392  4669              MOV      r1,sp
000394  6840              LDR      r0,[r0,#4]  ; focusedWidget
000396  f7fffffe          BL       guiCore_AddMessageToQueue
;;;459        guiCore_ProcessMessageQueue();
00039a  f7fffffe          BL       guiCore_ProcessMessageQueue
;;;460    }
00039e  bd1c              POP      {r2-r4,pc}
;;;461    
                          ENDP

                  guiCore_ProcessTimers PROC
;;;465    //-------------------------------------------------------//
;;;466    void guiCore_ProcessTimers(void)
0003a0  b510              PUSH     {r4,lr}
;;;467    {
;;;468        uint8_t i;
;;;469        for (i=0; i<GUI_TIMER_COUNT; i++)
0003a2  2400              MOVS     r4,#0
                  |L1.932|
;;;470        {
;;;471            guiCore_TimerProcess(i);
0003a4  4620              MOV      r0,r4
0003a6  f7fffffe          BL       guiCore_TimerProcess
0003aa  1c64              ADDS     r4,r4,#1              ;469
0003ac  b2e4              UXTB     r4,r4                 ;469
0003ae  2c00              CMP      r4,#0                 ;469
0003b0  d0f8              BEQ      |L1.932|
;;;472        }
;;;473        guiCore_ProcessMessageQueue();
0003b2  e8bd4010          POP      {r4,lr}
0003b6  e7fe              B        guiCore_ProcessMessageQueue
;;;474    }
;;;475    
                          ENDP

                  guiCore_BroadcastEvent PROC
;;;486    //-------------------------------------------------------//
;;;487    void guiCore_BroadcastEvent(guiEvent_t event, uint8_t(*validator)(guiGenericWidget_t *widget))
0003b8  b537              PUSH     {r0-r2,r4,r5,lr}
;;;488    {
0003ba  4615              MOV      r5,r2
;;;489        guiGenericWidget_t *widget;
;;;490        guiGenericWidget_t *nextWidget;
;;;491        uint8_t index;
;;;492    
;;;493        // Start widget tree traverse from root widget
;;;494        widget = rootWidget;
0003bc  4810              LDR      r0,|L1.1024|
0003be  6804              LDR      r4,[r0,#0]  ; rootWidget
                  |L1.960|
;;;495    
;;;496        while(1)
;;;497        {
;;;498            // Check if widget has children
;;;499            if (widget->isContainer)
0003c0  7a20              LDRB     r0,[r4,#8]
0003c2  0740              LSLS     r0,r0,#29
0003c4  d527              BPL      |L1.1046|
;;;500            {
;;;501                if (((guiGenericContainer_t *)widget)->widgets.traverseIndex == 0)
0003c6  f8940022          LDRB     r0,[r4,#0x22]
0003ca  b938              CBNZ     r0,|L1.988|
;;;502                {
;;;503                    // The first time visit
;;;504                    if (validator(widget))
0003cc  4620              MOV      r0,r4
0003ce  47a8              BLX      r5
0003d0  b120              CBZ      r0,|L1.988|
;;;505                    {
;;;506                        widget->processEvent(widget, event);
0003d2  e9dd1200          LDRD     r1,r2,[sp,#0]
0003d6  6963              LDR      r3,[r4,#0x14]
0003d8  4620              MOV      r0,r4
0003da  4798              BLX      r3
                  |L1.988|
;;;507                    }
;;;508                }
;;;509    
;;;510                // If container has unprocessed children
;;;511                if ( ((guiGenericContainer_t *)widget)->widgets.traverseIndex <
0003dc  f8940022          LDRB     r0,[r4,#0x22]
0003e0  f8941020          LDRB     r1,[r4,#0x20]
0003e4  4288              CMP      r0,r1
0003e6  d20f              BCS      |L1.1032|
;;;512                     ((guiGenericContainer_t *)widget)->widgets.count )
;;;513                {
;;;514                    // switch to next one if possible
;;;515                    index = ((guiGenericContainer_t *)widget)->widgets.traverseIndex++;
0003e8  1c41              ADDS     r1,r0,#1
0003ea  f8841022          STRB     r1,[r4,#0x22]
;;;516                    nextWidget = ((guiGenericContainer_t *)widget)->widgets.elements[index];
0003ee  6a61              LDR      r1,[r4,#0x24]
0003f0  f8510020          LDR      r0,[r1,r0,LSL #2]
;;;517                    // check if widget actually exists
;;;518                    if ((nextWidget == 0))
0003f4  2800              CMP      r0,#0
0003f6  d0e3              BEQ      |L1.960|
;;;519                        continue;
;;;520                    widget = nextWidget;
0003f8  4604              MOV      r4,r0
0003fa  e7e1              B        |L1.960|
                  |L1.1020|
                          DCD      ||.bss||+0x10
                  |L1.1024|
                          DCD      ||.data||
                  |L1.1028|
                          DCD      ||.constdata||
                  |L1.1032|
;;;521                }
;;;522                else
;;;523                {
;;;524                    // All container child items are processed. Reset counter of processed items and move up.
;;;525                    ((guiGenericContainer_t *)widget)->widgets.traverseIndex = 0;
000408  2000              MOVS     r0,#0
00040a  f8840022          STRB     r0,[r4,#0x22]
;;;526                    if (widget->parent == 0)    // root widget has no parent
00040e  6864              LDR      r4,[r4,#4]
000410  2c00              CMP      r4,#0
000412  d1d5              BNE      |L1.960|
;;;527                        break;
;;;528                    else
;;;529                        widget = widget->parent;
;;;530                }
;;;531            }
;;;532            else
;;;533            {
;;;534                // Widget has no children. Move up.
;;;535                if (validator(widget))
;;;536                {
;;;537                    // The redrawRequired flag is reset by widget after processing DRAW event
;;;538                    widget->processEvent(widget, event);
;;;539                }
;;;540                widget = widget->parent;
;;;541            }
;;;542        }
;;;543    }
000414  bd3e              POP      {r1-r5,pc}
                  |L1.1046|
000416  4620              MOV      r0,r4                 ;535
000418  47a8              BLX      r5                    ;535
00041a  b120              CBZ      r0,|L1.1062|
00041c  e9dd1200          LDRD     r1,r2,[sp,#0]         ;538
000420  6963              LDR      r3,[r4,#0x14]         ;538
000422  4620              MOV      r0,r4                 ;538
000424  4798              BLX      r3                    ;538
                  |L1.1062|
000426  6864              LDR      r4,[r4,#4]            ;540
000428  e7ca              B        |L1.960|
;;;544    
                          ENDP

                  guiCore_UpdateValidator PROC
;;;560    //-------------------------------------------------------//
;;;561    uint8_t guiCore_UpdateValidator(guiGenericWidget_t *widget)
00042a  b110              CBZ      r0,|L1.1074|
;;;562    {
;;;563        if ((widget == 0) || (widget->updateRequired == 0))
00042c  7a00              LDRB     r0,[r0,#8]
00042e  0680              LSLS     r0,r0,#26
000430  d401              BMI      |L1.1078|
                  |L1.1074|
;;;564            return 0;
000432  2000              MOVS     r0,#0
;;;565        else
;;;566            return 1;
;;;567    }
000434  4770              BX       lr
                  |L1.1078|
000436  2001              MOVS     r0,#1                 ;566
000438  4770              BX       lr
;;;568    #endif
                          ENDP

                  guiCore_UpdateAll PROC
;;;549    //-------------------------------------------------------//
;;;550    void guiCore_UpdateAll(void)
00043a  b51c              PUSH     {r2-r4,lr}
;;;551    {
;;;552        guiCore_BroadcastEvent(guiEvent_UPDATE, guiCore_UpdateValidator);
00043c  48fe              LDR      r0,|L1.2104|
00043e  68c1              LDR      r1,[r0,#0xc]  ; guiEvent_UPDATE
000440  9100              STR      r1,[sp,#0]
000442  8a00              LDRH     r0,[r0,#0x10]  ; guiEvent_UPDATE
000444  f8ad0004          STRH     r0,[sp,#4]
000448  f2af0221          ADR      r2,guiCore_UpdateValidator + 1
00044c  e9dd0100          LDRD     r0,r1,[sp,#0]
000450  f7fffffe          BL       guiCore_BroadcastEvent
;;;553        guiCore_ProcessMessageQueue();
000454  e8bd401c          POP      {r2-r4,lr}
000458  e7fe              B        guiCore_ProcessMessageQueue
;;;554    }
;;;555    
                          ENDP

                  guiCore_InvalidateRect PROC
;;;587    //-------------------------------------------------------//
;;;588    void guiCore_InvalidateRect(guiGenericWidget_t *widget, int16_t x1, int16_t y1, uint16_t x2, uint16_t y2)
00045a  b570              PUSH     {r4-r6,lr}
;;;589    {
00045c  9c04              LDR      r4,[sp,#0x10]
;;;590        /*
;;;591            Approach 1:
;;;592                Add this rectangle to the list of invalidated rectangles of thew form.
;;;593                Redrawing will be split into two stages:
;;;594                    a.  Traverse whole widget tree and find for each container if it intercepts with any of the rectangles.
;;;595                        If there is some interseption, mark the container to fully redraw it and it's content if rectangle is
;;;596                        not an exact widget.
;;;597                        For each widget in the container also check interseption with the rectangles and mark those
;;;598                        who has interception.
;;;599                    b.  Add marked widgets and containers to redraw list. Sort list by Z-index and redraw every widget.
;;;600            Approach 2:
;;;601                Check if the rectangle lies on the parent widget completely. If so, mark parent to be redrawn and exit.
;;;602                If rectangle spands over the parent's borders, check the same for parent's parent and so on, until
;;;603                root widget is reached - i.e. propagate up the tree.
;;;604    
;;;605            If using Z-order, possibly put all form widgets into single array?
;;;606        */
;;;607    
;;;608    
;;;609        while (1)
00045e  e01a              B        |L1.1174|
                  |L1.1120|
;;;610        {
;;;611            if (widget->parent == 0)    // root widget has no parent
;;;612                break;
;;;613    
;;;614            // Convert rectangle into parent's coordinates
;;;615            x1 += widget->x;
000460  8985              LDRH     r5,[r0,#0xc]
000462  4429              ADD      r1,r1,r5
000464  b209              SXTH     r1,r1
;;;616            x2 += widget->x;
000466  442b              ADD      r3,r3,r5
000468  b29b              UXTH     r3,r3
;;;617            y1 += widget->y;
00046a  89c5              LDRH     r5,[r0,#0xe]
00046c  18a8              ADDS     r0,r5,r2
00046e  b202              SXTH     r2,r0
;;;618            y2 += widget->y;
000470  1928              ADDS     r0,r5,r4
000472  b284              UXTH     r4,r0
;;;619    
;;;620            // Move up the tree
;;;621            widget = widget->parent;
000474  4630              MOV      r0,r6
;;;622    
;;;623            // Make parent widget redraw
;;;624            widget->redrawRequired = 1;
000476  7a05              LDRB     r5,[r0,#8]
000478  f0450540          ORR      r5,r5,#0x40
;;;625            widget->redrawForced = 1;
00047c  f0450580          ORR      r5,r5,#0x80
000480  7205              STRB     r5,[r0,#8]
;;;626    
;;;627            // Check if rectangle lies inside parent
;;;628            if ( (x1 >= 0) &&
000482  2900              CMP      r1,#0
000484  db07              BLT      |L1.1174|
;;;629                 (y1 >= 0) &&
000486  2a00              CMP      r2,#0
000488  db05              BLT      |L1.1174|
;;;630                 (x2 < widget->width) &&
00048a  8a05              LDRH     r5,[r0,#0x10]
00048c  429d              CMP      r5,r3
00048e  d902              BLS      |L1.1174|
;;;631                 (y2 < widget->height) )
000490  8a45              LDRH     r5,[r0,#0x12]
000492  42a5              CMP      r5,r4
000494  d802              BHI      |L1.1180|
                  |L1.1174|
000496  6846              LDR      r6,[r0,#4]            ;611
000498  2e00              CMP      r6,#0                 ;611
00049a  d1e1              BNE      |L1.1120|
                  |L1.1180|
;;;632            {
;;;633                break;
;;;634            }
;;;635        }
;;;636    }
00049c  bd70              POP      {r4-r6,pc}
;;;637    
                          ENDP

                  guiCore_ConvertToAbsoluteXY PROC
;;;664    //-------------------------------------------------------//
;;;665    void guiCore_ConvertToAbsoluteXY(guiGenericWidget_t *widget, int16_t *x, int16_t *y)
00049e  b510              PUSH     {r4,lr}
;;;666    {
;;;667        while(widget != 0)
;;;668        {
;;;669            // Convert XY into parent's coordinates
;;;670            *x += widget->x;
;;;671            *y += widget->y;
;;;672    
;;;673            // Move up the tree
;;;674            widget = widget->parent;
0004a0  e008              B        |L1.1204|
                  |L1.1186|
0004a2  880b              LDRH     r3,[r1,#0]            ;670
0004a4  8984              LDRH     r4,[r0,#0xc]          ;670
0004a6  4423              ADD      r3,r3,r4              ;670
0004a8  800b              STRH     r3,[r1,#0]            ;670
0004aa  8813              LDRH     r3,[r2,#0]            ;671
0004ac  89c4              LDRH     r4,[r0,#0xe]          ;671
0004ae  4423              ADD      r3,r3,r4              ;671
0004b0  8013              STRH     r3,[r2,#0]            ;671
0004b2  6840              LDR      r0,[r0,#4]
                  |L1.1204|
0004b4  2800              CMP      r0,#0                 ;667
0004b6  d1f4              BNE      |L1.1186|
;;;675        }
;;;676    }
0004b8  bd10              POP      {r4,pc}
;;;677    
                          ENDP

                  guiCore_ConvertToRelativeXY PROC
;;;682    //-------------------------------------------------------//
;;;683    void guiCore_ConvertToRelativeXY(guiGenericWidget_t *widget, int16_t *x, int16_t *y)
0004ba  b510              PUSH     {r4,lr}
;;;684    {
;;;685        while(widget != 0)
;;;686        {
;;;687            // Convert XY into parent's coordinates
;;;688            *x -= widget->x;
;;;689            *y -= widget->y;
;;;690    
;;;691            // Move up the tree
;;;692            widget = widget->parent;
0004bc  e008              B        |L1.1232|
                  |L1.1214|
0004be  880b              LDRH     r3,[r1,#0]            ;688
0004c0  8984              LDRH     r4,[r0,#0xc]          ;688
0004c2  1b1b              SUBS     r3,r3,r4              ;688
0004c4  800b              STRH     r3,[r1,#0]            ;688
0004c6  8813              LDRH     r3,[r2,#0]            ;689
0004c8  89c4              LDRH     r4,[r0,#0xe]          ;689
0004ca  1b1b              SUBS     r3,r3,r4              ;689
0004cc  8013              STRH     r3,[r2,#0]            ;689
0004ce  6840              LDR      r0,[r0,#4]
                  |L1.1232|
0004d0  2800              CMP      r0,#0                 ;685
0004d2  d1f4              BNE      |L1.1214|
;;;693        }
;;;694    }
0004d4  bd10              POP      {r4,pc}
;;;695    
                          ENDP

                  guiCore_GetTouchedWidgetAtXY PROC
;;;703    //-------------------------------------------------------//
;;;704    guiGenericWidget_t *guiCore_GetTouchedWidgetAtXY(guiGenericWidget_t *widget, int16_t x, int16_t y)
0004d6  b5f0              PUSH     {r4-r7,lr}
;;;705    {
0004d8  4604              MOV      r4,r0
;;;706        guiGenericWidget_t *w;
;;;707        uint8_t i;
;;;708    
;;;709        // First check if point lies inside widget
;;;710        if ((x < 0) || (x >= widget->width))
0004da  2900              CMP      r1,#0
0004dc  db02              BLT      |L1.1252|
0004de  8a20              LDRH     r0,[r4,#0x10]
0004e0  4288              CMP      r0,r1
0004e2  dc01              BGT      |L1.1256|
                  |L1.1252|
;;;711            return 0;
0004e4  2000              MOVS     r0,#0
;;;712        if ((y < 0) || (y >= widget->height))
;;;713            return 0;
;;;714    
;;;715        if (widget->isContainer)
;;;716        {
;;;717            // Point is inside container or one of it's widgets. Find out which one.
;;;718            i = ((guiGenericContainer_t *)widget)->widgets.count - 1;
;;;719            do
;;;720            {
;;;721                w = ((guiGenericContainer_t *)widget)->widgets.elements[i];
;;;722                if (w == 0)
;;;723                    continue;
;;;724                if ((w->acceptTouch) && (w->isVisible))   // TODO - add isEnabled, etc
;;;725                {
;;;726                    if ((x >= w->x) && (x < w->x + w->width) &&
;;;727                        (y >= w->y) && (y < w->y + w->height))
;;;728                    {
;;;729                        return w;
;;;730                    }
;;;731                }
;;;732            } while(i--);
;;;733        }
;;;734        // Not found - return widget itself
;;;735        return widget;
;;;736    }
0004e6  bdf0              POP      {r4-r7,pc}
                  |L1.1256|
0004e8  2a00              CMP      r2,#0                 ;712
0004ea  db02              BLT      |L1.1266|
0004ec  8a60              LDRH     r0,[r4,#0x12]         ;712
0004ee  4290              CMP      r0,r2                 ;712
0004f0  dc01              BGT      |L1.1270|
                  |L1.1266|
0004f2  2000              MOVS     r0,#0                 ;713
                  |L1.1268|
0004f4  bdf0              POP      {r4-r7,pc}
                  |L1.1270|
0004f6  7a20              LDRB     r0,[r4,#8]            ;715
0004f8  0740              LSLS     r0,r0,#29             ;715
0004fa  d521              BPL      |L1.1344|
0004fc  f8940020          LDRB     r0,[r4,#0x20]         ;718
000500  1e40              SUBS     r0,r0,#1              ;718
000502  b2c3              UXTB     r3,r0                 ;718
000504  6a66              LDR      r6,[r4,#0x24]         ;721
                  |L1.1286|
000506  f8560023          LDR      r0,[r6,r3,LSL #2]     ;721
00050a  b1a0              CBZ      r0,|L1.1334|
00050c  7a05              LDRB     r5,[r0,#8]            ;724
00050e  07af              LSLS     r7,r5,#30             ;724
000510  d511              BPL      |L1.1334|
000512  06ed              LSLS     r5,r5,#27             ;724
000514  d50f              BPL      |L1.1334|
000516  f9b0500c          LDRSH    r5,[r0,#0xc]          ;726
00051a  428d              CMP      r5,r1                 ;726
00051c  dc0b              BGT      |L1.1334|
00051e  8a07              LDRH     r7,[r0,#0x10]         ;726
000520  443d              ADD      r5,r5,r7              ;726
000522  428d              CMP      r5,r1                 ;726
000524  dd07              BLE      |L1.1334|
000526  f9b0500e          LDRSH    r5,[r0,#0xe]          ;727
00052a  4295              CMP      r5,r2                 ;727
00052c  dc03              BGT      |L1.1334|
00052e  8a47              LDRH     r7,[r0,#0x12]         ;727
000530  443d              ADD      r5,r5,r7              ;727
000532  4295              CMP      r5,r2                 ;727
000534  dcde              BGT      |L1.1268|
                  |L1.1334|
000536  0018              MOVS     r0,r3                 ;732
000538  f1a30301          SUB      r3,r3,#1              ;732
00053c  b2db              UXTB     r3,r3                 ;732
00053e  d1e2              BNE      |L1.1286|
                  |L1.1344|
000540  4620              MOV      r0,r4                 ;735
000542  bdf0              POP      {r4-r7,pc}
;;;737    
                          ENDP

                  guiCore_RequestFocusChange PROC
;;;757    //-------------------------------------------------------//
;;;758    void guiCore_RequestFocusChange(guiGenericWidget_t *newFocusedWidget)
000544  49bd              LDR      r1,|L1.2108|
;;;759    {
;;;760        // Tell new widget to get focus
;;;761        if ((newFocusedWidget != focusedWidget) && (newFocusedWidget != 0))
000546  6849              LDR      r1,[r1,#4]  ; focusedWidget
000548  4288              CMP      r0,r1
00054a  d004              BEQ      |L1.1366|
00054c  2800              CMP      r0,#0
00054e  d002              BEQ      |L1.1366|
;;;762        {
;;;763            guiCore_AddMessageToQueue(newFocusedWidget, &guiEvent_FOCUS);
000550  49b9              LDR      r1,|L1.2104|
000552  3124              ADDS     r1,r1,#0x24
000554  e7fe              B        guiCore_AddMessageToQueue
                  |L1.1366|
;;;764        }
;;;765    }
000556  4770              BX       lr
;;;766    
                          ENDP

                  guiCore_GetWidgetIndex PROC
;;;849    //-------------------------------------------------------//
;;;850    uint8_t guiCore_GetWidgetIndex(guiGenericWidget_t *widget)
000558  b510              PUSH     {r4,lr}
;;;851    {
00055a  4601              MOV      r1,r0
;;;852        uint8_t i;
;;;853        if ((widget == 0) || (widget->parent == 0))
00055c  b129              CBZ      r1,|L1.1386|
00055e  684a              LDR      r2,[r1,#4]
000560  b11a              CBZ      r2,|L1.1386|
;;;854            return 0;
;;;855        for (i = 0; i < ((guiGenericContainer_t *)widget->parent)->widgets.count; i++)
000562  2000              MOVS     r0,#0
000564  f8923020          LDRB     r3,[r2,#0x20]
000568  e008              B        |L1.1404|
                  |L1.1386|
00056a  2000              MOVS     r0,#0                 ;854
                  |L1.1388|
;;;856        {
;;;857            if (((guiGenericContainer_t *)widget->parent)->widgets.elements[i] == widget)
;;;858                return i;
;;;859        }
;;;860        return 0;   // error - widget is not present in parent's collection
;;;861    }
00056c  bd10              POP      {r4,pc}
                  |L1.1390|
00056e  6a54              LDR      r4,[r2,#0x24]         ;857
000570  f8544020          LDR      r4,[r4,r0,LSL #2]     ;857
000574  428c              CMP      r4,r1                 ;857
000576  d0f9              BEQ      |L1.1388|
000578  1c40              ADDS     r0,r0,#1              ;855
00057a  b2c0              UXTB     r0,r0                 ;855
                  |L1.1404|
00057c  4283              CMP      r3,r0                 ;855
00057e  d8f6              BHI      |L1.1390|
000580  2000              MOVS     r0,#0                 ;860
000582  bd10              POP      {r4,pc}
;;;862    
                          ENDP

                  guiCore_AcceptFocus PROC
;;;771    //-------------------------------------------------------//
;;;772    void guiCore_AcceptFocus(guiGenericWidget_t *widget)
000584  b530              PUSH     {r4,r5,lr}
;;;773    {
000586  4604              MOV      r4,r0
;;;774        uint8_t index;
;;;775        if ((widget != 0) && (widget != focusedWidget))     // CHECKME
000588  2c00              CMP      r4,#0
00058a  d012              BEQ      |L1.1458|
00058c  4dab              LDR      r5,|L1.2108|
00058e  6868              LDR      r0,[r5,#4]  ; focusedWidget
000590  4284              CMP      r4,r0
000592  d00e              BEQ      |L1.1458|
;;;776        {
;;;777            // First tell currently focused widget to loose focus
;;;778            if (focusedWidget != 0)
000594  b118              CBZ      r0,|L1.1438|
;;;779            {
;;;780                guiCore_AddMessageToQueue(focusedWidget, &guiEvent_UNFOCUS);
000596  49a8              LDR      r1,|L1.2104|
000598  311e              ADDS     r1,r1,#0x1e
00059a  f7fffffe          BL       guiCore_AddMessageToQueue
                  |L1.1438|
;;;781            }
;;;782            focusedWidget = widget;
00059e  606c              STR      r4,[r5,#4]  ; focusedWidget
;;;783            if ((guiGenericContainer_t *)widget->parent != 0)
0005a0  6860              LDR      r0,[r4,#4]
0005a2  2800              CMP      r0,#0
0005a4  d005              BEQ      |L1.1458|
;;;784            {
;;;785                // Store index for container
;;;786                index = guiCore_GetWidgetIndex(focusedWidget);
0005a6  4620              MOV      r0,r4
0005a8  f7fffffe          BL       guiCore_GetWidgetIndex
;;;787                ((guiGenericContainer_t *)widget->parent)->widgets.focusedIndex = index;
0005ac  6861              LDR      r1,[r4,#4]
0005ae  f8810021          STRB     r0,[r1,#0x21]
                  |L1.1458|
;;;788            }
;;;789        }
;;;790    }
0005b2  bd30              POP      {r4,r5,pc}
;;;791    
                          ENDP

                  guiCore_RequestFocusNextWidget PROC
;;;796    //-------------------------------------------------------//
;;;797    void guiCore_RequestFocusNextWidget(guiGenericContainer_t *container, int8_t tabDir)
0005b4  e92d01f0          PUSH     {r4-r8}
;;;798    {
;;;799        uint8_t currentTabIndex;
;;;800        uint8_t i;
;;;801        int16_t minTabIndex = 0x200;   // maximum x2
0005b8  f44f7700          MOV      r7,#0x200
;;;802        int16_t tmp;
;;;803        uint8_t minWidgetIndex = container->widgets.count;
0005bc  f8906020          LDRB     r6,[r0,#0x20]
0005c0  46b4              MOV      r12,r6
;;;804        guiGenericWidget_t *widget;
;;;805    
;;;806        currentTabIndex = 0;
0005c2  2400              MOVS     r4,#0
;;;807    
;;;808        // Check if current widget belongs to specified container's collection
;;;809        if (focusedWidget)
0005c4  4a9d              LDR      r2,|L1.2108|
0005c6  6852              LDR      r2,[r2,#4]  ; focusedWidget
0005c8  b11a              CBZ      r2,|L1.1490|
;;;810        {
;;;811            if (focusedWidget->parent == (guiGenericWidget_t *)container)
0005ca  6853              LDR      r3,[r2,#4]
0005cc  4283              CMP      r3,r0
0005ce  d100              BNE      |L1.1490|
;;;812                currentTabIndex = focusedWidget->tabIndex;
0005d0  7ad4              LDRB     r4,[r2,#0xb]
                  |L1.1490|
;;;813        }
;;;814    
;;;815    
;;;816        // Find widget with next tabIndex
;;;817        for (i = 0; i < container->widgets.count; i++)
0005d2  2200              MOVS     r2,#0
0005d4  e01e              B        |L1.1556|
                  |L1.1494|
;;;818        {
;;;819            widget = (guiGenericWidget_t *)container->widgets.elements[i];
0005d6  6a43              LDR      r3,[r0,#0x24]
0005d8  f8533022          LDR      r3,[r3,r2,LSL #2]
;;;820            if (widget == 0)
0005dc  b1c3              CBZ      r3,|L1.1552|
;;;821                continue;
;;;822            if ((widget->acceptFocusByTab) && (widget->isVisible))
0005de  7a1d              LDRB     r5,[r3,#8]
0005e0  ea5f78c5          LSLS     r8,r5,#31
0005e4  d014              BEQ      |L1.1552|
0005e6  06ed              LSLS     r5,r5,#27
0005e8  d512              BPL      |L1.1552|
;;;823            {
;;;824                if (tabDir >= 0)
0005ea  2900              CMP      r1,#0
0005ec  db05              BLT      |L1.1530|
;;;825                    tmp = (widget->tabIndex <= currentTabIndex) ? widget->tabIndex + 256 : widget->tabIndex;
0005ee  7adb              LDRB     r3,[r3,#0xb]
0005f0  42a3              CMP      r3,r4
0005f2  d809              BHI      |L1.1544|
0005f4  f5037380          ADD      r3,r3,#0x100
0005f8  e006              B        |L1.1544|
                  |L1.1530|
;;;826                else
;;;827                    tmp = (widget->tabIndex >= currentTabIndex) ? -(widget->tabIndex - 256) : -widget->tabIndex;
0005fa  7adb              LDRB     r3,[r3,#0xb]
0005fc  42a3              CMP      r3,r4
0005fe  d302              BCC      |L1.1542|
000600  f5c37380          RSB      r3,r3,#0x100
000604  e000              B        |L1.1544|
                  |L1.1542|
000606  425b              RSBS     r3,r3,#0
                  |L1.1544|
;;;828    
;;;829                if (tmp < minTabIndex)
000608  42bb              CMP      r3,r7
00060a  da01              BGE      |L1.1552|
;;;830                {
;;;831                    minTabIndex = tmp;
00060c  461f              MOV      r7,r3
;;;832                    minWidgetIndex = i;
00060e  4616              MOV      r6,r2
                  |L1.1552|
000610  1c52              ADDS     r2,r2,#1              ;817
000612  b2d2              UXTB     r2,r2                 ;817
                  |L1.1556|
000614  4594              CMP      r12,r2                ;817
000616  d8de              BHI      |L1.1494|
;;;833                }
;;;834            }
;;;835        }
;;;836    
;;;837        if (minWidgetIndex < container->widgets.count)
000618  45b4              CMP      r12,r6
00061a  d905              BLS      |L1.1576|
;;;838        {
;;;839            widget = container->widgets.elements[minWidgetIndex];
00061c  6a40              LDR      r0,[r0,#0x24]
00061e  f8500026          LDR      r0,[r0,r6,LSL #2]
;;;840            //container->widgets.focusedIndex = minWidgetIndex;
;;;841            guiCore_RequestFocusChange(widget);
000622  e8bd01f0          POP      {r4-r8}
000626  e7fe              B        guiCore_RequestFocusChange
                  |L1.1576|
;;;842        }
;;;843    }
000628  e8bd01f0          POP      {r4-r8}
00062c  4770              BX       lr
;;;844    
                          ENDP

                  guiCore_CheckWidgetTabIndex PROC
;;;871    //-------------------------------------------------------//
;;;872    uint8_t guiCore_CheckWidgetTabIndex(guiGenericWidget_t *widget)
00062e  e92d41f0          PUSH     {r4-r8,lr}
;;;873    {
;;;874        // TODO - add canBeFocused() function
;;;875        uint8_t i;
;;;876        uint8_t currTabIndex;
;;;877        uint8_t maxTabIndex;
;;;878        uint8_t minTabIndex;
;;;879        guiGenericWidget_t *w;
;;;880        if (widget == 0) return 0;
000632  b138              CBZ      r0,|L1.1604|
;;;881    
;;;882        currTabIndex = widget->tabIndex;
000634  7ac4              LDRB     r4,[r0,#0xb]
;;;883        maxTabIndex = currTabIndex;
000636  4625              MOV      r5,r4
;;;884        minTabIndex = currTabIndex;
000638  4626              MOV      r6,r4
;;;885    
;;;886        for (i = 0; i < ((guiGenericContainer_t *)widget->parent)->widgets.count; i++)
00063a  2100              MOVS     r1,#0
00063c  6847              LDR      r7,[r0,#4]
00063e  f897c020          LDRB     r12,[r7,#0x20]
000642  e016              B        |L1.1650|
                  |L1.1604|
000644  2000              MOVS     r0,#0                 ;880
                  |L1.1606|
;;;887        {
;;;888            w = ((guiGenericContainer_t *)widget->parent)->widgets.elements[i];
;;;889            if (w == 0) continue;
;;;890            if ((w->acceptFocusByTab == 0) || (w->isVisible == 0)) continue;    // TODO - add isEnabled
;;;891            if (w->tabIndex > widget->tabIndex)
;;;892                maxTabIndex = w->tabIndex;
;;;893            else if (w->tabIndex < widget->tabIndex)
;;;894                minTabIndex = w->tabIndex;
;;;895        }
;;;896    
;;;897        if (currTabIndex == maxTabIndex)
;;;898            return TABINDEX_IS_MAX;
;;;899        if (currTabIndex == minTabIndex)
;;;900            return TABINDEX_IS_MIN;
;;;901    
;;;902        return TABINDEX_IS_NORM;
;;;903    }
000646  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1610|
00064a  6a7a              LDR      r2,[r7,#0x24]         ;888
00064c  f8522021          LDR      r2,[r2,r1,LSL #2]     ;888
000650  b162              CBZ      r2,|L1.1644|
000652  7a13              LDRB     r3,[r2,#8]            ;890
000654  ea5f78c3          LSLS     r8,r3,#31             ;890
000658  d008              BEQ      |L1.1644|
00065a  06db              LSLS     r3,r3,#27             ;890
00065c  d506              BPL      |L1.1644|
00065e  7ad3              LDRB     r3,[r2,#0xb]          ;891
000660  42a3              CMP      r3,r4                 ;891
000662  d901              BLS      |L1.1640|
000664  461d              MOV      r5,r3                 ;892
000666  e001              B        |L1.1644|
                  |L1.1640|
000668  d200              BCS      |L1.1644|
00066a  461e              MOV      r6,r3                 ;894
                  |L1.1644|
00066c  f1010101          ADD      r1,r1,#1              ;886
000670  b2c9              UXTB     r1,r1                 ;886
                  |L1.1650|
000672  458c              CMP      r12,r1                ;886
000674  d8e9              BHI      |L1.1610|
000676  42ac              CMP      r4,r5                 ;897
000678  d101              BNE      |L1.1662|
00067a  2002              MOVS     r0,#2                 ;898
00067c  e7e3              B        |L1.1606|
                  |L1.1662|
00067e  42b4              CMP      r4,r6                 ;899
000680  d101              BNE      |L1.1670|
000682  2001              MOVS     r0,#1                 ;900
000684  e7df              B        |L1.1606|
                  |L1.1670|
000686  2000              MOVS     r0,#0                 ;902
000688  e7dd              B        |L1.1606|
;;;904    
                          ENDP

                  guiCore_CallEventHandler PROC
;;;1045   //-------------------------------------------------------//
;;;1046   uint8_t guiCore_CallEventHandler(guiGenericWidget_t *widget, guiEvent_t *event)
00068a  e92d41f0          PUSH     {r4-r8,lr}
;;;1047   {
00068e  4605              MOV      r5,r0
000690  460e              MOV      r6,r1
;;;1048       uint8_t i;
;;;1049       uint8_t handlerResult = GUI_EVENT_DECLINE;
000692  2000              MOVS     r0,#0
;;;1050       for(i=0; i<widget->handlers.count; i++)
000694  2400              MOVS     r4,#0
;;;1051       {
;;;1052           if (widget->handlers.elements[i].eventType == event->type)
;;;1053           {
;;;1054               handlerResult = widget->handlers.elements[i].handler(widget, event);
000696  2704              MOVS     r7,#4
000698  e00d              B        |L1.1718|
                  |L1.1690|
00069a  69ea              LDR      r2,[r5,#0x1c]         ;1052
00069c  7833              LDRB     r3,[r6,#0]            ;1052
00069e  f8121034          LDRB     r1,[r2,r4,LSL #3]     ;1052
0006a2  4299              CMP      r1,r3                 ;1052
0006a4  d105              BNE      |L1.1714|
0006a6  eb0700c4          ADD      r0,r7,r4,LSL #3
0006aa  4631              MOV      r1,r6
0006ac  5812              LDR      r2,[r2,r0]
0006ae  4628              MOV      r0,r5
0006b0  4790              BLX      r2
                  |L1.1714|
0006b2  1c64              ADDS     r4,r4,#1              ;1050
0006b4  b2e4              UXTB     r4,r4                 ;1050
                  |L1.1718|
0006b6  7e29              LDRB     r1,[r5,#0x18]         ;1050
0006b8  42a1              CMP      r1,r4                 ;1050
0006ba  d8ee              BHI      |L1.1690|
;;;1055           }
;;;1056       }
;;;1057       return handlerResult;
;;;1058   }
0006bc  e7c3              B        |L1.1606|
;;;1059   
                          ENDP

                  guiCore_SetVisible PROC
;;;926    //-------------------------------------------------------//
;;;927    uint8_t guiCore_SetVisible(guiGenericWidget_t *widget, uint8_t newVisibleState)
0006be  b53e              PUSH     {r1-r5,lr}
;;;928    {
0006c0  4604              MOV      r4,r0
;;;929        guiEvent_t event;
;;;930        if (widget == 0) return 0;
0006c2  b12c              CBZ      r4,|L1.1744|
;;;931        if (newVisibleState)
0006c4  b161              CBZ      r1,|L1.1760|
;;;932        {
;;;933            // Show widget
;;;934            if (widget->isVisible) return 0;
0006c6  7a20              LDRB     r0,[r4,#8]
0006c8  06c1              LSLS     r1,r0,#27
0006ca  d503              BPL      |L1.1748|
0006cc  2000              MOVS     r0,#0
;;;935            widget->isVisible = 1;
;;;936            widget->redrawForced = 1;
;;;937        }
;;;938        else
;;;939        {
;;;940            // Hide widget
;;;941            if (widget->isVisible == 0) return 0;
;;;942            widget->isVisible = 0;
;;;943            guiCore_InvalidateRect(widget, widget->x, widget->y,
;;;944                  widget->x + widget->width - 1, widget->y + widget->height - 1);
;;;945        }
;;;946        // Visible state changed - call handler
;;;947        if (widget->handlers.count != 0)
;;;948        {
;;;949            event.type = GUI_ON_VISIBLE_CHANGED;
;;;950            guiCore_CallEventHandler(widget, &event);
;;;951        }
;;;952        return 1;
;;;953    }
0006ce  bd3e              POP      {r1-r5,pc}
                  |L1.1744|
0006d0  2000              MOVS     r0,#0                 ;930
0006d2  bd3e              POP      {r1-r5,pc}
                  |L1.1748|
0006d4  f0400010          ORR      r0,r0,#0x10           ;935
0006d8  f0400080          ORR      r0,r0,#0x80           ;936
0006dc  7220              STRB     r0,[r4,#8]            ;936
0006de  e017              B        |L1.1808|
                  |L1.1760|
0006e0  7a20              LDRB     r0,[r4,#8]            ;941
0006e2  06c1              LSLS     r1,r0,#27             ;941
0006e4  d401              BMI      |L1.1770|
0006e6  2000              MOVS     r0,#0                 ;941
0006e8  bd3e              POP      {r1-r5,pc}
                  |L1.1770|
0006ea  f0200010          BIC      r0,r0,#0x10           ;942
0006ee  7220              STRB     r0,[r4,#8]            ;942
0006f0  f9b4200e          LDRSH    r2,[r4,#0xe]          ;943
0006f4  8a60              LDRH     r0,[r4,#0x12]         ;943
0006f6  4410              ADD      r0,r0,r2              ;943
0006f8  1e40              SUBS     r0,r0,#1              ;943
0006fa  b280              UXTH     r0,r0                 ;943
0006fc  9000              STR      r0,[sp,#0]            ;943
0006fe  f9b4100c          LDRSH    r1,[r4,#0xc]          ;943
000702  8a20              LDRH     r0,[r4,#0x10]         ;943
000704  4408              ADD      r0,r0,r1              ;943
000706  1e40              SUBS     r0,r0,#1              ;943
000708  b283              UXTH     r3,r0                 ;943
00070a  4620              MOV      r0,r4                 ;943
00070c  f7fffffe          BL       guiCore_InvalidateRect
                  |L1.1808|
000710  7e20              LDRB     r0,[r4,#0x18]         ;947
000712  b130              CBZ      r0,|L1.1826|
000714  2082              MOVS     r0,#0x82              ;949
000716  f88d0004          STRB     r0,[sp,#4]            ;949
00071a  a901              ADD      r1,sp,#4              ;950
00071c  4620              MOV      r0,r4                 ;950
00071e  f7fffffe          BL       guiCore_CallEventHandler
                  |L1.1826|
000722  2001              MOVS     r0,#1                 ;952
000724  bd3e              POP      {r1-r5,pc}
;;;954    
                          ENDP

                  guiCore_SetFocused PROC
;;;965    //-------------------------------------------------------//
;;;966    uint8_t guiCore_SetFocused(guiGenericWidget_t *widget, uint8_t newFocusedState)
000726  b51c              PUSH     {r2-r4,lr}
;;;967    {
000728  4604              MOV      r4,r0
;;;968        guiEvent_t event;
;;;969        if (widget == 0) return 0;
00072a  b12c              CBZ      r4,|L1.1848|
;;;970    
;;;971        if (newFocusedState)
00072c  b169              CBZ      r1,|L1.1866|
;;;972        {
;;;973            // Set focus on widget
;;;974            if (widget->isFocused) return 0;
00072e  7a20              LDRB     r0,[r4,#8]
000730  0701              LSLS     r1,r0,#28
000732  d503              BPL      |L1.1852|
000734  2000              MOVS     r0,#0
;;;975            widget->isFocused = 1;
;;;976            guiCore_AcceptFocus(widget);
;;;977        }
;;;978        else
;;;979        {
;;;980            // Focus was removed
;;;981            if (widget->isFocused == 0) return 0;
;;;982            widget->isFocused = 0;
;;;983        }
;;;984        // Focused state changed - call handler
;;;985        //if (widget->showFocus)        // CHECKME
;;;986        //{
;;;987            widget->redrawFocus = 1;
;;;988            widget->redrawRequired = 1;
;;;989        //}
;;;990        // Focus state changed - call handler
;;;991        if (widget->handlers.count != 0)
;;;992        {
;;;993            event.type = GUI_ON_FOCUS_CHANGED;
;;;994            guiCore_CallEventHandler(widget, &event);
;;;995        }
;;;996        return 1;
;;;997    }
000736  bd1c              POP      {r2-r4,pc}
                  |L1.1848|
000738  2000              MOVS     r0,#0                 ;969
00073a  bd1c              POP      {r2-r4,pc}
                  |L1.1852|
00073c  f0400008          ORR      r0,r0,#8              ;975
000740  7220              STRB     r0,[r4,#8]            ;975
000742  4620              MOV      r0,r4                 ;976
000744  f7fffffe          BL       guiCore_AcceptFocus
000748  e007              B        |L1.1882|
                  |L1.1866|
00074a  7a20              LDRB     r0,[r4,#8]            ;981
00074c  0701              LSLS     r1,r0,#28             ;981
00074e  d401              BMI      |L1.1876|
000750  2000              MOVS     r0,#0                 ;981
000752  bd1c              POP      {r2-r4,pc}
                  |L1.1876|
000754  f0200008          BIC      r0,r0,#8              ;982
000758  7220              STRB     r0,[r4,#8]            ;982
                  |L1.1882|
00075a  7a60              LDRB     r0,[r4,#9]            ;987
00075c  f0400001          ORR      r0,r0,#1              ;987
000760  7260              STRB     r0,[r4,#9]            ;987
000762  7a20              LDRB     r0,[r4,#8]            ;988
000764  f0400040          ORR      r0,r0,#0x40           ;988
000768  7220              STRB     r0,[r4,#8]            ;988
00076a  7e20              LDRB     r0,[r4,#0x18]         ;991
00076c  b130              CBZ      r0,|L1.1916|
00076e  2080              MOVS     r0,#0x80              ;993
000770  f88d0000          STRB     r0,[sp,#0]            ;993
000774  4669              MOV      r1,sp                 ;994
000776  4620              MOV      r0,r4                 ;994
000778  f7fffffe          BL       guiCore_CallEventHandler
                  |L1.1916|
00077c  2001              MOVS     r0,#1                 ;996
00077e  bd1c              POP      {r2-r4,pc}
;;;998    
                          ENDP

                  guiCore_SetVisibleByTag PROC
;;;1012   //-------------------------------------------------------//
;;;1013   void guiCore_SetVisibleByTag(guiWidgetCollection_t *collection, uint8_t minTag, uint8_t maxTag, uint8_t mode)
000780  e92d47fc          PUSH     {r2-r10,lr}
;;;1014   {
000784  4606              MOV      r6,r0
000786  4689              MOV      r9,r1
000788  4692              MOV      r10,r2
00078a  461f              MOV      r7,r3
;;;1015       uint8_t i;
;;;1016       uint8_t tagInRange;
;;;1017       guiGenericWidget_t *widget;
;;;1018       for(i=0; i<collection->count; i++)
00078c  2500              MOVS     r5,#0
;;;1019       {
;;;1020           widget = (guiGenericWidget_t *)collection->elements[i];
;;;1021           if (widget == 0)
;;;1022               continue;
;;;1023           tagInRange = ((widget->tag >= minTag) && (widget->tag <= maxTag)) ? mode & 0x3 : mode & 0xC;
;;;1024           if ((tagInRange == ITEMS_IN_RANGE_ARE_VISIBLE) || (tagInRange == ITEMS_OUT_OF_RANGE_ARE_VISIBLE))
;;;1025           {
;;;1026               if (widget->isVisible == 0)
;;;1027                   widget->processEvent(widget, guiEvent_SHOW);
00078e  f8df80a8          LDR      r8,|L1.2104|
000792  e035              B        |L1.2048|
                  |L1.1940|
000794  6870              LDR      r0,[r6,#4]            ;1020
000796  f8500025          LDR      r0,[r0,r5,LSL #2]     ;1020
00079a  b300              CBZ      r0,|L1.2014|
00079c  7a81              LDRB     r1,[r0,#0xa]          ;1023
00079e  4549              CMP      r1,r9                 ;1023
0007a0  d304              BCC      |L1.1964|
0007a2  4551              CMP      r1,r10                ;1023
0007a4  d802              BHI      |L1.1964|
0007a6  f0070403          AND      r4,r7,#3              ;1023
0007aa  e001              B        |L1.1968|
                  |L1.1964|
0007ac  f007040c          AND      r4,r7,#0xc            ;1023
                  |L1.1968|
0007b0  2c01              CMP      r4,#1                 ;1024
0007b2  d006              BEQ      |L1.1986|
0007b4  2c04              CMP      r4,#4                 ;1024
0007b6  d004              BEQ      |L1.1986|
;;;1028                   //guiCore_AddMessageToQueue(widget, &guiEvent_SHOW);
;;;1029           }
;;;1030           else if ((tagInRange == ITEMS_IN_RANGE_ARE_INVISIBLE) || (tagInRange == ITEMS_OUT_OF_RANGE_ARE_INVISIBLE))
0007b8  2c02              CMP      r4,#2
0007ba  d011              BEQ      |L1.2016|
0007bc  2c08              CMP      r4,#8
0007be  d00f              BEQ      |L1.2016|
0007c0  e01c              B        |L1.2044|
                  |L1.1986|
0007c2  7a01              LDRB     r1,[r0,#8]            ;1026
0007c4  06c9              LSLS     r1,r1,#27             ;1026
0007c6  d419              BMI      |L1.2044|
0007c8  6943              LDR      r3,[r0,#0x14]         ;1027
0007ca  f8d81018          LDR      r1,[r8,#0x18]         ;1027  ; guiEvent_SHOW
0007ce  9100              STR      r1,[sp,#0]            ;1027
0007d0  f8b8101c          LDRH     r1,[r8,#0x1c]         ;1027  ; guiEvent_SHOW
0007d4  f8ad1004          STRH     r1,[sp,#4]            ;1027
0007d8  e9dd1200          LDRD     r1,r2,[sp,#0]         ;1027
0007dc  4798              BLX      r3                    ;1027
                  |L1.2014|
0007de  e00d              B        |L1.2044|
                  |L1.2016|
;;;1031           {
;;;1032               if (widget->isVisible)
0007e0  7a01              LDRB     r1,[r0,#8]
0007e2  06c9              LSLS     r1,r1,#27
0007e4  d50a              BPL      |L1.2044|
;;;1033                   widget->processEvent(widget, guiEvent_HIDE);
0007e6  6943              LDR      r3,[r0,#0x14]
0007e8  f8d81012          LDR      r1,[r8,#0x12]  ; guiEvent_HIDE
0007ec  9100              STR      r1,[sp,#0]
0007ee  f8b81016          LDRH     r1,[r8,#0x16]  ; guiEvent_HIDE
0007f2  f8ad1004          STRH     r1,[sp,#4]
0007f6  e9dd1200          LDRD     r1,r2,[sp,#0]
0007fa  4798              BLX      r3
                  |L1.2044|
0007fc  1c6d              ADDS     r5,r5,#1              ;1018
0007fe  b2ed              UXTB     r5,r5                 ;1018
                  |L1.2048|
000800  7830              LDRB     r0,[r6,#0]            ;1018
000802  42a8              CMP      r0,r5                 ;1018
000804  d8c6              BHI      |L1.1940|
;;;1034                   //guiCore_AddMessageToQueue(widget, &guiEvent_HIDE);
;;;1035           }
;;;1036       }
;;;1037   }
000806  e8bd87fc          POP      {r2-r10,pc}
;;;1038   
                          ENDP

                  guiCore_DecodeWidgetTouchEvent PROC
;;;1061   
;;;1062   void guiCore_DecodeWidgetTouchEvent(guiGenericWidget_t *widget, guiEvent_t *touchEvent, widgetTouchState_t *decodedTouchState)
00080a  b570              PUSH     {r4-r6,lr}
;;;1063   {
00080c  4606              MOV      r6,r0
00080e  460d              MOV      r5,r1
000810  4614              MOV      r4,r2
;;;1064       // Convert coordinates to widget's relative
;;;1065       decodedTouchState->x = (int16_t)touchEvent->lparam;
000812  8868              LDRH     r0,[r5,#2]
000814  8020              STRH     r0,[r4,#0]
;;;1066       decodedTouchState->y = (int16_t)touchEvent->hparam;
000816  88a8              LDRH     r0,[r5,#4]
000818  8060              STRH     r0,[r4,#2]
;;;1067       guiCore_ConvertToRelativeXY(widget,&decodedTouchState->x, &decodedTouchState->y);
00081a  1ca2              ADDS     r2,r4,#2
00081c  4621              MOV      r1,r4
00081e  4630              MOV      r0,r6
000820  f7fffffe          BL       guiCore_ConvertToRelativeXY
;;;1068       decodedTouchState->state = touchEvent->spec;
000824  7868              LDRB     r0,[r5,#1]
000826  7120              STRB     r0,[r4,#4]
;;;1069       // Determine if touch point lies inside the widget
;;;1070       decodedTouchState->isInsideWidget = (guiCore_GetTouchedWidgetAtXY(widget,decodedTouchState->x, decodedTouchState->y)) ? 1 : 0;
000828  f9b42002          LDRSH    r2,[r4,#2]
00082c  f9b41000          LDRSH    r1,[r4,#0]
000830  4630              MOV      r0,r6
000832  f7fffffe          BL       guiCore_GetTouchedWidgetAtXY
000836  e003              B        |L1.2112|
                  |L1.2104|
                          DCD      ||.constdata||
                  |L1.2108|
                          DCD      ||.data||
                  |L1.2112|
000840  b108              CBZ      r0,|L1.2118|
000842  2001              MOVS     r0,#1
000844  e000              B        |L1.2120|
                  |L1.2118|
000846  2000              MOVS     r0,#0
                  |L1.2120|
000848  7160              STRB     r0,[r4,#5]
;;;1071   }
00084a  bd70              POP      {r4-r6,pc}
;;;1072   
                          ENDP

                  guiCore_DecodeContainerTouchEvent PROC
;;;1073   
;;;1074   void guiCore_DecodeContainerTouchEvent(guiGenericWidget_t *widget, guiEvent_t *touchEvent, containerTouchState_t *decodedTouchState)
00084c  b570              PUSH     {r4-r6,lr}
;;;1075   {
00084e  4606              MOV      r6,r0
000850  460d              MOV      r5,r1
000852  4614              MOV      r4,r2
;;;1076       // Convert coordinates to widget's relative
;;;1077       decodedTouchState->x = (int16_t)touchEvent->lparam;
000854  8868              LDRH     r0,[r5,#2]
000856  8020              STRH     r0,[r4,#0]
;;;1078       decodedTouchState->y = (int16_t)touchEvent->hparam;
000858  88a8              LDRH     r0,[r5,#4]
00085a  8060              STRH     r0,[r4,#2]
;;;1079       guiCore_ConvertToRelativeXY(widget,&decodedTouchState->x, &decodedTouchState->y);
00085c  1ca2              ADDS     r2,r4,#2
00085e  4621              MOV      r1,r4
000860  4630              MOV      r0,r6
000862  f7fffffe          BL       guiCore_ConvertToRelativeXY
;;;1080       decodedTouchState->state = touchEvent->spec;
000866  7868              LDRB     r0,[r5,#1]
000868  7120              STRB     r0,[r4,#4]
;;;1081       // Determine if touch point lies inside the widget
;;;1082       decodedTouchState->widgetAtXY = guiCore_GetTouchedWidgetAtXY(widget,decodedTouchState->x, decodedTouchState->y);
00086a  f9b42002          LDRSH    r2,[r4,#2]
00086e  f9b41000          LDRSH    r1,[r4,#0]
000872  4630              MOV      r0,r6
000874  f7fffffe          BL       guiCore_GetTouchedWidgetAtXY
000878  60a0              STR      r0,[r4,#8]
;;;1083   }
00087a  bd70              POP      {r4-r6,pc}
;;;1084   
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  guiTimers
                          %        16
                  guiMsgQueue
                          %        244

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  guiEvent_INIT
000000  0200              DCB      0x02,0x00
000002  0000              DCW      0x0000
000004  0000              DCW      0x0000
                  guiEvent_DRAW
000006  0100              DCB      0x01,0x00
000008  00000000          DCW      0x0000,0x0000
                  guiEvent_UPDATE
00000c  0400              DCB      0x04,0x00
00000e  0000              DCW      0x0000
000010  0000              DCW      0x0000
                  guiEvent_HIDE
000012  0600              DCB      0x06,0x00
000014  00000000          DCW      0x0000,0x0000
                  guiEvent_SHOW
000018  0700              DCB      0x07,0x00
00001a  0000              DCW      0x0000
00001c  0000              DCW      0x0000
                  guiEvent_UNFOCUS
00001e  0800              DCB      0x08,0x00
000020  00000000          DCW      0x0000,0x0000
                  guiEvent_FOCUS
000024  0900              DCB      0x09,0x00
000026  0000              DCW      0x0000
000028  0000              DCW      0x0000
00002a  0000              DCB      0x00,0x00
00002c  0d00              DCB      0x0d,0x00
00002e  0000              DCW      0x0000
000030  0000              DCW      0x0000

                          AREA ||.data||, DATA, ALIGN=2

                  rootWidget
                          DCD      0x00000000
                  focusedWidget
                          DCD      0x00000000
