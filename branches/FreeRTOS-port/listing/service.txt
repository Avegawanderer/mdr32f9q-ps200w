; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\FLASH\service.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\FLASH\service.d --cpu=Cortex-M3 --apcs=interwork -O1 -I.\src\fonts -I.\ -I.\src -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\Library\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\portable\RVDS\ARM_CM3\ -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\include -I.\src\gui -I.\src\gui\guiCore -I.\src\gui\guiWidgets -I.\src\gui\guiGraphics -I.\src\gui\utils -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\FLASH\service.crf src\service.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  vTaskService PROC
;;;18     
;;;19     void vTaskService(void *pvParameters) 
000000  b508              PUSH     {r3,lr}
;;;20     {
;;;21     	uint32_t i;
;;;22     	uint16_t cooler_speed;
;;;23     	uint16_t adc_samples;
;;;24     	
;;;25     	// Initialize
;;;26     	portTickType lastExecutionTime = xTaskGetTickCount();
000002  f7fffffe          BL       xTaskGetTickCount
000006  9000              STR      r0,[sp,#0]
;;;27     	ADC2_SetChannel(ADC_CHANNEL_CONVERTER_TEMP); 
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       ADC2_SetChannel
;;;28     	
;;;29     	while(1)
;;;30     	{
;;;31     		vTaskDelayUntil(&lastExecutionTime, ((portTickType)500 / portTICK_RATE_MS));
;;;32     		
;;;33     		// Get temparature
;;;34     		adc_samples = 0;
;;;35     		for (i=0; i<10; i++)
;;;36     		{
;;;37     			ADC2_Start();
;;;38     			vTaskDelay(2);
;;;39     			adc_samples += ADC2_GetResult();
;;;40     		}
;;;41     		converter_temp_celsius = (int16_t)( (float)adc_samples*0.1*(-0.226) + 230 );	//FIXME
00000e  4c1c              LDR      r4,|L1.128|
                  |L1.16|
000010  21fa              MOVS     r1,#0xfa              ;31
000012  4668              MOV      r0,sp                 ;31
000014  f7fffffe          BL       vTaskDelayUntil
000018  2600              MOVS     r6,#0                 ;34
00001a  2500              MOVS     r5,#0                 ;35
                  |L1.28|
00001c  f7fffffe          BL       ADC2_Start
000020  2002              MOVS     r0,#2                 ;38
000022  f7fffffe          BL       vTaskDelay
000026  f7fffffe          BL       ADC2_GetResult
00002a  4430              ADD      r0,r0,r6              ;39
00002c  b286              UXTH     r6,r0                 ;39
00002e  1c6d              ADDS     r5,r5,#1              ;35
000030  2d0a              CMP      r5,#0xa               ;35
000032  d3f3              BCC      |L1.28|
000034  4630              MOV      r0,r6
000036  f7fffffe          BL       __aeabi_ui2d
00003a  4a12              LDR      r2,|L1.132|
00003c  4b12              LDR      r3,|L1.136|
00003e  f7fffffe          BL       __aeabi_dmul
000042  4a12              LDR      r2,|L1.140|
000044  4b12              LDR      r3,|L1.144|
000046  f7fffffe          BL       __aeabi_dmul
00004a  2200              MOVS     r2,#0
00004c  4b11              LDR      r3,|L1.148|
00004e  f7fffffe          BL       __aeabi_dadd
000052  f7fffffe          BL       __aeabi_d2iz
000056  b200              SXTH     r0,r0
000058  8020              STRH     r0,[r4,#0]
;;;42     		
;;;43     		// Update cooler speed
;;;44     		cooler_speed = (converter_temp_celsius < 25) ? 50 : converter_temp_celsius * 2;
00005a  2819              CMP      r0,#0x19
00005c  da01              BGE      |L1.98|
00005e  2032              MOVS     r0,#0x32
000060  e000              B        |L1.100|
                  |L1.98|
000062  0040              LSLS     r0,r0,#1
                  |L1.100|
000064  b280              UXTH     r0,r0
;;;45     		SetCoolerSpeed(cooler_speed);
000066  f7fffffe          BL       SetCoolerSpeed
;;;46     		
;;;47     		// Send notification to GUI
;;;48     		gui_msg = GUI_TASK_UPDATE_TEMPERATURE_INDICATOR;
00006a  2012              MOVS     r0,#0x12
00006c  6060              STR      r0,[r4,#4]  ; gui_msg
;;;49     		xQueueSendToBack(xQueueGUI, &gui_msg, 0);
00006e  480a              LDR      r0,|L1.152|
000070  4903              LDR      r1,|L1.128|
000072  2300              MOVS     r3,#0
000074  461a              MOV      r2,r3
000076  1d09              ADDS     r1,r1,#4
000078  6800              LDR      r0,[r0,#0]  ; xQueueGUI
00007a  f7fffffe          BL       xQueueGenericSend
00007e  e7c7              B        |L1.16|
;;;50     	}
;;;51     	
;;;52     }
;;;53     
                          ENDP

                  |L1.128|
                          DCD      ||.data||
                  |L1.132|
                          DCD      0x9999999a
                  |L1.136|
                          DCD      0x3fb99999
                  |L1.140|
                          DCD      0x6872b021
                  |L1.144|
                          DCD      0xbfcced91
                  |L1.148|
                          DCD      0x406cc000
                  |L1.152|
                          DCD      xQueueGUI

                          AREA ||.data||, DATA, ALIGN=2

                  converter_temp_celsius
000000  0000              DCW      0x0000
000002  0000              DCB      0x00,0x00
                  gui_msg
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "src\\service.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_service_c_86e0101e____REV16|
#line 115 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_service_c_86e0101e____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_service_c_86e0101e____REVSH|
#line 130
|__asm___9_service_c_86e0101e____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
