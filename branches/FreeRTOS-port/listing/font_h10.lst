L 1 "src\gui\guiGraphics\font_h10.c"
N/*****************************************************
N    Font generation template
N*****************************************************/
N
N#include <stdint.h>
L 1 "C:\Keil\ARM\RV31\Inc\stdint.h" 1
N/* Copyright (C) ARM Ltd., 1999 */
N/* All rights reserved */
N
N/*
N * RCS $Revision: 137748 $
N * Checkin $Date: 2008-09-11 17:34:24 +0100 (Thu, 11 Sep 2008) $
N * Revising $Author: agrant $
N */
N
N#ifndef __stdint_h
N#define __stdint_h
N
N  #ifndef __STDINT_DECLS
N  #define __STDINT_DECLS
N
N    #undef __CLIBNS
N
N    #ifdef __cplusplus
S      namespace std {
S          #define __CLIBNS std::
S          extern "C" {
N    #else
N      #define __CLIBNS
N    #endif  /* __cplusplus */
N
N
N/*
N * 'signed' is redundant below, except for 'signed char' and if
N * the typedef is used to declare a bitfield.
N * '__int64' is used instead of 'long long' so that this header
N * can be used in --strict mode.
N */
N
N    /* 7.18.1.1 */
N
N    /* exact-width signed integer types */
Ntypedef   signed          char int8_t;
Ntypedef   signed short     int int16_t;
Ntypedef   signed           int int32_t;
Ntypedef   signed       __int64 int64_t;
N
N    /* exact-width unsigned integer types */
Ntypedef unsigned          char uint8_t;
Ntypedef unsigned short     int uint16_t;
Ntypedef unsigned           int uint32_t;
Ntypedef unsigned       __int64 uint64_t;
N
N    /* 7.18.1.2 */
N
N    /* smallest type of at least n bits */
N    /* minimum-width signed integer types */
Ntypedef   signed          char int_least8_t;
Ntypedef   signed short     int int_least16_t;
Ntypedef   signed           int int_least32_t;
Ntypedef   signed       __int64 int_least64_t;
N
N    /* minimum-width unsigned integer types */
Ntypedef unsigned          char uint_least8_t;
Ntypedef unsigned short     int uint_least16_t;
Ntypedef unsigned           int uint_least32_t;
Ntypedef unsigned       __int64 uint_least64_t;
N
N    /* 7.18.1.3 */
N
N    /* fastest minimum-width signed integer types */
Ntypedef   signed           int int_fast8_t;
Ntypedef   signed           int int_fast16_t;
Ntypedef   signed           int int_fast32_t;
Ntypedef   signed       __int64 int_fast64_t;
N
N    /* fastest minimum-width unsigned integer types */
Ntypedef unsigned           int uint_fast8_t;
Ntypedef unsigned           int uint_fast16_t;
Ntypedef unsigned           int uint_fast32_t;
Ntypedef unsigned       __int64 uint_fast64_t;
N
N    /* 7.18.1.4 integer types capable of holding object pointers */
Ntypedef   signed           int intptr_t;
Ntypedef unsigned           int uintptr_t;
N
N    /* 7.18.1.5 greatest-width integer types */
Ntypedef   signed       __int64 intmax_t;
Ntypedef unsigned       __int64 uintmax_t;
N
N
N#if !defined(__cplusplus) || defined(__STDC_LIMIT_MACROS)
X#if !0L || 0L
N
N    /* 7.18.2.1 */
N
N    /* minimum values of exact-width signed integer types */
N#define INT8_MIN                   -128
N#define INT16_MIN                -32768
N#define INT32_MIN          (~0x7fffffff)   /* -2147483648 is unsigned */
N#define INT64_MIN  __ESCAPE__(~0x7fffffffffffffffll) /* -9223372036854775808 is unsigned */
N
N    /* maximum values of exact-width signed integer types */
N#define INT8_MAX                    127
N#define INT16_MAX                 32767
N#define INT32_MAX            2147483647
N#define INT64_MAX  __ESCAPE__(9223372036854775807ll)
N
N    /* maximum values of exact-width unsigned integer types */
N#define UINT8_MAX                   255
N#define UINT16_MAX                65535
N#define UINT32_MAX           4294967295u
N#define UINT64_MAX __ESCAPE__(18446744073709551615ull)
N
N    /* 7.18.2.2 */
N
N    /* minimum values of minimum-width signed integer types */
N#define INT_LEAST8_MIN                   -128
N#define INT_LEAST16_MIN                -32768
N#define INT_LEAST32_MIN          (~0x7fffffff)
N#define INT_LEAST64_MIN  __ESCAPE__(~0x7fffffffffffffffll)
N
N    /* maximum values of minimum-width signed integer types */
N#define INT_LEAST8_MAX                    127
N#define INT_LEAST16_MAX                 32767
N#define INT_LEAST32_MAX            2147483647
N#define INT_LEAST64_MAX  __ESCAPE__(9223372036854775807ll)
N
N    /* maximum values of minimum-width unsigned integer types */
N#define UINT_LEAST8_MAX                   255
N#define UINT_LEAST16_MAX                65535
N#define UINT_LEAST32_MAX           4294967295u
N#define UINT_LEAST64_MAX __ESCAPE__(18446744073709551615ull)
N
N    /* 7.18.2.3 */
N
N    /* minimum values of fastest minimum-width signed integer types */
N#define INT_FAST8_MIN           (~0x7fffffff)
N#define INT_FAST16_MIN          (~0x7fffffff)
N#define INT_FAST32_MIN          (~0x7fffffff)
N#define INT_FAST64_MIN  __ESCAPE__(~0x7fffffffffffffffll)
N
N    /* maximum values of fastest minimum-width signed integer types */
N#define INT_FAST8_MAX             2147483647
N#define INT_FAST16_MAX            2147483647
N#define INT_FAST32_MAX            2147483647
N#define INT_FAST64_MAX  __ESCAPE__(9223372036854775807ll)
N
N    /* maximum values of fastest minimum-width unsigned integer types */
N#define UINT_FAST8_MAX            4294967295u
N#define UINT_FAST16_MAX           4294967295u
N#define UINT_FAST32_MAX           4294967295u
N#define UINT_FAST64_MAX __ESCAPE__(18446744073709551615ull)
N
N    /* 7.18.2.4 */
N
N    /* minimum value of pointer-holding signed integer type */
N#define INTPTR_MIN (~0x7fffffff)
N
N    /* maximum value of pointer-holding signed integer type */
N#define INTPTR_MAX   2147483647
N
N    /* maximum value of pointer-holding unsigned integer type */
N#define UINTPTR_MAX  4294967295u
N
N    /* 7.18.2.5 */
N
N    /* minimum value of greatest-width signed integer type */
N#define INTMAX_MIN  __ESCAPE__(~0x7fffffffffffffffll)
N
N    /* maximum value of greatest-width signed integer type */
N#define INTMAX_MAX  __ESCAPE__(9223372036854775807ll)
N
N    /* maximum value of greatest-width unsigned integer type */
N#define UINTMAX_MAX __ESCAPE__(18446744073709551615ull)
N
N    /* 7.18.3 */
N
N    /* limits of ptrdiff_t */
N#define PTRDIFF_MIN (~0x7fffffff)
N#define PTRDIFF_MAX   2147483647
N
N    /* limits of sig_atomic_t */
N#define SIG_ATOMIC_MIN (~0x7fffffff)
N#define SIG_ATOMIC_MAX   2147483647
N
N    /* limit of size_t */
N#define SIZE_MAX 4294967295u
N
N    /* limits of wchar_t */
N    /* NB we have to undef and redef because they're defined in both
N     * stdint.h and wchar.h */
N#undef WCHAR_MIN
N#undef WCHAR_MAX
N
N#if defined(__WCHAR32)
X#if 0L
S  #define WCHAR_MIN   0
S  #define WCHAR_MAX   0xffffffffU
N#else
N  #define WCHAR_MIN   0
N  #define WCHAR_MAX   65535
N#endif
N
N    /* limits of wint_t */
N#define WINT_MIN (~0x7fffffff)
N#define WINT_MAX 2147483647
N
N#endif /* __STDC_LIMIT_MACROS */
N
N#if !defined(__cplusplus) || defined(__STDC_CONSTANT_MACROS)
X#if !0L || 0L
N
N    /* 7.18.4.1 macros for minimum-width integer constants */
N#define INT8_C(x)   (x)
N#define INT16_C(x)  (x)
N#define INT32_C(x)  (x)
N#define INT64_C(x)  __ESCAPE__(x ## ll)
N
N#define UINT8_C(x)  (x ## u)
N#define UINT16_C(x) (x ## u)
N#define UINT32_C(x) (x ## u)
N#define UINT64_C(x) __ESCAPE__(x ## ull)
N
N    /* 7.18.4.2 macros for greatest-width integer constants */
N#define INTMAX_C(x)  __ESCAPE__(x ## ll)
N#define UINTMAX_C(x) __ESCAPE__(x ## ull)
N
N#endif /* __STDC_CONSTANT_MACROS */
N
N    #ifdef __cplusplus
S         }  /* extern "C" */
S      }  /* namespace std */
N    #endif /* __cplusplus */
N  #endif /* __STDINT_DECLS */
N
N  #ifdef __cplusplus
S    #ifndef __STDINT_NO_EXPORTS
S      using ::std::int8_t;
S      using ::std::int16_t;
S      using ::std::int32_t;
S      using ::std::int64_t;
S      using ::std::uint8_t;
S      using ::std::uint16_t;
S      using ::std::uint32_t;
S      using ::std::uint64_t;
S      using ::std::int_least8_t;
S      using ::std::int_least16_t;
S      using ::std::int_least32_t;
S      using ::std::int_least64_t;
S      using ::std::uint_least8_t;
S      using ::std::uint_least16_t;
S      using ::std::uint_least32_t;
S      using ::std::uint_least64_t;
S      using ::std::int_fast8_t;
S      using ::std::int_fast16_t;
S      using ::std::int_fast32_t;
S      using ::std::int_fast64_t;
S      using ::std::uint_fast8_t;
S      using ::std::uint_fast16_t;
S      using ::std::uint_fast32_t;
S      using ::std::uint_fast64_t;
S      using ::std::intptr_t;
S      using ::std::uintptr_t;
S      using ::std::intmax_t;
S      using ::std::uintmax_t;
S    #endif 
N  #endif /* __cplusplus */
N
N#endif /* __stdint_h */
N
N/* end of stdint.h */
N
N
L 6 "src\gui\guiGraphics\font_h10.c" 2
N#include "guiFonts.h"
L 1 "src\gui\guiGraphics\guiFonts.h" 1
N#ifndef __GUI_FONTS_H_
N#define __GUI_FONTS_H_
N
N#include <stdint.h>
N
N/*
N    A font may have all chars present, or only some subset of chars.
N    If a font has contiguous set of chars, starting with some char code,
N    it is indicated by setting charTable to 0 and defining firstCharCode value.
N    Field charCount tells how many chars the font has.
N    Accessing some char with char code c in this case is trivial and looks like this:
N        c -= font.firstCharCode;
N        char_data = font.data[c * font.bytesPerChar];
N    If a font has non-contiguous set of chars, their char codes are specified in codeTable,
N    and offset relative to font.data is specified in offsetTable.
N
N    A font may be monospaced or variable-spaced.
N    If a font is monospaced, widthTable must be set to 0. All chars will have the same width = font.width.
N    If font is variable-spaced, widthTable is used - it contains width for every char.
N
N    If font has non-contiguous set of chars, or font is variable-spaced, font processing routines need to know,
N    where particular char image is located. This information provides offsetTable.
N
N    So, a font can be one of the following:
N        - monospaced, char subset is contiguous:
N            codeTable:      -
N            widthTable:     -
N            offsetTable:    -
N        - monospaced, char subset is non-contiguous:
N            codeTable:      present
N            widthTable:     -
N            offsetTable:    present
N        - variable-spaced, char subset is contiguous:
N            codeTable:      -
N            widthTable:     present
N            offsetTable:    present
N        - variable-spaced, char subset is non-contiguous:
N            codeTable:      present
N            widthTable:     present
N            offsetTable:    present
N
N        Font MUST have valid offsetTable when codeTable or widthTable are used.
N*/
N
N
N//---------------------------------------------//
N// Fonts typedefs
N
Ntypedef struct 
N{
N    uint8_t height;                     // font chars height
N    uint8_t width;                      // actual for monospaced, ignored for variable-width fonts
N    uint8_t charCount;                  // Total number of chars in the font
N    uint8_t spacing;                    // Additional space between chars
N    uint8_t bytesPerChar;               // Actual for monospaced, ignored for variable-length fonts
N    uint8_t firstCharCode;              // Used if there is no charTable - specifies first avaliable char code in the font.
N    const uint8_t *codeTable;           // Used if not all symbols are prensent in the font. Otherwise must be 0.
N    const uint8_t *widthTable;          // Used if font is not monospaced. Otherwise must be 0.
N    const uint16_t *offsetTable;        // Used with codeTable or widthTable
N    const uint8_t *data;                // Font data - contiguous byte array
N} tFont;
N
N
Nextern const tFont font_h11;
Nextern const tFont font_h32;
Nextern const tFont font_h10;
Nextern const tFont font_h10_bold;
Nextern const tFont font_6x8_mono;
Nextern const tFont font_h16;
N
N
N#endif
L 7 "src\gui\guiGraphics\font_h10.c" 2
N
Nstatic const uint8_t font_h10_data [] =
N{
N    // symbol 0x01
N    0x78, 0xA4, 0x4A, 0x42, 0x4A, 0xA4, 0x78, 0x00,
N    0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x02
N    0x78, 0xDC, 0xB6, 0xBE, 0xB6, 0xDC, 0x78, 0x00,
N    0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x03
N    0x1C, 0x3E, 0x7E, 0xFC, 0x7E, 0x3E, 0x1C, 0x00,
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x04
N    0x10, 0x38, 0x7C, 0xFE, 0x7C, 0x38, 0x10, 0x00,
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x05
N    0x30, 0x78, 0x77, 0xBF, 0x77, 0x78, 0x30, 0x00,
N    0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x06
N    0x38, 0x7C, 0x7E, 0xBF, 0x7E, 0x7C, 0x38, 0x00,
N    0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x07
N    0x70, 0xF8, 0xF8, 0xF8, 0x70, 0x00, 0x00, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x08
N    0xFF, 0x8F, 0x07, 0x07, 0x07, 0x8F, 0xFF, 0x01,
N    0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
N
N    // symbol 0x09
N    0x70, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x0A
N    0xFF, 0x8F, 0x77, 0x77, 0x77, 0x8F, 0xFF, 0x01,
N    0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
N
N    // symbol 0x0B
N    0xE0, 0x10, 0x10, 0x1A, 0xE6, 0x0E, 0x00, 0x00,
N    0x01, 0x01, 0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0x0C
N    0x4E, 0x51, 0xF1, 0x51, 0x4E, 0x00, 0x00, 0x00,
N    0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0x0D
N    0x80, 0x80, 0xFE, 0x04, 0x38, 0x00, 0x01, 0x01,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x0E
N    0x80, 0x80, 0xFE, 0x0A, 0xC5, 0xC5, 0x7F, 0x01,
N    0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x0F
N    0x10, 0xBA, 0x44, 0xC7, 0x44, 0xBA, 0x10, 0x00,
N    0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0x10
N    0xFC, 0xF8, 0x70, 0x20, 0x00, 0x01, 0x00, 0x00,
N    0x00, 0x00,
N
N    // symbol 0x11
N    0x20, 0x70, 0xF8, 0xFC, 0x00, 0x00, 0x00, 0x00,
N    0x01, 0x00,
N
N    // symbol 0x12
N    0x44, 0xC6, 0xFF, 0xC6, 0x44, 0x00, 0x00, 0x00,
N    0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0x13
N    0xBF, 0x00, 0xBF, 0x00, 0x01, 0x00, 0x01, 0x00,
N
N    // symbol 0x14
N    0x1F, 0x11, 0xFF, 0x01, 0xFF, 0x00, 0x00, 0x01,
N    0x00, 0x01,
N
N    // symbol 0x15
N    0x96, 0x29, 0x29, 0x29, 0xD2, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x16
N    0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x17
N    0x24, 0x66, 0xFF, 0x66, 0x24, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x18
N    0x04, 0x06, 0xFF, 0x06, 0x04, 0x00, 0x00, 0x00,
N    0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0x19
N    0x40, 0xC0, 0xFF, 0xC0, 0x40, 0x00, 0x00, 0x00,
N    0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0x1A
N    0x20, 0x20, 0x20, 0xF8, 0x70, 0x20, 0x00, 0x00,
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x1B
N    0x20, 0x70, 0xF8, 0x20, 0x20, 0x20, 0x00, 0x00,
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x1C
N    0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x1D
N    0x20, 0x70, 0xF8, 0x20, 0xF8, 0x70, 0x20, 0x00,
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x1E
N    0xC0, 0xF0, 0xFC, 0xFF, 0xFC, 0xF0, 0xC0, 0x00,
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x1F
N    0x06, 0x1E, 0x7E, 0xFE, 0x7E, 0x1E, 0x06, 0x00,
N    0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0x20
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
N    0x00, 0x00,
N
N    // symbol 0x21
N    0xBF, 0x00, 0x01, 0x00,
N
N    // symbol 0x22
N    0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x23
N    0x48, 0xFE, 0x48, 0xFE, 0x48, 0x00, 0x00, 0x01,
N    0x00, 0x01, 0x00, 0x00,
N
N    // symbol 0x24
N    0x4C, 0x92, 0x93, 0x92, 0x64, 0x00, 0x00, 0x00,
N    0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0x25
N    0x84, 0x4A, 0x24, 0x90, 0x48, 0x86, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x26
N    0xF6, 0x09, 0x09, 0x09, 0xF6, 0x30, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x01,
N
N    // symbol 0x27
N    0x02, 0x06, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x28
N    0x7C, 0x82, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01,
N    0x01, 0x00,
N
N    // symbol 0x29
N    0x01, 0x01, 0x82, 0x7C, 0x00, 0x01, 0x01, 0x00,
N    0x00, 0x00,
N
N    // symbol 0x2A
N    0x54, 0x7C, 0x10, 0x7C, 0x54, 0x00, 0x00, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x2B
N    0x10, 0x10, 0x7C, 0x10, 0x10, 0x00, 0x00, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x2C
N    0x80, 0x80, 0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x2D
N    0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x2E
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x2F
N    0x00, 0x80, 0x60, 0x18, 0x06, 0x01, 0x00, 0x01,
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x30
N    0xFE, 0x01, 0x01, 0x01, 0xFE, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x31
N    0x04, 0x02, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x32
N    0x86, 0x41, 0x21, 0x11, 0x0E, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x33
N    0x82, 0x11, 0x11, 0x11, 0xEE, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x34
N    0x3E, 0x40, 0x40, 0x40, 0xFE, 0x40, 0x00, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x35
N    0x8F, 0x09, 0x09, 0x09, 0xF1, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x36
N    0xFE, 0x11, 0x11, 0x11, 0xE2, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x37
N    0x01, 0x81, 0x61, 0x19, 0x07, 0x00, 0x00, 0x01,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x38
N    0xEE, 0x11, 0x11, 0x11, 0xEE, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x39
N    0x0E, 0x11, 0x11, 0x91, 0x7E, 0x00, 0x01, 0x01,
N    0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0x3A
N    0x88, 0x00, 0x00, 0x00,
N
N    // symbol 0x3B
N    0xC8, 0x00, 0x00, 0x00,
N
N    // symbol 0x3C
N    0x10, 0x28, 0x44, 0x82, 0x01, 0x00, 0x00, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x3D
N    0x48, 0x48, 0x48, 0x48, 0x48, 0x00, 0x00, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x3E
N    0x01, 0x82, 0x44, 0x28, 0x10, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x3F
N    0x06, 0xA1, 0x11, 0x11, 0x0E, 0x00, 0x00, 0x01,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x40
N    0x7C, 0x82, 0x01, 0x39, 0x45, 0x3E, 0x00, 0x00,
N    0x01, 0x01, 0x01, 0x01,
N
N    // symbol 0x41
N    0xFC, 0x22, 0x21, 0x22, 0xFC, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x42
N    0xFF, 0x11, 0x11, 0x11, 0xEE, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x43
N    0xFE, 0x01, 0x01, 0x01, 0xC6, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x44
N    0xFF, 0x01, 0x01, 0x01, 0xFE, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x45
N    0xFF, 0x11, 0x11, 0x11, 0x01, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x46
N    0xFF, 0x11, 0x11, 0x11, 0x01, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x47
N    0xFE, 0x01, 0x01, 0x21, 0xE2, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x48
N    0xFF, 0x10, 0x10, 0x10, 0xFF, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x49
N    0x01, 0xFF, 0x01, 0x00, 0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x4A
N    0xC0, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x4B
N    0xFF, 0x10, 0x10, 0x28, 0xC7, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x4C
N    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x4D
N    0xFF, 0x0C, 0x70, 0x70, 0x0C, 0xFF, 0x01, 0x00,
N    0x00, 0x00, 0x00, 0x01,
N
N    // symbol 0x4E
N    0xFF, 0x08, 0x10, 0x20, 0x40, 0xFF, 0x01, 0x00,
N    0x00, 0x00, 0x00, 0x01,
N
N    // symbol 0x4F
N    0xFE, 0x01, 0x01, 0x01, 0xFE, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x50
N    0xFF, 0x11, 0x11, 0x11, 0x0E, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x51
N    0xFE, 0x01, 0x01, 0x01, 0xFE, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x01, 0x03,
N
N    // symbol 0x52
N    0xFF, 0x11, 0x11, 0x31, 0xCE, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x53
N    0xCE, 0x11, 0x11, 0x11, 0xE6, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x54
N    0x01, 0x01, 0xFF, 0x01, 0x01, 0x00, 0x00, 0x00,
N    0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0x55
N    0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x56
N    0x7F, 0x80, 0x00, 0x80, 0x7F, 0x00, 0x00, 0x00,
N    0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0x57
N    0x7F, 0x80, 0x7C, 0x80, 0x7F, 0x00, 0x00, 0x01,
N    0x00, 0x01, 0x00, 0x00,
N
N    // symbol 0x58
N    0xC7, 0x28, 0x10, 0x28, 0xC7, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x59
N    0x0F, 0x10, 0xE0, 0x10, 0x0F, 0x00, 0x00, 0x00,
N    0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0x5A
N    0x81, 0x41, 0x39, 0x05, 0x03, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x5B
N    0xFF, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x5C
N    0x03, 0x0C, 0x30, 0xC0, 0x00, 0x00, 0x00, 0x00,
N    0x01, 0x00,
N
N    // symbol 0x5D
N    0x01, 0x01, 0xFF, 0x00, 0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x5E
N    0x04, 0x02, 0x01, 0x02, 0x04, 0x00, 0x00, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x5F
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
N    0x02, 0x02, 0x02, 0x00,
N
N    // symbol 0x60
N    0x07, 0x03, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x61
N    0xC0, 0x28, 0x28, 0x28, 0xF0, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x62
N    0xFF, 0x08, 0x08, 0x08, 0xF0, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x63
N    0xF0, 0x08, 0x08, 0x08, 0x90, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x64
N    0xF0, 0x08, 0x08, 0x08, 0xFF, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x65
N    0xF0, 0x48, 0x48, 0x48, 0x70, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x66
N    0x08, 0xFE, 0x09, 0x09, 0x01, 0x00, 0x00, 0x01,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x67
N    0x30, 0x48, 0x48, 0x48, 0xF0, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x68
N    0xFF, 0x08, 0x08, 0x08, 0xF0, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x69
N    0x09, 0xF9, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x6A
N    0x80, 0x00, 0x0A, 0xFA, 0x00, 0x00, 0x01, 0x01,
N    0x00, 0x00,
N
N    // symbol 0x6B
N    0xFF, 0x20, 0x20, 0xD0, 0x08, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x6C
N    0x01, 0xFF, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x6D
N    0xF8, 0x10, 0xE0, 0x10, 0xF8, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x6E
N    0xF8, 0x08, 0x08, 0x08, 0xF0, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x6F
N    0xF0, 0x08, 0x08, 0x08, 0xF0, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x70
N    0xF8, 0x48, 0x48, 0x48, 0x30, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x71
N    0x30, 0x48, 0x48, 0x48, 0xF8, 0x00, 0x00, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x72
N    0xF8, 0x10, 0x08, 0x08, 0x10, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x73
N    0x10, 0x28, 0x28, 0x28, 0xC8, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x74
N    0x08, 0xFE, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x75
N    0xF8, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x76
N    0x78, 0x80, 0x00, 0x80, 0x78, 0x00, 0x00, 0x00,
N    0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0x77
N    0xF8, 0x80, 0xF0, 0x80, 0xF8, 0x00, 0x00, 0x01,
N    0x00, 0x01, 0x00, 0x00,
N
N    // symbol 0x78
N    0x08, 0x90, 0x60, 0x90, 0x08, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x79
N    0x38, 0x40, 0x40, 0x40, 0xF8, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0x7A
N    0x88, 0x48, 0x48, 0x28, 0x18, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x7B
N    0x10, 0xEE, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0x7C
N    0xCF, 0x00, 0x01, 0x00,
N
N    // symbol 0x7D
N    0x01, 0x01, 0xEE, 0x10, 0x00, 0x01, 0x01, 0x00,
N    0x00, 0x00,
N
N    // symbol 0x7E
N    0x06, 0x02, 0x07, 0x02, 0x03, 0x00, 0x00, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x7F
N    0xF0, 0x88, 0x84, 0x88, 0xF0, 0x00, 0x00, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x80
N    0x44, 0x00, 0x11, 0x44, 0x00, 0x11, 0x00, 0x00,
N    0x00, 0x01, 0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x81
N    0xAA, 0x00, 0x55, 0xAA, 0x00, 0x55, 0x00, 0x00,
N    0x00, 0x01, 0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0x82
N    0xAA, 0x55, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0x00,
N    0x01, 0x01, 0x00, 0x01, 0x00, 0x01,
N
N    // symbol 0x83
N    0xFF, 0x00, 0x01, 0x00,
N
N    // symbol 0x84
N    0x20, 0x20, 0x20, 0xFF, 0x00, 0x00, 0x00, 0x00,
N    0x01, 0x00,
N
N    // symbol 0x85
N    0x50, 0x50, 0x50, 0xFF, 0x00, 0x00, 0x00, 0x00,
N    0x01, 0x00,
N
N    // symbol 0x86
N    0x20, 0x20, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00,
N    0x01, 0x00, 0x01, 0x00,
N
N    // symbol 0x87
N    0x20, 0x20, 0xE0, 0x20, 0xE0, 0x00, 0x00, 0x00,
N    0x01, 0x00, 0x01, 0x00,
N
N    // symbol 0x88
N    0x50, 0x50, 0x50, 0xF0, 0x00, 0x00, 0x00, 0x00,
N    0x01, 0x00,
N
N    // symbol 0x89
N    0x50, 0x50, 0xDF, 0x00, 0xFF, 0x00, 0x00, 0x00,
N    0x01, 0x00, 0x01, 0x00,
N
N    // symbol 0x8A
N    0xFF, 0x00, 0xFF, 0x00, 0x01, 0x00, 0x01, 0x00,
N
N    // symbol 0x8B
N    0x50, 0x50, 0xD0, 0x10, 0xF0, 0x00, 0x00, 0x00,
N    0x01, 0x00, 0x01, 0x00,
N
N    // symbol 0x8C
N    0x50, 0x50, 0x5F, 0x40, 0x7F, 0x00, 0x00, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x8D
N    0x20, 0x20, 0x3F, 0x20, 0x3F, 0x00, 0x00, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x8E
N    0x50, 0x50, 0x50, 0x7F, 0x00, 0x00, 0x00, 0x00,
N    0x00, 0x00,
N
N    // symbol 0x8F
N    0x20, 0x20, 0x20, 0xE0, 0x00, 0x00, 0x00, 0x00,
N    0x01, 0x00,
N
N    // symbol 0x90
N    0x3F, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x91
N    0x20, 0x20, 0x20, 0x3F, 0x20, 0x20, 0x20, 0x00,
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x92
N    0x20, 0x20, 0x20, 0xE0, 0x20, 0x20, 0x20, 0x00,
N    0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0x93
N    0xFF, 0x20, 0x20, 0x20, 0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0x94
N    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x95
N    0x20, 0x20, 0x20, 0xFF, 0x20, 0x20, 0x20, 0x00,
N    0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0x96
N    0xFF, 0x50, 0x50, 0x50, 0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0x97
N    0xFF, 0x00, 0xFF, 0x20, 0x20, 0x01, 0x00, 0x01,
N    0x00, 0x00,
N
N    // symbol 0x98
N    0x7F, 0x40, 0x5F, 0x50, 0x50, 0x00, 0x00, 0x00,
N    0x00, 0x00,
N
N    // symbol 0x99
N    0xF0, 0x10, 0xD0, 0x50, 0x50, 0x01, 0x00, 0x01,
N    0x00, 0x00,
N
N    // symbol 0x9A
N    0x50, 0x50, 0x5F, 0x40, 0x5F, 0x50, 0x50, 0x00,
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x9B
N    0x50, 0x50, 0xD0, 0x10, 0xD0, 0x50, 0x50, 0x00,
N    0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
N
N    // symbol 0x9C
N    0xFF, 0x00, 0xDF, 0x50, 0x50, 0x01, 0x00, 0x01,
N    0x00, 0x00,
N
N    // symbol 0x9D
N    0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x00,
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0x9E
N    0x50, 0x50, 0xDF, 0x00, 0xDF, 0x50, 0x50, 0x00,
N    0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
N
N    // symbol 0x9F
N    0x50, 0x50, 0x50, 0x5F, 0x50, 0x50, 0x50, 0x00,
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0xA0
N    0x20, 0x20, 0x3F, 0x20, 0x3F, 0x20, 0x20, 0x00,
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0xA1
N    0x50, 0x50, 0x50, 0xD0, 0x50, 0x50, 0x50, 0x00,
N    0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0xA2
N    0x20, 0x20, 0xE0, 0x20, 0xE0, 0x20, 0x20, 0x00,
N    0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
N
N    // symbol 0xA3
N    0x3F, 0x20, 0x3F, 0x20, 0x20, 0x00, 0x00, 0x00,
N    0x00, 0x00,
N
N    // symbol 0xA4
N    0x7F, 0x50, 0x50, 0x50, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0xA5
N    0xF0, 0x50, 0x50, 0x50, 0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0xA6
N    0xE0, 0x20, 0xE0, 0x20, 0x20, 0x01, 0x00, 0x01,
N    0x00, 0x00,
N
N    // symbol 0xA7
N    0x20, 0x20, 0xFF, 0x00, 0xFF, 0x20, 0x20, 0x00,
N    0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
N
N    // symbol 0xA8
N    0xFD, 0x25, 0x24, 0x25, 0x05, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0xA9
N    0x50, 0x50, 0x50, 0xDF, 0x50, 0x50, 0x50, 0x00,
N    0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0xAA
N    0x20, 0x20, 0x20, 0x3F, 0x00, 0x00, 0x00, 0x00,
N    0x00, 0x00,
N
N    // symbol 0xAB
N    0xE0, 0x20, 0x20, 0x20, 0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0xAC
N    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01,
N    0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
N
N    // symbol 0xAD
N    0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x01,
N    0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
N
N    // symbol 0xAE
N    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0x01, 0x01,
N    0x01, 0x00,
N
N    // symbol 0xAF
N    0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x01, 0x01,
N
N    // symbol 0xB0
N    0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x00,
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0xB1
N    0xFE, 0x11, 0x11, 0x11, 0x82, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xB2
N    0xF0, 0x28, 0x28, 0x08, 0x90, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xB3
N    0x01, 0x01, 0xFC, 0x01, 0x01, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xB4
N    0x02, 0x0A, 0x08, 0xFA, 0x02, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0xB5
N    0x78, 0x84, 0x30, 0x30, 0x84, 0x78, 0x00, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0xB6
N    0x38, 0x42, 0x44, 0x42, 0xF8, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xB7
N    0x0E, 0x11, 0x11, 0x0E, 0x00, 0x00, 0x00, 0x00,
N    0x00, 0x00,
N
N    // symbol 0xB8
N    0xF0, 0x2B, 0x28, 0x2B, 0xB0, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xB9
N    0x08, 0x1C, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0xBA
N    0x30, 0x30, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0xBB
N    0x40, 0x80, 0x00, 0xFE, 0x02, 0x02, 0x00, 0x00,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xBC
N    0xFF, 0x04, 0x38, 0x40, 0xFF, 0x19, 0x00, 0x01,
N    0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
N
N    // symbol 0xBD
N    0x74, 0x88, 0x04, 0x04, 0x88, 0x74, 0x00, 0x01,
N    0x00, 0x01, 0x01, 0x00, 0x01, 0x00,
N
N    // symbol 0xBE
N    0x38, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0xBF
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
N    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0xC0
N    0xFC, 0x22, 0x21, 0x22, 0xFC, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xC1
N    0xFF, 0x09, 0x09, 0x09, 0xF1, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xC2
N    0xFF, 0x11, 0x11, 0x11, 0xEE, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xC3
N    0xFF, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0xC4
N    0x00, 0xFE, 0x01, 0x01, 0x01, 0xFF, 0x00, 0x01,
N    0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
N
N    // symbol 0xC5
N    0xFF, 0x11, 0x11, 0x11, 0x01, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0xC6
N    0xEF, 0x10, 0xFF, 0x10, 0xEF, 0x00, 0x01, 0x00,
N    0x01, 0x00, 0x01, 0x00,
N
N    // symbol 0xC7
N    0x82, 0x11, 0x11, 0x11, 0xEE, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xC8
N    0xFF, 0x40, 0x30, 0x08, 0xFF, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xC9
N    0xFF, 0x40, 0x33, 0x08, 0xFF, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xCA
N    0xFF, 0x10, 0x10, 0x28, 0xC7, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xCB
N    0xFE, 0x01, 0x01, 0x01, 0xFF, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xCC
N    0xFF, 0x0C, 0x70, 0x0C, 0xFF, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xCD
N    0xFF, 0x10, 0x10, 0x10, 0xFF, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xCE
N    0xFE, 0x01, 0x01, 0x01, 0xFE, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xCF
N    0xFF, 0x01, 0x01, 0x01, 0xFF, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xD0
N    0xFF, 0x11, 0x11, 0x11, 0x0E, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0xD1
N    0xFE, 0x01, 0x01, 0x01, 0xC6, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xD2
N    0x01, 0x01, 0xFF, 0x01, 0x01, 0x00, 0x00, 0x00,
N    0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0xD3
N    0x8F, 0x10, 0x10, 0x10, 0xFF, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xD4
N    0x3C, 0x42, 0xFF, 0x42, 0x3C, 0x00, 0x00, 0x00,
N    0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0xD5
N    0xC7, 0x28, 0x10, 0x28, 0xC7, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xD6
N    0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x01, 0x01,
N
N    // symbol 0xD7
N    0x0F, 0x10, 0x10, 0x10, 0xFF, 0x00, 0x00, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xD8
N    0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0xD9
N    0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x01, 0x01,
N
N    // symbol 0xDA
N    0x01, 0xFF, 0x08, 0x08, 0x08, 0xF0, 0x00, 0x00,
N    0x01, 0x01, 0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xDB
N    0xFF, 0x10, 0xE0, 0x00, 0xFF, 0x00, 0x01, 0x01,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xDC
N    0xFF, 0x08, 0x08, 0x08, 0xF0, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xDD
N    0x82, 0x11, 0x11, 0x11, 0xFE, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xDE
N    0xFF, 0x18, 0xFF, 0x01, 0xFF, 0x00, 0x01, 0x00,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0xDF
N    0xEE, 0x11, 0x11, 0x11, 0xFF, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xE0
N    0xC0, 0x28, 0x28, 0x28, 0xF0, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0xE1
N    0xF8, 0x24, 0x24, 0x24, 0xC2, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xE2
N    0xF8, 0x28, 0x28, 0x28, 0xD0, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xE3
N    0xF8, 0x08, 0x08, 0x08, 0x08, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0xE4
N    0x00, 0xF0, 0x08, 0x08, 0x08, 0xF8, 0x00, 0x01,
N    0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
N
N    // symbol 0xE5
N    0xF0, 0x28, 0x28, 0x28, 0xB0, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xE6
N    0xD8, 0x20, 0xF8, 0x20, 0xD8, 0x00, 0x01, 0x00,
N    0x01, 0x00, 0x01, 0x00,
N
N    // symbol 0xE7
N    0x90, 0x08, 0x28, 0x28, 0xD0, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xE8
N    0xF8, 0x80, 0x40, 0x20, 0xF8, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xE9
N    0xF8, 0x80, 0x44, 0x22, 0xF8, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xEA
N    0xF8, 0x20, 0x20, 0x50, 0x88, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xEB
N    0xF0, 0x08, 0x08, 0x08, 0xF8, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xEC
N    0xF8, 0x10, 0x60, 0x10, 0xF8, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xED
N    0xF8, 0x20, 0x20, 0x20, 0xF8, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xEE
N    0xF0, 0x08, 0x08, 0x08, 0xF0, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xEF
N    0xF8, 0x08, 0x08, 0x08, 0xF8, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xF0
N    0xF8, 0x48, 0x48, 0x48, 0x30, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x00, 0x00,
N
N    // symbol 0xF1
N    0xF0, 0x08, 0x08, 0x08, 0x90, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xF2
N    0x08, 0x08, 0xF8, 0x08, 0x08, 0x00, 0x00, 0x00,
N    0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0xF3
N    0x38, 0x40, 0x40, 0x40, 0xF8, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xF4
N    0x30, 0x48, 0xF8, 0x48, 0x30, 0x00, 0x00, 0x00,
N    0x01, 0x00, 0x00, 0x00,
N
N    // symbol 0xF5
N    0x08, 0x90, 0x60, 0x90, 0x08, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xF6
N    0xF8, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x01, 0x01,
N
N    // symbol 0xF7
N    0x38, 0x40, 0x40, 0x40, 0xF8, 0x00, 0x00, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N    // symbol 0xF8
N    0xF8, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0xF9
N    0xF8, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x01, 0x01,
N
N    // symbol 0xFA
N    0x08, 0xF8, 0x20, 0x20, 0x20, 0xC0, 0x00, 0x00,
N    0x01, 0x01, 0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xFB
N    0xF8, 0x20, 0xE0, 0x00, 0xF8, 0x00, 0x01, 0x01,
N    0x01, 0x00, 0x01, 0x00,
N
N    // symbol 0xFC
N    0xF8, 0x20, 0x20, 0x20, 0xC0, 0x00, 0x01, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xFD
N    0x90, 0x08, 0x28, 0x28, 0xF0, 0x00, 0x00, 0x01,
N    0x01, 0x01, 0x00, 0x00,
N
N    // symbol 0xFE
N    0xF8, 0x20, 0xF8, 0x08, 0xF8, 0x00, 0x01, 0x00,
N    0x01, 0x01, 0x01, 0x00,
N
N    // symbol 0xFF
N    0xB0, 0x48, 0x48, 0x48, 0xF8, 0x00, 0x01, 0x00,
N    0x00, 0x00, 0x01, 0x00,
N
N};
N
N
Nstatic const uint8_t font_h10_width_table[255] =
N{
N    7,
N    7,
N    7,
N    7,
N    7,
N    7,
N    6,
N    7,
N    6,
N    7,
N    7,
N    6,
N    6,
N    7,
N    7,
N    5,
N    5,
N    6,
N    4,
N    5,
N    6,
N    6,
N    6,
N    6,
N    6,
N    7,
N    7,
N    6,
N    7,
N    7,
N    7,
N    5,
N    2,
N    4,
N    6,
N    6,
N    6,
N    6,
N    3,
N    5,
N    5,
N    6,
N    6,
N    3,
N    4,
N    2,
N    7,
N    6,
N    4,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    2,
N    2,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    4,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    4,
N    5,
N    4,
N    6,
N    6,
N    3,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    4,
N    5,
N    6,
N    4,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    2,
N    5,
N    6,
N    6,
N    7,
N    7,
N    7,
N    2,
N    5,
N    5,
N    6,
N    6,
N    5,
N    6,
N    4,
N    6,
N    6,
N    6,
N    5,
N    5,
N    4,
N    7,
N    7,
N    4,
N    7,
N    7,
N    4,
N    5,
N    5,
N    5,
N    7,
N    7,
N    5,
N    7,
N    7,
N    7,
N    7,
N    7,
N    7,
N    5,
N    4,
N    4,
N    5,
N    7,
N    6,
N    7,
N    5,
N    4,
N    7,
N    7,
N    5,
N    4,
N    7,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    5,
N    6,
N    4,
N    3,
N    6,
N    7,
N    7,
N    4,
N    7,
N    6,
N    6,
N    6,
N    6,
N    7,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    7,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    7,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    6,
N    7,
N    6,
N    6,
N    6,
N    6,
N    6,
N};
N
Nstatic const uint16_t font_h10_offset_table[255] =
N{
N    0,
N    14,
N    28,
N    42,
N    56,
N    70,
N    84,
N    96,
N    110,
N    122,
N    136,
N    150,
N    162,
N    174,
N    188,
N    202,
N    212,
N    222,
N    234,
N    242,
N    252,
N    264,
N    276,
N    288,
N    300,
N    312,
N    326,
N    340,
N    352,
N    366,
N    380,
N    394,
N    404,
N    408,
N    416,
N    428,
N    440,
N    452,
N    464,
N    470,
N    480,
N    490,
N    502,
N    514,
N    520,
N    528,
N    532,
N    546,
N    558,
N    566,
N    578,
N    590,
N    602,
N    614,
N    626,
N    638,
N    650,
N    662,
N    666,
N    670,
N    682,
N    694,
N    706,
N    718,
N    730,
N    742,
N    754,
N    766,
N    778,
N    790,
N    802,
N    814,
N    826,
N    834,
N    846,
N    858,
N    870,
N    882,
N    894,
N    906,
N    918,
N    930,
N    942,
N    954,
N    966,
N    978,
N    990,
N    1002,
N    1014,
N    1026,
N    1038,
N    1046,
N    1056,
N    1064,
N    1076,
N    1088,
N    1094,
N    1106,
N    1118,
N    1130,
N    1142,
N    1154,
N    1166,
N    1178,
N    1190,
N    1198,
N    1208,
N    1220,
N    1228,
N    1240,
N    1252,
N    1264,
N    1276,
N    1288,
N    1300,
N    1312,
N    1324,
N    1336,
N    1348,
N    1360,
N    1372,
N    1384,
N    1396,
N    1408,
N    1412,
N    1422,
N    1434,
N    1446,
N    1460,
N    1474,
N    1488,
N    1492,
N    1502,
N    1512,
N    1524,
N    1536,
N    1546,
N    1558,
N    1566,
N    1578,
N    1590,
N    1602,
N    1612,
N    1622,
N    1630,
N    1644,
N    1658,
N    1666,
N    1680,
N    1694,
N    1702,
N    1712,
N    1722,
N    1732,
N    1746,
N    1760,
N    1770,
N    1784,
N    1798,
N    1812,
N    1826,
N    1840,
N    1854,
N    1864,
N    1872,
N    1880,
N    1890,
N    1904,
N    1916,
N    1930,
N    1940,
N    1948,
N    1962,
N    1976,
N    1986,
N    1994,
N    2008,
N    2020,
N    2032,
N    2044,
N    2056,
N    2068,
N    2080,
N    2090,
N    2102,
N    2110,
N    2116,
N    2128,
N    2142,
N    2156,
N    2164,
N    2178,
N    2190,
N    2202,
N    2214,
N    2226,
N    2240,
N    2252,
N    2264,
N    2276,
N    2288,
N    2300,
N    2312,
N    2324,
N    2336,
N    2348,
N    2360,
N    2372,
N    2384,
N    2396,
N    2408,
N    2420,
N    2432,
N    2444,
N    2456,
N    2468,
N    2480,
N    2492,
N    2506,
N    2518,
N    2530,
N    2542,
N    2554,
N    2566,
N    2578,
N    2590,
N    2602,
N    2614,
N    2628,
N    2640,
N    2652,
N    2664,
N    2676,
N    2688,
N    2700,
N    2712,
N    2724,
N    2736,
N    2748,
N    2760,
N    2772,
N    2784,
N    2796,
N    2808,
N    2820,
N    2832,
N    2844,
N    2856,
N    2868,
N    2880,
N    2894,
N    2906,
N    2918,
N    2930,
N    2942,
N};
N
N
Nconst tFont font_h10 =
N{
N    10,                     // font height
N    0,                      // font width - not used with variable width
N    255,          // total chars count
N    0,                      // spacing
N    0,                      // bytesPerChar - not used with variable width
N    1,                      // firstCharCode - not used with code table
N    0,                      // character code table
N    font_h10_width_table,   // character width table
N    font_h10_offset_table,	// offset table
N    font_h10_data           // font data
N};
N
