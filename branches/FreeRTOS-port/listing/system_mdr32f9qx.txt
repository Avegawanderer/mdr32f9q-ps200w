; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list -c --asm --interleave -o.\FLASH\system_mdr32f9qx.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\FLASH\system_mdr32f9qx.d --cpu=Cortex-M3 --apcs=interwork -O1 -I.\src\fonts -I.\ -I.\src -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\Library\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\portable\RVDS\ARM_CM3\ -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source -I..\Library\FreeRTOSV7.5.3\FreeRTOS\Source\include -I.\src\gui -I.\src\gui\guiCore -I.\src\gui\guiWidgets -I.\src\gui\guiGraphics -I.\src\gui\utils -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\FLASH\system_mdr32f9qx.crf ..\Library\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm\system_MDR32F9Qx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;62       */
;;;63     void SystemCoreClockUpdate (void)
000000  b510              PUSH     {r4,lr}
;;;64     {
;;;65       uint32_t cpu_c1_freq, cpu_c2_freq, cpu_c3_freq;
;;;66       uint32_t pll_mul;
;;;67     
;;;68       /* Compute CPU_CLK frequency */
;;;69     
;;;70       /* Determine CPU_C1 frequency */
;;;71       if ((MDR_RST_CLK->CPU_CLOCK & (uint32_t)0x00000002) == (uint32_t)0x00000002)
000002  4b1f              LDR      r3,|L1.128|
000004  68d8              LDR      r0,[r3,#0xc]
;;;72       {
;;;73         cpu_c1_freq = HSE_Value;
;;;74       }
;;;75       else
;;;76       {
;;;77         cpu_c1_freq = HSI_Value;
000006  4c1f              LDR      r4,|L1.132|
000008  0780              LSLS     r0,r0,#30             ;71
00000a  d501              BPL      |L1.16|
00000c  1060              ASRS     r0,r4,#1              ;73
00000e  e000              B        |L1.18|
                  |L1.16|
000010  4620              MOV      r0,r4
                  |L1.18|
;;;78       }
;;;79     
;;;80       if ((MDR_RST_CLK->CPU_CLOCK & (uint32_t)0x00000001) == (uint32_t)0x00000001)
000012  68d9              LDR      r1,[r3,#0xc]
000014  07c9              LSLS     r1,r1,#31
000016  d000              BEQ      |L1.26|
;;;81       {
;;;82         cpu_c1_freq /= 2;
000018  0840              LSRS     r0,r0,#1
                  |L1.26|
;;;83       }
;;;84     
;;;85       /* Determine CPU_C2 frequency */
;;;86       cpu_c2_freq = cpu_c1_freq;
;;;87     
;;;88       if ((MDR_RST_CLK->CPU_CLOCK & (uint32_t)0x00000004) == (uint32_t)0x00000004)
00001a  68d9              LDR      r1,[r3,#0xc]
00001c  0749              LSLS     r1,r1,#29
00001e  d504              BPL      |L1.42|
;;;89       {
;;;90         /* Determine CPU PLL output frequency */
;;;91         pll_mul = ((MDR_RST_CLK->PLL_CONTROL >> 8) & (uint32_t)0x0F) + 1;
000020  6859              LDR      r1,[r3,#4]
000022  f3c12103          UBFX     r1,r1,#8,#4
000026  1c49              ADDS     r1,r1,#1
;;;92         cpu_c2_freq *= pll_mul;
000028  4348              MULS     r0,r1,r0
                  |L1.42|
;;;93       }
;;;94     
;;;95       /*Select CPU_CLK from HSI, CPU_C3, LSE, LSI cases */
;;;96       switch ((MDR_RST_CLK->CPU_CLOCK >> 8) & (uint32_t)0x03)
00002a  68d9              LDR      r1,[r3,#0xc]
;;;97       {
;;;98         case 0 :
;;;99           /* HSI */
;;;100          SystemCoreClock = HSI_Value;
00002c  4a16              LDR      r2,|L1.136|
00002e  f3c12101          UBFX     r1,r1,#8,#2           ;96
000032  b139              CBZ      r1,|L1.68|
000034  2901              CMP      r1,#1                 ;96
000036  d007              BEQ      |L1.72|
000038  2902              CMP      r1,#2                 ;96
00003a  d00d              BEQ      |L1.88|
;;;101          break;
;;;102        case 1 :
;;;103          /* CPU_C3 */
;;;104          /* Determine CPU_C3 frequency */
;;;105          cpu_c3_freq = cpu_c2_freq / ((MDR_RST_CLK->CPU_CLOCK >> 4 & (uint32_t)0x0F) + 1);
;;;106          SystemCoreClock = cpu_c3_freq;
;;;107          break;
;;;108        case 2 :
;;;109          /* LSE */
;;;110          SystemCoreClock = LSE_Value;
;;;111          break;
;;;112        default : /* case 3 */
;;;113          /* LSI */
;;;114          SystemCoreClock = LSI_Value;
00003c  f6494040          MOV      r0,#0x9c40
000040  6010              STR      r0,[r2,#0]  ; SystemCoreClock
;;;115          break;
;;;116      }
;;;117    }
000042  bd10              POP      {r4,pc}
                  |L1.68|
000044  6014              STR      r4,[r2,#0]            ;100  ; SystemCoreClock
000046  bd10              POP      {r4,pc}
                  |L1.72|
000048  68d9              LDR      r1,[r3,#0xc]          ;105
00004a  f3c11103          UBFX     r1,r1,#4,#4           ;105
00004e  1c49              ADDS     r1,r1,#1              ;105
000050  fbb0f0f1          UDIV     r0,r0,r1              ;105
000054  6010              STR      r0,[r2,#0]            ;106  ; SystemCoreClock
000056  bd10              POP      {r4,pc}
                  |L1.88|
000058  f44f4000          MOV      r0,#0x8000            ;110
00005c  6010              STR      r0,[r2,#0]            ;110  ; SystemCoreClock
00005e  bd10              POP      {r4,pc}
;;;118    
                          ENDP

                  SystemInit PROC
;;;126      */
;;;127    void SystemInit (void)
000060  4807              LDR      r0,|L1.128|
;;;128    {
;;;129    	/* Reset the RST clock configuration to the default reset state */
;;;130    
;;;131      /* Reset all clock but RST_CLK & BKP_CLC bits */
;;;132      MDR_RST_CLK->PER_CLOCK   = (uint32_t)0x8000010;
000062  490a              LDR      r1,|L1.140|
000064  61c1              STR      r1,[r0,#0x1c]
;;;133    
;;;134      /* Reset CPU_CLOCK bits */
;;;135      MDR_RST_CLK->CPU_CLOCK   &= (uint32_t)0x00000000;
000066  68c1              LDR      r1,[r0,#0xc]
000068  2100              MOVS     r1,#0
00006a  60c1              STR      r1,[r0,#0xc]
;;;136    
;;;137      /* Reset PLL_CONTROL bits */
;;;138      MDR_RST_CLK->PLL_CONTROL &= (uint32_t)0x00000000;
00006c  6842              LDR      r2,[r0,#4]
00006e  6041              STR      r1,[r0,#4]
;;;139    
;;;140      /* Reset HSEON and HSEBYP bits */
;;;141      MDR_RST_CLK->HS_CONTROL  &= (uint32_t)0x00000000;
000070  6882              LDR      r2,[r0,#8]
000072  6081              STR      r1,[r0,#8]
;;;142    
;;;143      /* Reset USB_CLOCK bits */
;;;144      MDR_RST_CLK->USB_CLOCK   &= (uint32_t)0x00000000;
000074  6902              LDR      r2,[r0,#0x10]
000076  6101              STR      r1,[r0,#0x10]
;;;145    
;;;146      /* Reset ADC_MCO_CLOCK bits */
;;;147      MDR_RST_CLK->ADC_MCO_CLOCK   &= (uint32_t)0x00000000;
000078  6942              LDR      r2,[r0,#0x14]
00007a  6141              STR      r1,[r0,#0x14]
;;;148    
;;;149      SystemCoreClockUpdate();
00007c  e7fe              B        SystemCoreClockUpdate
;;;150    }
;;;151    
                          ENDP

00007e  0000              DCW      0x0000
                  |L1.128|
                          DCD      0x40020000
                  |L1.132|
                          DCD      0x007a1200
                  |L1.136|
                          DCD      ||.data||
                  |L1.140|
                          DCD      0x08000010

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x007a1200

;*** Start embedded assembler ***

#line 1 "..\\Library\\Libraries\\CMSIS\\CM3\\DeviceSupport\\MDR32F9Qx\\startup\\arm\\system_MDR32F9Qx.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___18_system_MDR32F9Qx_c_5d646a67____REV16|
#line 115 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___18_system_MDR32F9Qx_c_5d646a67____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___18_system_MDR32F9Qx_c_5d646a67____REVSH|
#line 130
|__asm___18_system_MDR32F9Qx_c_5d646a67____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
